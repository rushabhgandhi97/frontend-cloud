{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/rajatraghuwanshi/Documents/Cloud Project/frontend/frontend-cloud/node_modules/@babel/runtime/regenerator\");\n\nvar _slicedToArray = require(\"/Users/rajatraghuwanshi/Documents/Cloud Project/frontend/frontend-cloud/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _classCallCheck = require(\"/Users/rajatraghuwanshi/Documents/Cloud Project/frontend/frontend-cloud/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/rajatraghuwanshi/Documents/Cloud Project/frontend/frontend-cloud/node_modules/@babel/runtime/helpers/createClass\");\n\nvar QuickLRU = /*#__PURE__*/function () {\n  function QuickLRU() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, QuickLRU);\n\n    if (!(options.maxSize && options.maxSize > 0)) {\n      throw new TypeError('`maxSize` must be a number greater than 0');\n    }\n\n    this.maxSize = options.maxSize;\n    this.cache = new Map();\n    this.oldCache = new Map();\n    this._size = 0;\n  }\n\n  _createClass(QuickLRU, [{\n    key: \"_set\",\n    value: function _set(key, value) {\n      this.cache.set(key, value);\n      this._size++;\n\n      if (this._size >= this.maxSize) {\n        this._size = 0;\n        this.oldCache = this.cache;\n        this.cache = new Map();\n      }\n    }\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      if (this.cache.has(key)) {\n        return this.cache.get(key);\n      }\n\n      if (this.oldCache.has(key)) {\n        var value = this.oldCache.get(key);\n        this.oldCache.delete(key);\n\n        this._set(key, value);\n\n        return value;\n      }\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      if (this.cache.has(key)) {\n        this.cache.set(key, value);\n      } else {\n        this._set(key, value);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      return this.cache.has(key) || this.oldCache.has(key);\n    }\n  }, {\n    key: \"peek\",\n    value: function peek(key) {\n      if (this.cache.has(key)) {\n        return this.cache.get(key);\n      }\n\n      if (this.oldCache.has(key)) {\n        return this.oldCache.get(key);\n      }\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(key) {\n      var deleted = this.cache.delete(key);\n\n      if (deleted) {\n        this._size--;\n      }\n\n      return this.oldCache.delete(key) || deleted;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.cache.clear();\n      this.oldCache.clear();\n      this._size = 0;\n    }\n  }, {\n    key: \"keys\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function keys() {\n      var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _step$value, key;\n\n      return _regeneratorRuntime.wrap(function keys$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _iteratorError = undefined;\n              _context.prev = 3;\n              _iterator = this[Symbol.iterator]();\n\n            case 5:\n              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                _context.next = 12;\n                break;\n              }\n\n              _step$value = _slicedToArray(_step.value, 1), key = _step$value[0];\n              _context.next = 9;\n              return key;\n\n            case 9:\n              _iteratorNormalCompletion = true;\n              _context.next = 5;\n              break;\n\n            case 12:\n              _context.next = 18;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](3);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n\n            case 18:\n              _context.prev = 18;\n              _context.prev = 19;\n\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n\n            case 21:\n              _context.prev = 21;\n\n              if (!_didIteratorError) {\n                _context.next = 24;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 24:\n              return _context.finish(21);\n\n            case 25:\n              return _context.finish(18);\n\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, keys, this, [[3, 14, 18, 26], [19,, 21, 25]]);\n    })\n  }, {\n    key: \"values\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function values() {\n      var _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, _step2$value, value;\n\n      return _regeneratorRuntime.wrap(function values$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _iteratorNormalCompletion2 = true;\n              _didIteratorError2 = false;\n              _iteratorError2 = undefined;\n              _context2.prev = 3;\n              _iterator2 = this[Symbol.iterator]();\n\n            case 5:\n              if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n                _context2.next = 12;\n                break;\n              }\n\n              _step2$value = _slicedToArray(_step2.value, 2), value = _step2$value[1];\n              _context2.next = 9;\n              return value;\n\n            case 9:\n              _iteratorNormalCompletion2 = true;\n              _context2.next = 5;\n              break;\n\n            case 12:\n              _context2.next = 18;\n              break;\n\n            case 14:\n              _context2.prev = 14;\n              _context2.t0 = _context2[\"catch\"](3);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context2.t0;\n\n            case 18:\n              _context2.prev = 18;\n              _context2.prev = 19;\n\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n\n            case 21:\n              _context2.prev = 21;\n\n              if (!_didIteratorError2) {\n                _context2.next = 24;\n                break;\n              }\n\n              throw _iteratorError2;\n\n            case 24:\n              return _context2.finish(21);\n\n            case 25:\n              return _context2.finish(18);\n\n            case 26:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, values, this, [[3, 14, 18, 26], [19,, 21, 25]]);\n    })\n  }, {\n    key: Symbol.iterator,\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function value() {\n      var _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, item, _iteratorNormalCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, _item, _item2, key;\n\n      return _regeneratorRuntime.wrap(function value$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _iteratorNormalCompletion3 = true;\n              _didIteratorError3 = false;\n              _iteratorError3 = undefined;\n              _context3.prev = 3;\n              _iterator3 = this.cache[Symbol.iterator]();\n\n            case 5:\n              if (_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done) {\n                _context3.next = 12;\n                break;\n              }\n\n              item = _step3.value;\n              _context3.next = 9;\n              return item;\n\n            case 9:\n              _iteratorNormalCompletion3 = true;\n              _context3.next = 5;\n              break;\n\n            case 12:\n              _context3.next = 18;\n              break;\n\n            case 14:\n              _context3.prev = 14;\n              _context3.t0 = _context3[\"catch\"](3);\n              _didIteratorError3 = true;\n              _iteratorError3 = _context3.t0;\n\n            case 18:\n              _context3.prev = 18;\n              _context3.prev = 19;\n\n              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                _iterator3.return();\n              }\n\n            case 21:\n              _context3.prev = 21;\n\n              if (!_didIteratorError3) {\n                _context3.next = 24;\n                break;\n              }\n\n              throw _iteratorError3;\n\n            case 24:\n              return _context3.finish(21);\n\n            case 25:\n              return _context3.finish(18);\n\n            case 26:\n              _iteratorNormalCompletion4 = true;\n              _didIteratorError4 = false;\n              _iteratorError4 = undefined;\n              _context3.prev = 29;\n              _iterator4 = this.oldCache[Symbol.iterator]();\n\n            case 31:\n              if (_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done) {\n                _context3.next = 40;\n                break;\n              }\n\n              _item = _step4.value;\n              _item2 = _slicedToArray(_item, 1), key = _item2[0];\n\n              if (this.cache.has(key)) {\n                _context3.next = 37;\n                break;\n              }\n\n              _context3.next = 37;\n              return _item;\n\n            case 37:\n              _iteratorNormalCompletion4 = true;\n              _context3.next = 31;\n              break;\n\n            case 40:\n              _context3.next = 46;\n              break;\n\n            case 42:\n              _context3.prev = 42;\n              _context3.t1 = _context3[\"catch\"](29);\n              _didIteratorError4 = true;\n              _iteratorError4 = _context3.t1;\n\n            case 46:\n              _context3.prev = 46;\n              _context3.prev = 47;\n\n              if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n                _iterator4.return();\n              }\n\n            case 49:\n              _context3.prev = 49;\n\n              if (!_didIteratorError4) {\n                _context3.next = 52;\n                break;\n              }\n\n              throw _iteratorError4;\n\n            case 52:\n              return _context3.finish(49);\n\n            case 53:\n              return _context3.finish(46);\n\n            case 54:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, value, this, [[3, 14, 18, 26], [19,, 21, 25], [29, 42, 46, 54], [47,, 49, 53]]);\n    })\n  }, {\n    key: \"size\",\n    get: function get() {\n      var oldCacheSize = 0;\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = this.oldCache.keys()[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var key = _step5.value;\n\n          if (!this.cache.has(key)) {\n            oldCacheSize++;\n          }\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      return this._size + oldCacheSize;\n    }\n  }]);\n\n  return QuickLRU;\n}();\n\nmodule.exports = QuickLRU;","map":null,"metadata":{},"sourceType":"script"}