import * as React$1 from 'react';
import React__default, { AriaAttributes } from 'react';
import * as _aws_amplify_ui from '@aws-amplify/ui';
import { Theme as Theme$1, AuthenticatorMachineOptions, CognitoUserAmplify, WebTheme, WebDesignToken } from '@aws-amplify/ui';
export { createTheme, defaultTheme } from '@aws-amplify/ui';
import * as xstate from 'xstate';
import { Property } from 'csstype';
import * as _radix_ui_react_accordion from '@radix-ui/react-accordion';
import * as _radix_ui_react_slider from '@radix-ui/react-slider';
import { D as DataStoreItemProps, a as DataStoreCollectionProps, b as DataStoreItemResult, c as DataStoreCollectionResult, d as DataStoreBindingProps, e as DataStorePredicateObject } from './datastore-d2cb91cb';
export { d as DataStoreBindingProps, a as DataStoreCollectionProps, c as DataStoreCollectionResult, D as DataStoreItemProps, b as DataStoreItemResult, e as DataStorePredicateObject } from './datastore-d2cb91cb';
import '@aws-amplify/datastore';

declare type Theme = Theme$1;
declare type ColorMode = 'system' | 'light' | 'dark';
interface AmplifyProviderProps {
    children: React$1.ReactNode;
    colorMode?: ColorMode;
    theme?: Theme;
}
declare function AmplifyProvider({ children, colorMode, theme, }: AmplifyProviderProps): JSX.Element;

declare function FormFields(): JSX.Element;

declare function SignUp(): JSX.Element;
declare namespace SignUp {
    var Header: () => JSX.Element;
    var FormFields: typeof FormFields;
    var Footer: () => JSX.Element;
}

declare function SignIn(): JSX.Element;
declare namespace SignIn {
    var Header: () => JSX.Element;
    var Footer: () => JSX.Element;
}

/**
Matches any [primitive value](https://developer.mozilla.org/en-US/docs/Glossary/Primitive).
@category Basic
*/
declare type Primitive$1 = null | undefined | string | number | boolean | symbol | bigint;

/**
Create a type from another type with all keys and nested keys set to optional.

Use-cases:
- Merging a default settings/config object with another object, the second object would be a deep partial of the default object.
- Mocking and testing complex entities, where populating an entire object with its keys would be redundant in terms of the mock or test.

@example
```
import {PartialDeep} from 'type-fest';

const settings: Settings = {
    textEditor: {
        fontSize: 14;
        fontColor: '#000000';
        fontWeight: 400;
    }
    autocomplete: false;
    autosave: true;
};

const applySavedSettings = (savedSettings: PartialDeep<Settings>) => {
    return {...settings, ...savedSettings};
}

settings = applySavedSettings({textEditor: {fontWeight: 500}});
```

@category Utilities
*/
declare type PartialDeep<T> = T extends Primitive$1 ? Partial<T> : T extends Map<infer KeyType, infer ValueType> ? PartialMapDeep<KeyType, ValueType> : T extends Set<infer ItemType> ? PartialSetDeep<ItemType> : T extends ReadonlyMap<infer KeyType, infer ValueType> ? PartialReadonlyMapDeep<KeyType, ValueType> : T extends ReadonlySet<infer ItemType> ? PartialReadonlySetDeep<ItemType> : T extends (...args: any[]) => unknown ? T | undefined : T extends object ? T extends Array<infer ItemType> ? ItemType[] extends T ? Array<PartialDeep<ItemType | undefined>> : PartialObjectDeep<T> : PartialObjectDeep<T> : unknown;
/**
Same as `PartialDeep`, but accepts only `Map`s and as inputs. Internal helper for `PartialDeep`.
*/
interface PartialMapDeep<KeyType, ValueType> extends Map<PartialDeep<KeyType>, PartialDeep<ValueType>> {
}
/**
Same as `PartialDeep`, but accepts only `Set`s as inputs. Internal helper for `PartialDeep`.
*/
interface PartialSetDeep<T> extends Set<PartialDeep<T>> {
}
/**
Same as `PartialDeep`, but accepts only `ReadonlyMap`s as inputs. Internal helper for `PartialDeep`.
*/
interface PartialReadonlyMapDeep<KeyType, ValueType> extends ReadonlyMap<PartialDeep<KeyType>, PartialDeep<ValueType>> {
}
/**
Same as `PartialDeep`, but accepts only `ReadonlySet`s as inputs. Internal helper for `PartialDeep`.
*/
interface PartialReadonlySetDeep<T> extends ReadonlySet<PartialDeep<T>> {
}
/**
Same as `PartialDeep`, but accepts only `object`s as inputs. Internal helper for `PartialDeep`.
*/
declare type PartialObjectDeep<ObjectType extends object> = {
    [KeyType in keyof ObjectType]?: PartialDeep<ObjectType[KeyType]>;
};

declare const defaultComponents: {
    Header: () => JSX.Element;
    SignIn: {
        Header: () => JSX.Element;
        Footer: () => JSX.Element;
    };
    SignUp: {
        Header: () => JSX.Element;
        FormFields: typeof FormFields;
        Footer: () => JSX.Element;
    };
    Footer: () => JSX.Element;
};

declare type ProviderProps = AuthenticatorMachineOptions & {
    components?: PartialDeep<typeof defaultComponents>;
    services?: AuthenticatorMachineOptions['services'];
};
declare const useAuthenticator: () => {
    error: string;
    hasValidationErrors: boolean;
    isPending: boolean;
    route: string;
    user: _aws_amplify_ui.CognitoUserAmplify;
    validationErrors: {
        [x: string]: string;
    };
    resendCode: (data?: Record<string | number | symbol, any>) => void;
    signOut: (data?: Record<string | number | symbol, any>) => void;
    submitForm: (data?: Record<string | number | symbol, any>) => void;
    updateForm: (data?: Record<string | number | symbol, any>) => void;
    toFederatedSignIn: (data?: Record<string | number | symbol, any>) => void;
    toResetPassword: (data?: Record<string | number | symbol, any>) => void;
    toSignIn: (data?: Record<string | number | symbol, any>) => void;
    toSignUp: (data?: Record<string | number | symbol, any>) => void;
    skipVerification: (data?: Record<string | number | symbol, any>) => void;
    /** @deprecated For internal use only */
    _send: (event: _aws_amplify_ui.AuthEvent | "CHANGE" | "FEDERATED_SIGN_IN" | "RESEND" | "RESET_PASSWORD" | "SIGN_IN" | "SIGN_OUT" | "SIGN_UP" | "SKIP" | "SUBMIT" | "done.invoke.signInActor" | "done.invoke.signUpActor" | "done.invoke.signOutActor" | "done.invoke.resetPasswordActor" | xstate.Event<_aws_amplify_ui.AuthEvent>[] | xstate.SCXML.Event<_aws_amplify_ui.AuthEvent>, payload?: xstate.EventData) => xstate.State<_aws_amplify_ui.AuthContext, _aws_amplify_ui.AuthEvent, any, {
        value: any;
        context: _aws_amplify_ui.AuthContext;
    }>;
    /** @deprecated For internal use only */
    _state: xstate.State<_aws_amplify_ui.AuthContext, _aws_amplify_ui.AuthEvent, any, {
        value: any;
        context: _aws_amplify_ui.AuthContext;
    }>;
    components: {
        Header: () => JSX.Element;
        SignIn: {
            Header: () => JSX.Element;
            Footer: () => JSX.Element;
        } | {
            Header?: () => JSX.Element;
            Footer?: () => JSX.Element;
        };
        SignUp: {
            Header: () => JSX.Element;
            FormFields: typeof FormFields;
            Footer: () => JSX.Element;
        } | {
            Header?: () => JSX.Element;
            FormFields?: typeof FormFields;
            Footer?: () => JSX.Element;
        };
        Footer: () => JSX.Element;
    };
};

declare type RouterProps = {
    className?: string;
    children: ({ signOut, user, }: {
        signOut: ReturnType<typeof useAuthenticator>['signOut'];
        user: CognitoUserAmplify;
    }) => JSX.Element;
    variation?: 'default' | 'modal';
};

declare type AuthenticatorProps = ProviderProps & RouterProps;
declare function Authenticator({ children, className, components, initialState, loginMechanisms, services, signUpAttributes, socialProviders, variation, }: AuthenticatorProps): JSX.Element;
declare namespace Authenticator {
    var Provider: (props: {
        loginMechanisms?: ("username" | "email" | "phone_number")[];
        signUpAttributes?: _aws_amplify_ui.SignUpAttribute[];
        socialProviders?: _aws_amplify_ui.SocialProvider[];
    } & {
        initialState?: "signIn" | "signUp" | "resetPassword";
        services?: Partial<{
            getAmplifyConfig(): Promise<{}>;
            getCurrentUser(): Promise<any>;
            validateCustomSignUp(formData: any): Promise<_aws_amplify_ui.ValidatorResult>;
            validateConfirmPassword<Validator>(formData: any): Promise<_aws_amplify_ui.ValidatorResult>;
            validatePreferredUsername(formData: any): Promise<_aws_amplify_ui.ValidatorResult>;
        }>;
    } & {
        components?: {
            Header?: () => JSX.Element;
            SignIn?: {
                Header?: () => JSX.Element;
                Footer?: () => JSX.Element;
            };
            SignUp?: {
                Header?: () => JSX.Element;
                FormFields?: typeof FormFields;
                Footer?: () => JSX.Element;
            };
            Footer?: () => JSX.Element;
        };
        services?: Partial<{
            getAmplifyConfig(): Promise<{}>;
            getCurrentUser(): Promise<any>;
            validateCustomSignUp(formData: any): Promise<_aws_amplify_ui.ValidatorResult>;
            validateConfirmPassword<Validator>(formData: any): Promise<_aws_amplify_ui.ValidatorResult>;
            validatePreferredUsername(formData: any): Promise<_aws_amplify_ui.ValidatorResult>;
        }>;
    } & {
        children: React$1.ReactNode;
    }) => JSX.Element;
    var ResetPassword: () => JSX.Element;
    var SetupTOTP: () => JSX.Element;
    var SignIn: typeof SignIn;
    var SignUp: typeof SignUp;
}

declare type WithAuthenticatorOptions = Omit<AuthenticatorProps, 'children'>;
declare function withAuthenticator(Component: any, options?: WithAuthenticatorOptions): (props: any) => JSX.Element;

type index$1_Theme = Theme;
type index$1_ColorMode = ColorMode;
declare const index$1_AmplifyProvider: typeof AmplifyProvider;
declare const index$1_Authenticator: typeof Authenticator;
declare const index$1_useAuthenticator: typeof useAuthenticator;
declare const index$1_withAuthenticator: typeof withAuthenticator;
declare namespace index$1 {
  export {
    index$1_Theme as Theme,
    index$1_ColorMode as ColorMode,
    index$1_AmplifyProvider as AmplifyProvider,
    index$1_Authenticator as Authenticator,
    index$1_useAuthenticator as useAuthenticator,
    index$1_withAuthenticator as withAuthenticator,
  };
}

interface UseAmplifyOutput {
    theme: Theme$1;
}
declare function useAmplify(): UseAmplifyOutput;

declare const useTheme: () => WebTheme;

interface BaseComponentProps {
    /**
     * Unique identifier
     */
    id?: string;
    /**
     * Additional CSS class name for component
     */
    className?: string;
    /**
     * Used to provide a `data-testid` attribute for testing purposes
     */
    testId?: string;
}
interface AriaProps {
    ariaLabel?: AriaAttributes['aria-label'];
    ariaValuetext?: AriaAttributes['aria-valuetext'];
    role?: React__default.AriaRole;
}
declare type Sizes = 'small' | 'large';

declare type MergeProps<A, B> = A & Omit<B, keyof A>;
declare type ElementType = React$1.FC<any> | keyof JSX.IntrinsicElements;
/**
 * Convert string element type to DOMElement Type
 * e.g. 'button' => HTMLButtonElement
 */
declare type HTMLElementType<Element extends ElementType> = Element extends keyof JSX.IntrinsicElements ? React$1.ElementRef<Element> : HTMLElementTypeFromExoticComponentRef<Element>;
/**
 * Allows us to extract ElementType from `typeof Root` used in SliderField
 * e.g. React.ForwardRefExoticComponent<SliderProps & React.RefAttributes<HTMLSpanElement>> => HTMLSpanElement
 */
declare type HTMLElementTypeFromExoticComponentRef<Element extends ElementType> = Element extends React$1.ForwardRefExoticComponent<React$1.RefAttributes<infer DOMHTMLElement>> ? DOMHTMLElement : HTMLElement;
declare type ElementProps<Element extends ElementType> = Element extends keyof JSX.IntrinsicElements ? JSX.IntrinsicElements[Element] : Element extends React$1.FC<infer ComponentProps> ? ComponentProps : never;
declare type PrimitiveProps<Props extends ViewProps, Element extends ElementType> = MergeProps<Omit<Props, 'as'> & {
    as?: Element | Props['as'];
}, Omit<ElementProps<Element>, 'ref'>>;
declare type PrimitivePropsWithRef<Props extends ViewProps, Element extends ElementType> = PrimitiveProps<Props, Element> & {
    ref?: React$1.Ref<HTMLElementType<Element>>;
};
declare type Primitive<Props extends ViewProps, Element extends ElementType> = React$1.FC<PrimitiveProps<Props, Element>>;
declare type PrimitiveWithForwardRef<Props extends ViewProps, Element extends ElementType> = React$1.ForwardRefRenderFunction<HTMLElementType<Element>, PrimitivePropsWithRef<Props, Element>>;
interface ViewProps extends BaseComponentProps, BaseStyleProps, AriaProps {
    as?: ElementType;
    isDisabled?: boolean;
    style?: React$1.CSSProperties;
}

declare type GridSpanType = number | string | 'auto';
interface GridContainerStyleProps extends CSSLayoutStyleProps {
    autoColumns?: ResponsiveStyle<Property.GridAutoColumns>;
    autoFlow?: ResponsiveStyle<Property.GridAutoFlow>;
    autoRows?: ResponsiveStyle<Property.GridAutoRows>;
    templateAreas?: ResponsiveStyle<Property.GridTemplateAreas>;
    templateColumns?: ResponsiveStyle<Property.GridTemplateColumns>;
    templateRows?: ResponsiveStyle<Property.GridTemplateRows>;
}
interface GridItemStyleProps {
    area?: ResponsiveStyle<Property.GridArea>;
    column?: ResponsiveStyle<Property.GridColumn>;
    columnEnd?: ResponsiveStyle<Property.GridColumnEnd>;
    columnSpan?: ResponsiveStyle<GridSpanType>;
    columnStart?: ResponsiveStyle<Property.GridColumnStart>;
    row?: ResponsiveStyle<Property.GridRow>;
    rowEnd?: ResponsiveStyle<Property.GridRowEnd>;
    rowSpan?: ResponsiveStyle<GridSpanType>;
    rowStart?: ResponsiveStyle<Property.GridRowStart>;
}
interface GridProps extends GridContainerStyleProps, ViewProps {
}

interface ImageStyleProps {
    objectFit?: ResponsiveStyle<Property.ObjectFit>;
    objectPosition?: ResponsiveStyle<Property.ObjectPosition>;
}
interface ImageOptions extends ImageStyleProps {
    /**
     * Alternative text description of the image (required)
     * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-alt
     */
    alt: React.ImgHTMLAttributes<HTMLImageElement>['alt'];
    /**
     * Set of image source sizes
     * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-sizes
     */
    sizes?: React.ImgHTMLAttributes<HTMLImageElement>['sizes'];
    /**
     * URl source for image (required)
     */
    src: React.ImgHTMLAttributes<HTMLImageElement>['src'];
    /**
     * Possible image sources for the browser to use
     * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-srcset
     */
    srcSet?: React.ImgHTMLAttributes<HTMLImageElement>['srcSet'];
    /**
     * Handles loading event on image
     */
    onLoad?(event: React.SyntheticEvent<HTMLImageElement, Event>): void;
    /**
     * Handles error events on image
     */
    onError?(error: string | React.SyntheticEvent<HTMLImageElement, Event>): void;
}
interface ImageProps extends ViewProps, ImageOptions {
}

declare type ButtonSizes = Sizes;
declare type ButtonTypes = 'button' | 'reset' | 'submit';
declare type ButtonVariations = 'primary' | 'link' | 'menu';
interface ButtonProps extends ViewProps, FlexContainerStyleProps {
    /**
     * If `true`, the button will be disabled.
     */
    isDisabled?: boolean;
    /**
     * If `true`, the button will take up the full width of its container.
     */
    isFullWidth?: boolean;
    /**
     * If `true`, the button will show a spinner.
     */
    isLoading?: boolean;
    /**
     * The label to show in the button when `loading` is true
     * If no text is passed, it only shows the spinner
     */
    loadingText?: string;
    /**
     * Button click event handler
     */
    onClick?: React.MouseEventHandler<HTMLButtonElement>;
    /**
     * Changes the size of the button.
     * @default "medium"
     */
    size?: ButtonSizes;
    /**
     * Changes the button type
     * @default "button"
     */
    type?: ButtonTypes;
    /**
     * Changes the visual weight of the button.
     */
    variation?: ButtonVariations;
}

interface FieldGroupIconProps extends ViewProps {
    /**
     * Determines whether Icon should be visible
     */
    isVisible?: boolean;
    /**
     * Determines whether element should be focusable.
     * When set to false, tabindex="-1" will be set
     */
    excludeFromTabOrder?: boolean;
}
interface FieldGroupIconButtonProps extends FieldGroupIconProps, Pick<ButtonProps, 'onClick' | 'variation' | 'size' | 'type'> {
}

declare type InputMode = 'none' | 'text' | 'decimal' | 'numeric' | 'tel' | 'search' | 'email' | 'url';
declare type InputSizes = Sizes;
interface InputProps extends ViewProps {
    /**
     * Specifies permissions for browser UA to autocomplete field
     * @link https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete
     */
    autoComplete?: string;
    /**
     * If checked is provided, this will be a controlled checkbox or radio
     */
    checked?: boolean;
    /**
     * Use this to initialize an uncontrolled checkbox or radio
     */
    defaultChecked?: boolean;
    /**
     * Use this to provide a default value for an uncontrolled field
     */
    defaultValue?: React$1.AllHTMLAttributes<'input'>['defaultValue'];
    /**
     * Indicates that Field is in error state
     */
    hasError?: boolean;
    /**
     * Provides hint for virtual keyboard shown
     * @link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/inputmode
     * @default: "text"
     */
    inputMode?: InputMode;
    /**
     *  Determines whether field should be disabled
     * @default false
     */
    isDisabled?: boolean;
    /**
     * Determines whether field should be immutable
     * @link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-readonly
     * @default false
     */
    isReadOnly?: boolean;
    /**
     * Whether field should be marked required
     */
    isRequired?: boolean;
    /**
     * Name of the field. Submitted with the form as part of a name/value pair.
     */
    name?: string;
    /**
     * Placeholder text shown when field is empty
     * Accessibility tip: avoid putting important instructions for
     * filling out the TextField in the placeholder. Use descriptiveText
     * for important instructions
     */
    placeholder?: string;
    /**
     * Changes the font-size, padding, and height of the field.
     */
    size?: InputSizes;
    /**
     * Input field type
     */
    type?: React$1.HTMLInputTypeAttribute;
    /**
     * If value is provided, this will be a controlled field
     */
    value?: React$1.AllHTMLAttributes<'input'>['value'];
    /**
     * Variants
     */
    variation?: FieldVariations;
}

/**
 * Shared type across all field types
 */
interface FieldProps {
    /**
     * Provides additional information needed to fill field
     * (e.g. password requirements, etc.)
     */
    descriptiveText?: React.ReactNode;
    /**
     *  When defined and `hasError` is true, show error message
     */
    errorMessage?: string;
    /**
     * Label text for field (required)
     */
    label: React.ReactNode;
    /**
     * Visually hide label (not recommended in most cases)
     * @default false
     */
    labelHidden?: boolean;
}
interface FieldClearButtonProps extends Partial<FieldGroupIconButtonProps> {
}
interface FieldDescriptionProps extends Pick<FieldProps, 'descriptiveText' | 'labelHidden'> {
}
interface FieldErrorMessageProps extends Pick<FieldProps, 'errorMessage'>, Pick<InputProps, 'hasError'> {
}
declare type FieldVariations = 'quiet';

interface TextAreaStyleProps {
    resize?: Property.Resize;
}
interface TextAreaProps extends TextAreaStyleProps, ViewProps {
    /**
     * Specifies permissions for browser UA to autocomplete field
     * @link https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete
     */
    autoComplete?: string;
    /**
     * Use this to provide a default value for an uncontrolled field
     */
    defaultValue?: React.AllHTMLAttributes<'textarea'>['defaultValue'];
    /**
     * Indicates that Field is in error state
     */
    hasError?: boolean;
    /**
     *  Determines whether field should be disabled
     * @default false
     */
    isDisabled?: boolean;
    /**
     * Determines whether field should be immutable
     * @link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-readonly
     * @default false
     */
    isReadOnly?: boolean;
    /**
     * Whether field should be marked required
     */
    isRequired?: boolean;
    /**
     * Text contents maximum length
     */
    maxLength?: number;
    /**
     * Name of the field. Submitted with the form as part of a name/value pair.
     */
    name?: string;
    /**
     * Placeholder text shown when field is empty
     * Accessibility tip: avoid putting important instructions for
     * filling out the TextField in the placeholder. Use descriptiveText
     * for important instructions
     */
    placeholder?: string;
    /**
     * Controls height based on number of rows of text to display
     */
    rows?: number;
    /**
     * Changes the font-size, padding, and height of the field.
     */
    size?: Sizes;
    /**
     * If value is provided, this will be a controlled field
     */
    value?: React.AllHTMLAttributes<'textarea'>['value'];
    /**
     * Variants
     */
    variation?: FieldVariations;
}

/**
 * Extract style compatible types (string literal | number | any string)
 */
declare type StyleProp<PropertyType> = (PropertyType extends number ? number : PropertyType extends string | WebDesignToken ? PropertyType : never) | (string & {});
interface ResponsiveObject<PropertyType> {
    base?: PropertyType;
    small?: PropertyType;
    medium?: PropertyType;
    large?: PropertyType;
    xl?: PropertyType;
    xxl?: PropertyType;
}
/**
 * Allows a style prop to be the property type
 * or a design token of that property type.
 */
declare type StyleToken<PropertyType> = PropertyType | WebDesignToken<PropertyType>;
declare type ResponsiveStyle<PropertyType> = StyleProp<PropertyType> | StyleProp<PropertyType>[] | ResponsiveObject<StyleProp<PropertyType>>;
interface BaseStyleProps extends FlexItemStyleProps, GridItemStyleProps {
    alignSelf?: ResponsiveStyle<StyleToken<Property.AlignSelf>>;
    backgroundColor?: ResponsiveStyle<StyleToken<Property.BackgroundColor>>;
    backgroundImage?: ResponsiveStyle<StyleToken<Property.BackgroundImage>>;
    border?: ResponsiveStyle<StyleToken<Property.Border>>;
    borderRadius?: ResponsiveStyle<StyleToken<Property.BorderRadius>>;
    bottom?: ResponsiveStyle<StyleToken<Property.Bottom>>;
    boxShadow?: ResponsiveStyle<StyleToken<Property.BoxShadow>>;
    color?: ResponsiveStyle<StyleToken<Property.Color>>;
    display?: ResponsiveStyle<StyleToken<Property.Display>>;
    fontFamily?: ResponsiveStyle<StyleToken<Property.FontFamily>>;
    fontSize?: ResponsiveStyle<StyleToken<Property.FontSize>>;
    fontStyle?: ResponsiveStyle<StyleToken<Property.FontStyle>>;
    fontWeight?: ResponsiveStyle<StyleToken<Property.FontWeight>>;
    height?: ResponsiveStyle<StyleToken<Property.Height>>;
    left?: ResponsiveStyle<StyleToken<Property.Left>>;
    letterSpacing?: ResponsiveStyle<StyleToken<Property.LetterSpacing>>;
    lineHeight?: ResponsiveStyle<StyleToken<Property.LineHeight>>;
    margin?: ResponsiveStyle<StyleToken<Property.Margin>>;
    maxHeight?: ResponsiveStyle<StyleToken<Property.MaxHeight>>;
    maxWidth?: ResponsiveStyle<StyleToken<Property.MaxWidth>>;
    minHeight?: ResponsiveStyle<StyleToken<Property.MinHeight>>;
    minWidth?: ResponsiveStyle<StyleToken<Property.MinWidth>>;
    opacity?: ResponsiveStyle<StyleToken<Property.Opacity>>;
    overflow?: ResponsiveStyle<StyleToken<Property.Overflow>>;
    padding?: ResponsiveStyle<StyleToken<Property.Padding>>;
    position?: ResponsiveStyle<StyleToken<Property.Position>>;
    right?: ResponsiveStyle<StyleToken<Property.Right>>;
    textAlign?: ResponsiveStyle<StyleToken<Property.TextAlign>>;
    textDecoration?: ResponsiveStyle<StyleToken<Property.TextDecoration>>;
    textTransform?: ResponsiveStyle<StyleToken<Property.TextTransform>>;
    top?: ResponsiveStyle<StyleToken<Property.Top>>;
    transform?: ResponsiveStyle<StyleToken<Property.Transform>>;
    transformOrigin?: ResponsiveStyle<StyleToken<Property.TransformOrigin>>;
    width?: ResponsiveStyle<StyleToken<Property.Width>>;
}
interface CSSLayoutStyleProps {
    /**
     * Controls where the Flex/Grid items sit on the cross axis.
     */
    alignItems?: ResponsiveStyle<Property.AlignItems>;
    /**
     * Sets the distribution of space between and around content items
     */
    alignContent?: ResponsiveStyle<Property.AlignContent>;
    /**
     * Controls where the Flex/Grid items sit on the main axis.
     */
    justifyContent?: ResponsiveStyle<Property.JustifyContent>;
    /**
     * Spacing between child components. Shorthand for rowGap and columnGap.
     */
    gap?: ResponsiveStyle<StyleToken<Property.Gap>>;
    /**
     * Spacing between Flex/Grid child columns
     */
    columnGap?: ResponsiveStyle<StyleToken<Property.GridColumnGap>>;
    /**
     * Spacing between Flex/Grid child rows
     */
    rowGap?: ResponsiveStyle<StyleToken<Property.RowGap>>;
}
interface AllStyleProps extends BaseStyleProps, ImageStyleProps, FlexContainerStyleProps, GridContainerStyleProps, TextAreaStyleProps {
}
declare type ComponentPropToStyleProp = Required<{
    [key in keyof AllStyleProps]: keyof React.CSSProperties;
}>;
/**
 * Maps from component style props to React `style` props
 * Note: Primarily needed to map from component style props that don't match CSS Properties directly
 * such as wrap => flexWrap and direction => flexDirection
 */
declare const ComponentPropsToStylePropsMap: ComponentPropToStyleProp;
declare const ComponentPropsToStylePropsMapKeys: ("border" | "color" | "area" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "direction" | "wrap" | "alignItems" | "alignContent" | "justifyContent" | "gap" | "columnGap" | "rowGap" | "objectFit" | "objectPosition" | "autoColumns" | "autoFlow" | "autoRows" | "templateAreas" | "templateColumns" | "templateRows" | "resize")[];

interface FlexContainerStyleProps extends CSSLayoutStyleProps {
    /**
     * Sets how flex items are placed in the flex container defining the main axis
     * and the direction (normal or reversed). (maps to flex-direction CSS property)
     */
    direction?: ResponsiveStyle<Property.FlexDirection>;
    /**
     * The flexWrap property is set on containers and it controls what happens when
     * children overflow the size of the container along the main axis. By default,
     * children are forced into a single line (which can shrink elements). If
     * wrapping is allowed, items are wrapped into multiple lines along the main
     * axis if needed.
     * (maps to flex-wrap CSS property)
     */
    wrap?: ResponsiveStyle<Property.FlexWrap>;
}
interface FlexProps extends ViewProps, FlexContainerStyleProps {
}
interface FlexItemStyleProps {
    /**
     * Shorthand for flex grow / shrink / basis
     */
    flex?: ResponsiveStyle<Property.Flex>;
    /**
     * Controls order flex items appear
     */
    order?: ResponsiveStyle<Property.Order>;
    /**
     * Ability for flex item to grow
     */
    grow?: ResponsiveStyle<Property.FlexGrow>;
    /**
     * Ability for flex item to shrink
     */
    shrink?: ResponsiveStyle<Property.FlexShrink>;
    /**
     * Default size of element before remaining space is distributed
     */
    basis?: ResponsiveStyle<Property.FlexBasis>;
}

declare type AlertVariations = 'info' | 'error' | 'warning' | 'success';
interface AlertProps extends FlexProps {
    /**
     * The variation property will affect the background color of the Alert.
     */
    variation?: AlertVariations;
    /**
     * The isDismissible property will affect whether the user can dismiss (close) the Alert. Defaults to false (not dismissible).
     */
    isDismissible?: boolean;
    /**
     * The onDismiss callback will be called when the user dismisses (closes) the Alert.
     */
    onDismiss?: () => void;
    /**
     * The hasIcon property will determine whether or not an icon is displayed on the Alert. Defaults to true (icon displayed).
     */
    hasIcon?: boolean;
    /**
     * The heading property will affect the content of the Alert heading.
     */
    heading?: React$1.ReactNode;
    /**
     * The ref will be forwarded to the dismiss button
     */
    buttonRef?: React$1.Ref<HTMLButtonElement>;
}

declare type BadgeVariations = 'info' | 'error' | 'warning' | 'success';
declare type BadgeSizes = Sizes;
interface BadgeProps extends ViewProps {
    /**
     * The variation property will affect the background color of the badge.
     */
    variation?: BadgeVariations;
    /**
     * The size property will affect the font size of the badge.
     */
    size?: BadgeSizes;
}

interface ButtonGroupProps extends AriaProps, BaseStyleProps, FlexProps, Pick<ButtonProps, 'size' | 'variation'> {
    children: React$1.ReactNode;
}

declare type CardVariations = 'outlined' | 'elevated';
interface CardProps extends ViewProps {
    variation?: CardVariations;
}

interface CheckboxProps extends FlexProps, InputProps {
    /**
     * The label text
     */
    label: FieldProps['label'];
    /**
     * Visually hide label (not recommended in most cases)
     * @default false
     */
    labelHidden?: boolean;
    /**
     * The name of the input field in a checkbox (Useful for form submission).
     */
    name: string;
    /**
     * The submitted value when checked
     * Shows on form submission as key pair `name:value`
     */
    value: string;
}

interface CheckboxFieldProps extends CheckboxProps, FieldProps {
}

declare type CollectionType = 'list' | 'grid' | 'table';
interface CollectionWrapperProps extends BaseStyleProps {
    /**
     * Collection type. This will be used to determine collection wrapper component.
     * @default 'list'
     */
    type?: CollectionType;
    /**
     * Enable pagination for collection items
     */
    isPaginated?: boolean;
    /**
     * Page size (when pagination is enabled)
     */
    itemsPerPage?: number;
    /**
     * Enable collection filtering
     */
    isSearchable?: boolean;
    /**
     * Custom search filter (when search is enabled)
     */
    searchFilter?: (item: unknown, searchText: string) => boolean;
    /**
     * Search field placeholder
     */
    searchPlaceholder?: string;
}
interface CollectionBaseProps<Item> {
    items: Array<Item>;
    children: (item: Item, index: number) => JSX.Element;
}
declare type ListCollectionProps<Item> = FlexProps & CollectionBaseProps<Item>;
declare type GridCollectionProps<Item> = GridProps & CollectionBaseProps<Item>;
declare type CollectionProps<Item> = CollectionWrapperProps & (({
    type: 'list';
} & ListCollectionProps<Item>) | ({
    type: 'grid';
} & GridCollectionProps<Item>));

declare type DividerOrientations = 'horizontal' | 'vertical';
declare type DividerSizes = Sizes;
interface DividerOptions {
    /**
     * Controls whether the divider is oriented horizontally or vertically.
     * @default "horizontal"
     */
    orientation?: DividerOrientations;
    /**
     * Size of the divider (height for a horiziontal divider, width for vertical)
     * @default "small"
     */
    size?: DividerSizes;
}
interface DividerProps extends ViewProps, DividerOptions {
}

declare type ExpanderType = 'single' | 'multiple';
interface ExpanderProps extends ViewProps {
    /**
     * The value of the item(s) to expand.  Use on uncontrolled component.
     */
    defaultValue?: string | string[];
    /**
     * The controlled value of the item(s) to expand. Must be used in conjunction with onChange.
     */
    value?: string | string[];
    /**
     * Determines whether the opened item can be collapsed if this is a single expander.
     */
    isCollapsible?: boolean;
    /**
     * Determines whether one or multiple items can be opened at the same time.
     */
    type?: ExpanderType;
    /**
     * Event handler called when the expanded state of an item changes
     */
    onChange?: (value?: string | string[]) => void;
}
interface ExpanderItemProps extends ViewProps {
    /**
     * The content of the heading.
     */
    title?: string;
    /**
     * A unique value for the item.
     */
    value: string;
}

declare type FieldGroupOrientation = 'horizontal' | 'vertical';
interface FieldGroupOptions extends FlexProps {
    children?: React.ReactNode;
    orientation?: FieldGroupOrientation;
    outerStartComponent?: React.ReactNode;
    outerEndComponent?: React.ReactNode;
    innerStartComponent?: React.ReactNode;
    innerEndComponent?: React.ReactNode;
}

declare type TextVariation = 'primary' | 'secondary' | 'tertiary' | 'error' | 'warning' | 'info' | 'success';
interface TextProps extends ViewProps {
    /**
     * HTML allowed tags
     */
    as?: 'p' | 'span' | 'strong' | 'em';
    /**
     * This should be the primary way to handle different styles of text. Lower-level
     * text styling attributes like color can be set directly, that should be more of an
     * escape hatch.
     */
    variation?: TextVariation;
    /**
     * This attribute will be used to indicate if the text component should truncate text
     * that exceeds the width of the text element.  Truncated text will render an ellipsis.
     */
    isTruncated?: boolean;
}

declare type HeadingLevel = 1 | 2 | 3 | 4 | 5 | 6;
interface HeadingProps extends TextProps {
    level?: HeadingLevel;
}

interface ViewBox {
    minX?: number;
    minY?: number;
    width?: number;
    height?: number;
}
declare type IconSize = Sizes;
interface IconProps extends ViewProps {
    /**
     * This defines the shape of the <path> SVG element(the 'd' attribute).
     * @link https://developer.mozilla.org/en-US/docs/Web/SVG/Element/path
     */
    pathData: string;
    /**
     * This is used to define a string that labels the current element.
     * @link https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_aria-label_attribute
     */
    ariaLabel: string;
    /**
     * This defines the position and dimension, in user space, of an SVG viewport.
     * @link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/viewBox
     */
    viewBox?: ViewBox;
    /**
     * By default this will be "currentColor" to match what is generally expected
     * of icons (they inherit their color from current font color).
     * @link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill
     */
    fill?: Property.Color;
}

interface LabelProps extends ViewProps {
    /**
     * Whether label should be visually hidden
     */
    visuallyHidden?: boolean;
    /**
     * Inner text of the label
     */
    children: React.ReactNode;
}

interface LinkOptions {
    /**
     * Boolean value indicating an external link
     * sets the rel attribute to "noopener noreferrer"
     */
    isExternal?: boolean;
    /**
     * Children to be rendered inside the Link component
     */
    children: React$1.ReactNode;
}
interface LinkProps extends ViewProps, LinkOptions {
}

declare type LoaderSizes = Sizes;
declare type LoaderVariations = 'linear';
interface LoaderProps extends ViewProps {
    /**
     * This will set the size of Loader.
     */
    size?: LoaderSizes;
    /**
     * This will set the variation of Loader. Available options are linear and none(circular).
     */
    variation?: LoaderVariations;
    /**
     * This will set the filled color of Loader.
     */
    filledColor?: Property.Color;
    /**
     * This will set the empty color of Loader.
     */
    emptyColor?: Property.Color;
}

interface MenuProps extends FlexProps {
    /**
     * Alignment of menu against trigger
     * @default "start"
     */
    menuAlign?: 'start' | 'center' | 'end';
    /**
     * Handle open and close event of menu
     */
    onOpenChange?: (isOpen: boolean) => void;
    /**
     * Default for controlled menu
     */
    isOpen?: boolean;
    /**
     * Size of Menu button and items
     */
    size?: Sizes;
    /**
     * Trigger node
     * @default MenuButton with IconMenu
     * @note Must forward refs to DOM element
     */
    trigger?: React$1.ReactNode;
    /**
     * ClassName to apply to default trigger button
     * Note: only applies if `trigger` prop is null
     */
    triggerClassName?: string;
}
interface MenuItemProps extends ButtonProps {
    children?: React$1.ReactNode;
}

declare type PaginationItemType = 'page' | 'next' | 'previous' | 'ellipsis';
declare type PaginationCallbackType = 'onNext' | 'onPrevious' | 'onChange';
interface BasePaginationProps {
    /**
     * Index of the current page. (starting from 1)
     */
    currentPage?: number;
    /**
     * Total number of available pages.
     */
    totalPages: number;
    /**
     * The number of siblings on each side of current page.
     */
    siblingCount?: number;
    /**
     * Callback function triggered when the next-page button is pressed
     */
    onNext: () => void;
    /**
     * Callback function triggered when the prev-page button is pressed
     */
    onPrevious: () => void;
    /**
     * Callback function triggered every time the page changes
     */
    onChange: (newPageIndex: number, prevPageIndex: number) => void;
}
interface PaginationProps extends BasePaginationProps, ViewProps {
}
interface UsePaginationProps extends Omit<BasePaginationProps, PaginationCallbackType> {
}
interface UsePaginationResult extends Required<BasePaginationProps> {
}
interface PaginationItemProps extends BaseComponentProps, BaseStyleProps, AriaProps {
    /**
     * Available item type are 'page', 'next', 'previous' and 'ellipsis'.
     */
    type: PaginationItemType;
    /**
     * For 'page' item, this is the page number to be rendered.
     */
    page?: number;
    /**
     * The index of current page.
     */
    currentPage?: number;
    /**
     * An item is not clickable if disabled
     */
    isDisabled?: boolean;
    /**
     * Triggered every time the item is clicked.
     */
    onClick?: (newPageIndex?: number, prevPageIndex?: number) => void;
}

interface TextFieldOptions extends FieldProps, FlexContainerStyleProps {
    /**
     * Component(s) to show after input
     */
    outerEndComponent?: React$1.ReactNode;
    /**
     * Component(s) to show before input
     */
    outerStartComponent?: React$1.ReactNode;
    /**
     * FieldGroupIconButton component to show inside of input at start
     */
    innerStartComponent?: React$1.ReactNode;
    /**
     * FieldGroupIconButton component to show inside of input at end
     */
    innerEndComponent?: React$1.ReactNode;
    /**
     * Input field type (only applies when isMultiline = false)
     */
    type?: InputProps['type'];
}
interface TextInputFieldProps extends TextFieldOptions, InputProps {
}
interface TextAreaFieldProps extends TextFieldOptions, TextAreaProps {
}
declare type TextFieldProps<Multiline extends boolean> = (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps) & {
    isMultiline?: Multiline;
};

interface PasswordFieldProps extends TextInputFieldProps {
    /**
     * For password fields, will hide the "show password" button
     */
    hideShowPassword?: boolean;
    /**
     * Password autocomplete type
     * See: https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete#values
     * @default "current-password"
     */
    autoComplete?: 'new-password' | 'current-password' | string;
    /**
     * Forwarded ref for access to show password button DOM element
     */
    showPasswordButtonRef?: React$1.Ref<HTMLButtonElement>;
}
declare type PasswordFieldType = 'password' | 'text';
interface ShowPasswordButtonProps extends ButtonProps {
    fieldType: PasswordFieldType;
}

declare type SelectSize = 'small' | 'large';
declare type SelectVariation = 'quiet';
interface SelectProps extends ViewProps {
    autoComplete?: string;
    name?: string;
    defaultValue?: string;
    value?: string;
    size?: SelectSize;
    variation?: SelectVariation;
    icon?: React$1.ReactElement;
    iconColor?: string;
    placeholder?: string;
    hasError?: boolean;
    isDisabled?: boolean;
    isRequired?: boolean;
    onChange?: React$1.ChangeEventHandler<HTMLSelectElement>;
}

interface SelectFieldProps extends FieldProps, FlexContainerStyleProps, SelectProps {
}

interface PhoneNumberFieldProps extends TextInputFieldProps {
    countryCodeLabel?: string;
    countryCodeName?: string;
    defaultCountryCode: string;
    onCountryCodeChange?: React$1.ChangeEventHandler<HTMLSelectElement>;
    type?: 'tel';
    /**
     * Forwarded ref for access to Country Code select DOM element
     */
    countryCodeRef?: React$1.Ref<HTMLSelectElement>;
}
interface CountryCodeSelectProps extends SelectFieldProps {
    defaultValue: string;
}

declare type PlaceholderSizes = Sizes;
interface PlaceholderProps extends ViewProps {
    /**
     * If true, the placeholder won't show, if false the placeholder will show.
     * @default false
     */
    isLoaded?: boolean;
    /**
     * Controls the display size of placeholder
     */
    size?: PlaceholderSizes;
}

interface RadioProps extends InputProps {
    value: string;
}

interface RadioGroupFieldProps extends FieldProps, FlexContainerStyleProps, InputProps {
    name: string;
    value?: string;
    defaultValue?: string;
    /**
     * Handle onChange event
     */
    onChange?: React$1.ChangeEventHandler<HTMLInputElement>;
}

declare type RatingSizes = Sizes;
interface RatingOptions {
    /**
     * The CSS color to use on the empty rating icon
     * Default css value is #A2A2A2
     */
    emptyColor?: Property.Color;
    /**
     * This will override which icon to use as the empty icon. This will only
     * override the empty icon an will create a rating component that uses
     * different icons for filled and empty icons.
     */
    emptyIcon?: JSX.Element;
    /**
     * The CSS color to use on the filled rating icon
     * Default css value is #ffb400
     */
    fillColor?: Property.Color;
    /**
     * This will override which icon to use. This will override both
     * the filled and empty icon values unless an empty icon is specified
     * with the emptyIcon prop
     * Default is <IconStar />
     */
    icon?: JSX.Element;
    /**
     * The max rating integer value
     * Default is 5
     */
    maxValue?: number;
    /**
     *
     * This will set the icon size of the stars
     * Default css value is medium
     */
    size?: RatingSizes;
    /**
     * The value of the rating
     * Default is 0
     */
    value?: number;
}
interface RatingProps extends RatingOptions, FlexProps {
}

declare type ScrollViewOrientation = 'horizontal' | 'vertical';
interface ScrollViewProps extends ViewProps {
    orientation?: ScrollViewOrientation;
}

interface SearchFieldProps extends TextInputFieldProps {
    /**
     * Handle submission of search field input
     */
    onSubmit?: (value: string) => void;
    /**
     * Triggered when search field is cleared
     */
    onClear?: () => void;
    /**
     * Visually hide label
     * @default true
     */
    labelHidden?: boolean;
    /**
     * Provides ref access to search button DOM element
     */
    searchButtonRef?: React__default.Ref<HTMLButtonElement>;
}
interface SearchFieldButtonProps extends Partial<FieldGroupIconButtonProps> {
}

declare type SliderOrientation = 'horizontal' | 'vertical';
interface SliderFieldProps extends TextInputFieldProps, ViewProps {
    min?: number;
    max?: number;
    step?: number;
    orientation?: SliderOrientation;
    isValueHidden?: boolean;
    trackSize?: string;
    emptyTrackColor?: Property.Color;
    filledTrackColor?: Property.Color;
    thumbColor?: Property.Color;
    value?: number;
    defaultValue?: number;
    onChange?: (value: number) => void;
}

interface StepperFieldProps extends TextInputFieldProps {
    type?: 'number';
    min?: number;
    max?: number;
    step?: number;
    value?: number;
    defaultValue?: number;
    /**
     * TODO:
     * Extends StepperField props from Omit<TextFieldProps, 'onChange'>, after removing [key: string]: any from the base type
     * and rename onStepChange to onChange
     */
    onStepChange?: (value: number) => void;
    onIncrease?: () => void;
    onDecrease?: () => void;
}

declare type labelPositions = 'start' | 'end' | 'top' | 'bottom';
interface SwitchFieldProps extends InputProps, FieldProps, BaseStyleProps {
    /**
     * Use this to provide a default checked value for an uncontrolled SwitchField
     */
    defaultChecked?: boolean;
    /**
     * If isChecked is provided, this will be a controlled SwitchField
     */
    isChecked?: boolean;
    /**
     * This property will set the switch to disabled
     */
    isDisabled?: boolean;
    /**
     * Visually hide the label, but the associated label text will still be required for accessibility.
     * @default false
     */
    isLabelHidden?: boolean;
    /**
     * Label text for field (required)
     */
    label: React.ReactNode;
    /**
     * Position of label in relation to the switchfield
     */
    labelPosition?: labelPositions;
    /**
     * This prop adds a name attribute to the input element
     */
    name?: string;
    /**
     * Assign an onChange event to the switch field
     */
    onChange?: React.ChangeEventHandler<HTMLInputElement>;
    /**
     * This prop adjusts the size of the switch component
     */
    size?: Sizes;
    /**
     * This property will change the color of the thumb in the switch component
     */
    thumbColor?: Property.Color;
    /**
     * This property will change the color of the track in the switch component
     */
    trackColor?: Property.Color;
    /**
     * This property will change the color of the checked track in the switch component
     */
    trackCheckedColor?: Property.Color;
    /**
     * This is the value of the switch input and will be submitted with a form submission
     */
    value?: string | number;
}

declare type TableSize = Sizes;
declare type TableVariation = 'bordered' | 'striped';
interface TableProps extends ViewProps {
    /**
     * Optional caption which serves as an accessible title/caption for
     * the table.
     */
    caption?: React$1.ReactNode;
    /**
     * If set to true, will highlight a table row on hover. Default is false.
     */
    highlightOnHover?: boolean;
    /**
     * Affects font size and padding. Default is in between 'small' and 'large'.
     */
    size?: TableSize;
    /**
     * Sets a supported style variation. Default is no specific variation.
     */
    variation?: TableVariation;
}
interface TableBodyProps extends ViewProps {
}
declare type TableCellElement = 'td' | 'th';
interface TableCellProps extends ViewProps {
    as?: TableCellElement;
    colspan?: Pick<React$1.HTMLProps<HTMLTableCellElement>, 'colSpan'>;
    rowspan?: Pick<React$1.HTMLProps<HTMLTableCellElement>, 'rowSpan'>;
}
interface TableFootProps extends ViewProps {
}
interface TableHeadProps extends ViewProps {
}
interface TableRowProps extends ViewProps {
}

declare type TabsSpacing = 'equal' | 'relative';
interface TabsProps extends FlexProps {
    /**
     * The Tabs component only accepts TabItem components as children.
     */
    children: React$1.ReactElement | React$1.ReactElement[];
    /**
     * Change which Tab content is initially displayed. Pass in the index of the Tab you wish to show. The default is index 0 (the first tab).
     */
    defaultIndex?: number | string;
    /**
     * The controlled index of the currently selected tab. This should be used with
     * `onChange` as well to make the component controlled.
     */
    currentIndex?: number | string;
    /**
     * For controlled usage, use the onChange event to listen to when a tab is clicked
     * and update the `currentIndex` accordingly. The index of the tab clicked is passed
     * to onChange.
     */
    onChange?: (value: number | string) => void;
    /**
     * Control how Tabs take up the remaining space. Pass `equal` to make each tab take up the same amount of space,
     * and `relative` to make each tab take up space relative to the size of its title.
     */
    spacing?: TabsSpacing;
    /**
     * Sets the border and indicator of the tabs to be the top or bottom.
     */
    indicatorPosition?: 'top' | 'bottom';
}
interface TabItemProps extends BaseComponentProps, BaseStyleProps {
    /**
     * Change the title corresponding with each Tab's content panel.
     */
    title: React$1.ReactNode;
    /**
     * Make a Tab not clickable and its content not visible to the user. Defaults to false (i.e., visible).
     */
    isDisabled?: boolean;
}

interface ToggleButtonProps extends ButtonProps {
    value?: string;
    isPressed?: boolean;
    defaultPressed?: boolean;
    onChange?: (value: string) => void;
}

interface ToggleButtonGroupProps extends FlexProps, Pick<ToggleButtonProps, 'size' | 'variation'> {
    children: React$1.ReactNode;
    isExclusive?: boolean;
    value: string | string[];
    onChange: (value: string | string[]) => void;
}

interface VisuallyHiddenProps extends ViewProps {
}

declare const Alert: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<AlertProps, React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<FlexProps, "div">, "children" | "border" | "color" | "area" | "slot" | "style" | "title" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "tabIndex" | "direction" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "wrap" | "alignItems" | "alignContent" | "justifyContent" | "gap" | "columnGap" | "rowGap"> & React$1.RefAttributes<HTMLDivElement>>>, "children" | "border" | "color" | "area" | "slot" | "style" | "title" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "tabIndex" | "direction" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "heading" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "variation" | "wrap" | "alignItems" | "alignContent" | "justifyContent" | "gap" | "columnGap" | "rowGap" | "isDismissible" | "onDismiss" | "hasIcon" | "buttonRef"> & React$1.RefAttributes<HTMLDivElement>>;

declare const Badge: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<BadgeProps, "span">, "children" | "border" | "color" | "area" | "slot" | "style" | "title" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "tabIndex" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "size" | "variation"> & React$1.RefAttributes<HTMLSpanElement>>;

declare const Button: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<ButtonProps, "button">, "children" | "value" | "border" | "disabled" | "color" | "name" | "area" | "form" | "slot" | "style" | "title" | "type" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "tabIndex" | "direction" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "autoFocus" | "formAction" | "formEncType" | "formMethod" | "formNoValidate" | "formTarget" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "isFullWidth" | "isLoading" | "loadingText" | "size" | "variation" | "wrap" | "alignItems" | "alignContent" | "justifyContent" | "gap" | "columnGap" | "rowGap"> & React$1.RefAttributes<HTMLButtonElement>>;

declare const ButtonGroup: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<ButtonGroupProps, React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<FlexProps, "div">, "children" | "border" | "color" | "area" | "slot" | "style" | "title" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "tabIndex" | "direction" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "wrap" | "alignItems" | "alignContent" | "justifyContent" | "gap" | "columnGap" | "rowGap"> & React$1.RefAttributes<HTMLDivElement>>>, "children" | "border" | "color" | "area" | "slot" | "style" | "title" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "tabIndex" | "direction" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "size" | "variation" | "wrap" | "alignItems" | "alignContent" | "justifyContent" | "gap" | "columnGap" | "rowGap"> & React$1.RefAttributes<HTMLDivElement>>;

declare const Card: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<CardProps, "div">, "children" | "border" | "color" | "area" | "slot" | "style" | "title" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "tabIndex" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "variation"> & React$1.RefAttributes<HTMLDivElement>>;

declare const CheckboxField: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<CheckboxFieldProps, "input">, "children" | "value" | "border" | "disabled" | "color" | "name" | "area" | "form" | "label" | "slot" | "style" | "title" | "pattern" | "type" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "max" | "min" | "tabIndex" | "crossOrigin" | "direction" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "list" | "autoFocus" | "formAction" | "formEncType" | "formMethod" | "formNoValidate" | "formTarget" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "size" | "variation" | "wrap" | "alignItems" | "alignContent" | "justifyContent" | "gap" | "columnGap" | "rowGap" | "alt" | "src" | "autoComplete" | "accept" | "capture" | "checked" | "enterKeyHint" | "maxLength" | "minLength" | "multiple" | "readOnly" | "required" | "step" | "descriptiveText" | "labelHidden" | "errorMessage" | "hasError" | "isReadOnly" | "isRequired"> & React$1.RefAttributes<HTMLInputElement>>;

declare const Collection: {
    <Item>({ className, isSearchable, isPaginated, items, itemsPerPage, searchFilter, searchPlaceholder, type, testId, ...rest }: CollectionProps<Item>): JSX.Element;
    displayName: string;
};

declare const Divider: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<DividerProps, "hr">, "children" | "border" | "color" | "area" | "slot" | "style" | "title" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "tabIndex" | "orientation" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "size"> & React$1.RefAttributes<HTMLHRElement>>;

declare const Expander: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<ExpanderProps, React$1.ForwardRefExoticComponent<(_radix_ui_react_accordion.AccordionSingleProps & React$1.RefAttributes<HTMLDivElement>) | (_radix_ui_react_accordion.AccordionMultipleProps & React$1.RefAttributes<HTMLDivElement>)>>, "children" | "value" | "border" | "disabled" | "color" | "area" | "slot" | "style" | "title" | "type" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "tabIndex" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "asChild" | "onValueChange" | "isCollapsible"> & React$1.RefAttributes<HTMLDivElement>>;

declare const ExpanderItem: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<ExpanderItemProps, React$1.ForwardRefExoticComponent<_radix_ui_react_accordion.AccordionItemProps & React$1.RefAttributes<HTMLDivElement>>>, "children" | "value" | "border" | "disabled" | "color" | "area" | "slot" | "style" | "title" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "tabIndex" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "asChild"> & React$1.RefAttributes<HTMLDivElement>>;

declare const FieldGroupIcon: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<FieldGroupIconProps, "button" | "div">, "children" | "border" | "color" | "area" | "slot" | "style" | "title" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "tabIndex" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "isVisible" | "excludeFromTabOrder"> & React$1.RefAttributes<HTMLDivElement | HTMLButtonElement>>;

declare const FieldGroupIconButton: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<FieldGroupIconButtonProps, "button">, "children" | "value" | "border" | "disabled" | "color" | "name" | "area" | "form" | "slot" | "style" | "title" | "type" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "tabIndex" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "autoFocus" | "formAction" | "formEncType" | "formMethod" | "formNoValidate" | "formTarget" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "size" | "variation" | "isVisible" | "excludeFromTabOrder"> & React$1.RefAttributes<HTMLButtonElement>>;

declare const Flex: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<FlexProps, "div">, "children" | "border" | "color" | "area" | "slot" | "style" | "title" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "tabIndex" | "direction" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "wrap" | "alignItems" | "alignContent" | "justifyContent" | "gap" | "columnGap" | "rowGap"> & React$1.RefAttributes<HTMLDivElement>>;

declare const Grid: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<GridProps, "div">, "children" | "border" | "color" | "area" | "slot" | "style" | "title" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "tabIndex" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "alignItems" | "alignContent" | "justifyContent" | "gap" | "columnGap" | "rowGap" | "autoColumns" | "autoFlow" | "autoRows" | "templateAreas" | "templateColumns" | "templateRows"> & React$1.RefAttributes<HTMLDivElement>>;

declare type HeadingTag = 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';
declare const Heading: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<HeadingProps, HeadingTag>, "children" | "border" | "color" | "area" | "slot" | "style" | "title" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "tabIndex" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "variation" | "isTruncated" | "level"> & React$1.RefAttributes<HTMLHeadingElement>>;

declare const Icon: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<IconProps, "svg">, "string" | "children" | "border" | "color" | "values" | "name" | "area" | "style" | "clipPath" | "filter" | "mask" | "path" | "type" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "max" | "media" | "method" | "min" | "target" | "tabIndex" | "crossOrigin" | "accentHeight" | "accumulate" | "additive" | "alignmentBaseline" | "allowReorder" | "alphabetic" | "amplitude" | "arabicForm" | "ascent" | "attributeName" | "attributeType" | "autoReverse" | "azimuth" | "baseFrequency" | "baselineShift" | "baseProfile" | "bbox" | "begin" | "bias" | "by" | "calcMode" | "capHeight" | "clip" | "clipPathUnits" | "clipRule" | "colorInterpolation" | "colorInterpolationFilters" | "colorProfile" | "colorRendering" | "contentScriptType" | "contentStyleType" | "cursor" | "cx" | "cy" | "d" | "decelerate" | "descent" | "diffuseConstant" | "direction" | "divisor" | "dominantBaseline" | "dur" | "dx" | "dy" | "edgeMode" | "elevation" | "enableBackground" | "end" | "exponent" | "externalResourcesRequired" | "fill" | "fillOpacity" | "fillRule" | "filterRes" | "filterUnits" | "floodColor" | "floodOpacity" | "focusable" | "fontSizeAdjust" | "fontStretch" | "fontVariant" | "format" | "fr" | "from" | "fx" | "fy" | "g1" | "g2" | "glyphName" | "glyphOrientationHorizontal" | "glyphOrientationVertical" | "glyphRef" | "gradientTransform" | "gradientUnits" | "hanging" | "horizAdvX" | "horizOriginX" | "href" | "ideographic" | "imageRendering" | "in2" | "in" | "intercept" | "k1" | "k2" | "k3" | "k4" | "k" | "kernelMatrix" | "kernelUnitLength" | "kerning" | "keyPoints" | "keySplines" | "keyTimes" | "lengthAdjust" | "lightingColor" | "limitingConeAngle" | "local" | "markerEnd" | "markerHeight" | "markerMid" | "markerStart" | "markerUnits" | "markerWidth" | "maskContentUnits" | "maskUnits" | "mathematical" | "mode" | "numOctaves" | "offset" | "operator" | "orient" | "orientation" | "origin" | "overlinePosition" | "overlineThickness" | "paintOrder" | "panose1" | "pathLength" | "patternContentUnits" | "patternTransform" | "patternUnits" | "pointerEvents" | "points" | "pointsAtX" | "pointsAtY" | "pointsAtZ" | "preserveAlpha" | "preserveAspectRatio" | "primitiveUnits" | "r" | "radius" | "refX" | "refY" | "renderingIntent" | "repeatCount" | "repeatDur" | "requiredExtensions" | "requiredFeatures" | "restart" | "result" | "rotate" | "rx" | "ry" | "scale" | "seed" | "shapeRendering" | "slope" | "spacing" | "specularConstant" | "specularExponent" | "speed" | "spreadMethod" | "startOffset" | "stdDeviation" | "stemh" | "stemv" | "stitchTiles" | "stopColor" | "stopOpacity" | "strikethroughPosition" | "strikethroughThickness" | "stroke" | "strokeDasharray" | "strokeDashoffset" | "strokeLinecap" | "strokeLinejoin" | "strokeMiterlimit" | "strokeOpacity" | "strokeWidth" | "surfaceScale" | "systemLanguage" | "tableValues" | "targetX" | "targetY" | "textAnchor" | "textLength" | "textRendering" | "to" | "u1" | "u2" | "underlinePosition" | "underlineThickness" | "unicode" | "unicodeBidi" | "unicodeRange" | "unitsPerEm" | "vAlphabetic" | "vectorEffect" | "version" | "vertAdvY" | "vertOriginX" | "vertOriginY" | "vHanging" | "vIdeographic" | "viewBox" | "viewTarget" | "visibility" | "vMathematical" | "widths" | "wordSpacing" | "writingMode" | "x1" | "x2" | "x" | "xChannelSelector" | "xHeight" | "xlinkActuate" | "xlinkArcrole" | "xlinkHref" | "xlinkRole" | "xlinkShow" | "xlinkTitle" | "xlinkType" | "xmlBase" | "xmlLang" | "xmlns" | "xmlnsXlink" | "xmlSpace" | "y1" | "y2" | "y" | "yChannelSelector" | "z" | "zoomAndPan" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "pathData"> & React$1.RefAttributes<SVGSVGElement>>;

declare const Icon360: (props: any) => JSX.Element;

declare const Icon3dRotation: (props: any) => JSX.Element;

declare const Icon4k: (props: any) => JSX.Element;

declare const Icon5g: (props: any) => JSX.Element;

declare const Icon6FtApart: (props: any) => JSX.Element;

declare const IconAcUnit: (props: any) => JSX.Element;

declare const IconAccessAlarm: (props: any) => JSX.Element;

declare const IconAccessAlarms: (props: any) => JSX.Element;

declare const IconAccessTime: (props: any) => JSX.Element;

declare const IconAccessibilityNew: (props: any) => JSX.Element;

declare const IconAccessibility: (props: any) => JSX.Element;

declare const IconAccessibleForward: (props: any) => JSX.Element;

declare const IconAccessible: (props: any) => JSX.Element;

declare const IconAccountBalanceWallet: (props: any) => JSX.Element;

declare const IconAccountBalance: (props: any) => JSX.Element;

declare const IconAccountBox: (props: any) => JSX.Element;

declare const IconAccountCircle: (props: any) => JSX.Element;

declare const IconAccountTree: (props: any) => JSX.Element;

declare const IconAdUnits: (props: any) => JSX.Element;

declare const IconAdb: (props: any) => JSX.Element;

declare const IconAddAPhoto: (props: any) => JSX.Element;

declare const IconAddAlarm: (props: any) => JSX.Element;

declare const IconAddAlert: (props: any) => JSX.Element;

declare const IconAddBox: (props: any) => JSX.Element;

declare const IconAddBusiness: (props: any) => JSX.Element;

declare const IconAddCircleOutline: (props: any) => JSX.Element;

declare const IconAddCircle: (props: any) => JSX.Element;

declare const IconAddComment: (props: any) => JSX.Element;

declare const IconAddIcCall: (props: any) => JSX.Element;

declare const IconAddLocationAlt: (props: any) => JSX.Element;

declare const IconAddLocation: (props: any) => JSX.Element;

declare const IconAddPhotoAlternate: (props: any) => JSX.Element;

declare const IconAddRoad: (props: any) => JSX.Element;

declare const IconAddShoppingCart: (props: any) => JSX.Element;

declare const IconAddTask: (props: any) => JSX.Element;

declare const IconAddToHomeScreen: (props: any) => JSX.Element;

declare const IconAddToPhotos: (props: any) => JSX.Element;

declare const IconAddToQueue: (props: any) => JSX.Element;

declare const IconAdd: (props: any) => JSX.Element;

declare const IconAddchart: (props: any) => JSX.Element;

declare const IconAdjust: (props: any) => JSX.Element;

declare const IconAdminPanelSettings: (props: any) => JSX.Element;

declare const IconAgriculture: (props: any) => JSX.Element;

declare const IconAirlineSeatFlatAngled: (props: any) => JSX.Element;

declare const IconAirlineSeatFlat: (props: any) => JSX.Element;

declare const IconAirlineSeatIndividualSuite: (props: any) => JSX.Element;

declare const IconAirlineSeatLegroomExtra: (props: any) => JSX.Element;

declare const IconAirlineSeatLegroomNormal: (props: any) => JSX.Element;

declare const IconAirlineSeatLegroomReduced: (props: any) => JSX.Element;

declare const IconAirlineSeatReclineExtra: (props: any) => JSX.Element;

declare const IconAirlineSeatReclineNormal: (props: any) => JSX.Element;

declare const IconAirplanemodeActive: (props: any) => JSX.Element;

declare const IconAirplanemodeInactive: (props: any) => JSX.Element;

declare const IconAirplay: (props: any) => JSX.Element;

declare const IconAirportShuttle: (props: any) => JSX.Element;

declare const IconAlarmAdd: (props: any) => JSX.Element;

declare const IconAlarmOff: (props: any) => JSX.Element;

declare const IconAlarmOn: (props: any) => JSX.Element;

declare const IconAlarm: (props: any) => JSX.Element;

declare const IconAlbum: (props: any) => JSX.Element;

declare const IconAllInbox: (props: any) => JSX.Element;

declare const IconAllInclusive: (props: any) => JSX.Element;

declare const IconAllOut: (props: any) => JSX.Element;

declare const IconAltRoute: (props: any) => JSX.Element;

declare const IconAlternateEmail: (props: any) => JSX.Element;

declare const IconAmpStories: (props: any) => JSX.Element;

declare const IconAnalytics: (props: any) => JSX.Element;

declare const IconAnchor: (props: any) => JSX.Element;

declare const IconAndroid: (props: any) => JSX.Element;

declare const IconAnnouncement: (props: any) => JSX.Element;

declare const IconApartment: (props: any) => JSX.Element;

declare const IconApi: (props: any) => JSX.Element;

declare const IconAppBlocking: (props: any) => JSX.Element;

declare const IconAppSettingsAlt: (props: any) => JSX.Element;

declare const IconApps: (props: any) => JSX.Element;

declare const IconArchitecture: (props: any) => JSX.Element;

declare const IconArchive: (props: any) => JSX.Element;

declare const IconArrowBackIos: (props: any) => JSX.Element;

declare const IconArrowBack: (props: any) => JSX.Element;

declare const IconArrowCircleDown: (props: any) => JSX.Element;

declare const IconArrowCircleUp: (props: any) => JSX.Element;

declare const IconArrowDownward: (props: any) => JSX.Element;

declare const IconArrowDropDownCircle: (props: any) => JSX.Element;

declare const IconArrowDropDown: (props: any) => JSX.Element;

declare const IconArrowDropUp: (props: any) => JSX.Element;

declare const IconArrowForwardIos: (props: any) => JSX.Element;

declare const IconArrowForward: (props: any) => JSX.Element;

declare const IconArrowLeft: (props: any) => JSX.Element;

declare const IconArrowRightAlt: (props: any) => JSX.Element;

declare const IconArrowRight: (props: any) => JSX.Element;

declare const IconArrowUpward: (props: any) => JSX.Element;

declare const IconArtTrack: (props: any) => JSX.Element;

declare const IconArticle: (props: any) => JSX.Element;

declare const IconAspectRatio: (props: any) => JSX.Element;

declare const IconAssessment: (props: any) => JSX.Element;

declare const IconAssignmentInd: (props: any) => JSX.Element;

declare const IconAssignmentLate: (props: any) => JSX.Element;

declare const IconAssignmentReturn: (props: any) => JSX.Element;

declare const IconAssignmentReturned: (props: any) => JSX.Element;

declare const IconAssignmentTurnedIn: (props: any) => JSX.Element;

declare const IconAssignment: (props: any) => JSX.Element;

declare const IconAssistantPhoto: (props: any) => JSX.Element;

declare const IconAssistant: (props: any) => JSX.Element;

declare const IconAtm: (props: any) => JSX.Element;

declare const IconAttachEmail: (props: any) => JSX.Element;

declare const IconAttachFile: (props: any) => JSX.Element;

declare const IconAttachMoney: (props: any) => JSX.Element;

declare const IconAttachment: (props: any) => JSX.Element;

declare const IconAttribution: (props: any) => JSX.Element;

declare const IconAudiotrack: (props: any) => JSX.Element;

declare const IconAutoDelete: (props: any) => JSX.Element;

declare const IconAutorenew: (props: any) => JSX.Element;

declare const IconAvTimer: (props: any) => JSX.Element;

declare const IconBabyChangingStation: (props: any) => JSX.Element;

declare const IconBackpack: (props: any) => JSX.Element;

declare const IconBackspace: (props: any) => JSX.Element;

declare const IconBackupTable: (props: any) => JSX.Element;

declare const IconBackup: (props: any) => JSX.Element;

declare const IconBallot: (props: any) => JSX.Element;

declare const IconBarChart: (props: any) => JSX.Element;

declare const IconBatchPrediction: (props: any) => JSX.Element;

declare const IconBathtub: (props: any) => JSX.Element;

declare const IconBatteryAlert: (props: any) => JSX.Element;

declare const IconBatteryChargingFull: (props: any) => JSX.Element;

declare const IconBatteryFull: (props: any) => JSX.Element;

declare const IconBatteryStd: (props: any) => JSX.Element;

declare const IconBatteryUnknown: (props: any) => JSX.Element;

declare const IconBeachAccess: (props: any) => JSX.Element;

declare const IconBedtime: (props: any) => JSX.Element;

declare const IconBeenhere: (props: any) => JSX.Element;

declare const IconBento: (props: any) => JSX.Element;

declare const IconBikeScooter: (props: any) => JSX.Element;

declare const IconBiotech: (props: any) => JSX.Element;

declare const IconBlock: (props: any) => JSX.Element;

declare const IconBluetoothAudio: (props: any) => JSX.Element;

declare const IconBluetoothConnected: (props: any) => JSX.Element;

declare const IconBluetoothDisabled: (props: any) => JSX.Element;

declare const IconBluetoothSearching: (props: any) => JSX.Element;

declare const IconBluetooth: (props: any) => JSX.Element;

declare const IconBlurCircular: (props: any) => JSX.Element;

declare const IconBlurLinear: (props: any) => JSX.Element;

declare const IconBlurOff: (props: any) => JSX.Element;

declare const IconBlurOn: (props: any) => JSX.Element;

declare const IconBookOnline: (props: any) => JSX.Element;

declare const IconBook: (props: any) => JSX.Element;

declare const IconBookmarkBorder: (props: any) => JSX.Element;

declare const IconBookmark: (props: any) => JSX.Element;

declare const IconBookmarks: (props: any) => JSX.Element;

declare const IconBorderAll: (props: any) => JSX.Element;

declare const IconBorderBottom: (props: any) => JSX.Element;

declare const IconBorderClear: (props: any) => JSX.Element;

declare const IconBorderHorizontal: (props: any) => JSX.Element;

declare const IconBorderInner: (props: any) => JSX.Element;

declare const IconBorderLeft: (props: any) => JSX.Element;

declare const IconBorderOuter: (props: any) => JSX.Element;

declare const IconBorderRight: (props: any) => JSX.Element;

declare const IconBorderStyle: (props: any) => JSX.Element;

declare const IconBorderTop: (props: any) => JSX.Element;

declare const IconBorderVertical: (props: any) => JSX.Element;

declare const IconBrandingWatermark: (props: any) => JSX.Element;

declare const IconBrightness_1: (props: any) => JSX.Element;

declare const IconBrightness_2: (props: any) => JSX.Element;

declare const IconBrightness_3: (props: any) => JSX.Element;

declare const IconBrightness_4: (props: any) => JSX.Element;

declare const IconBrightness_5: (props: any) => JSX.Element;

declare const IconBrightness_6: (props: any) => JSX.Element;

declare const IconBrightness_7: (props: any) => JSX.Element;

declare const IconBrightnessAuto: (props: any) => JSX.Element;

declare const IconBrightnessHigh: (props: any) => JSX.Element;

declare const IconBrightnessLow: (props: any) => JSX.Element;

declare const IconBrightnessMedium: (props: any) => JSX.Element;

declare const IconBrokenImage: (props: any) => JSX.Element;

declare const IconBrowserNotSupported: (props: any) => JSX.Element;

declare const IconBrush: (props: any) => JSX.Element;

declare const IconBubbleChart: (props: any) => JSX.Element;

declare const IconBugReport: (props: any) => JSX.Element;

declare const IconBuildCircle: (props: any) => JSX.Element;

declare const IconBuild: (props: any) => JSX.Element;

declare const IconBurstMode: (props: any) => JSX.Element;

declare const IconBusinessCenter: (props: any) => JSX.Element;

declare const IconBusiness: (props: any) => JSX.Element;

declare const IconCached: (props: any) => JSX.Element;

declare const IconCake: (props: any) => JSX.Element;

declare const IconCalculate: (props: any) => JSX.Element;

declare const IconCalendarToday: (props: any) => JSX.Element;

declare const IconCalendarViewDay: (props: any) => JSX.Element;

declare const IconCallEnd: (props: any) => JSX.Element;

declare const IconCallMade: (props: any) => JSX.Element;

declare const IconCallMerge: (props: any) => JSX.Element;

declare const IconCallMissedOutgoing: (props: any) => JSX.Element;

declare const IconCallMissed: (props: any) => JSX.Element;

declare const IconCallReceived: (props: any) => JSX.Element;

declare const IconCallSplit: (props: any) => JSX.Element;

declare const IconCallToAction: (props: any) => JSX.Element;

declare const IconCall: (props: any) => JSX.Element;

declare const IconCameraAlt: (props: any) => JSX.Element;

declare const IconCameraEnhance: (props: any) => JSX.Element;

declare const IconCameraFront: (props: any) => JSX.Element;

declare const IconCameraRear: (props: any) => JSX.Element;

declare const IconCameraRoll: (props: any) => JSX.Element;

declare const IconCamera: (props: any) => JSX.Element;

declare const IconCampaign: (props: any) => JSX.Element;

declare const IconCancelPresentation: (props: any) => JSX.Element;

declare const IconCancelScheduleSend: (props: any) => JSX.Element;

declare const IconCancel: (props: any) => JSX.Element;

declare const IconCardGiftcard: (props: any) => JSX.Element;

declare const IconCardMembership: (props: any) => JSX.Element;

declare const IconCardTravel: (props: any) => JSX.Element;

declare const IconCarpenter: (props: any) => JSX.Element;

declare const IconCasino: (props: any) => JSX.Element;

declare const IconCastConnected: (props: any) => JSX.Element;

declare const IconCastForEducation: (props: any) => JSX.Element;

declare const IconCast: (props: any) => JSX.Element;

declare const IconCategory: (props: any) => JSX.Element;

declare const IconCenterFocusStrong: (props: any) => JSX.Element;

declare const IconCenterFocusWeak: (props: any) => JSX.Element;

declare const IconChangeHistory: (props: any) => JSX.Element;

declare const IconChargingStation: (props: any) => JSX.Element;

declare const IconChatBubbleOutline: (props: any) => JSX.Element;

declare const IconChatBubble: (props: any) => JSX.Element;

declare const IconChat: (props: any) => JSX.Element;

declare const IconCheckBoxOutlineBlank: (props: any) => JSX.Element;

declare const IconCheckBox: (props: any) => JSX.Element;

declare const IconCheckCircleOutline: (props: any) => JSX.Element;

declare const IconCheckCircle: (props: any) => JSX.Element;

declare const IconCheck: (props: any) => JSX.Element;

declare const IconCheckroom: (props: any) => JSX.Element;

declare const IconChevronLeft: (props: any) => JSX.Element;

declare const IconChevronRight: (props: any) => JSX.Element;

declare const IconChildCare: (props: any) => JSX.Element;

declare const IconChildFriendly: (props: any) => JSX.Element;

declare const IconChromeReaderMode: (props: any) => JSX.Element;

declare const IconClass: (props: any) => JSX.Element;

declare const IconCleanHands: (props: any) => JSX.Element;

declare const IconCleaningServices: (props: any) => JSX.Element;

declare const IconClearAll: (props: any) => JSX.Element;

declare const IconClear: (props: any) => JSX.Element;

declare const IconCloseFullscreen: (props: any) => JSX.Element;

declare const IconClose: (props: any) => JSX.Element;

declare const IconClosedCaptionDisabled: (props: any) => JSX.Element;

declare const IconClosedCaption: (props: any) => JSX.Element;

declare const IconCloudCircle: (props: any) => JSX.Element;

declare const IconCloudDone: (props: any) => JSX.Element;

declare const IconCloudDownload: (props: any) => JSX.Element;

declare const IconCloudOff: (props: any) => JSX.Element;

declare const IconCloudQueue: (props: any) => JSX.Element;

declare const IconCloudUpload: (props: any) => JSX.Element;

declare const IconCloud: (props: any) => JSX.Element;

declare const IconCode: (props: any) => JSX.Element;

declare const IconCollectionsBookmark: (props: any) => JSX.Element;

declare const IconCollections: (props: any) => JSX.Element;

declare const IconColorLens: (props: any) => JSX.Element;

declare const IconColorize: (props: any) => JSX.Element;

declare const IconCommentBank: (props: any) => JSX.Element;

declare const IconComment: (props: any) => JSX.Element;

declare const IconCommute: (props: any) => JSX.Element;

declare const IconCompareArrows: (props: any) => JSX.Element;

declare const IconCompare: (props: any) => JSX.Element;

declare const IconCompassCalibration: (props: any) => JSX.Element;

declare const IconComputer: (props: any) => JSX.Element;

declare const IconConfirmationNumber: (props: any) => JSX.Element;

declare const IconConnectWithoutContact: (props: any) => JSX.Element;

declare const IconConstruction: (props: any) => JSX.Element;

declare const IconContactMail: (props: any) => JSX.Element;

declare const IconContactPage: (props: any) => JSX.Element;

declare const IconContactPhone: (props: any) => JSX.Element;

declare const IconContactSupport: (props: any) => JSX.Element;

declare const IconContactless: (props: any) => JSX.Element;

declare const IconContacts: (props: any) => JSX.Element;

declare const IconContentCopy: (props: any) => JSX.Element;

declare const IconContentCut: (props: any) => JSX.Element;

declare const IconContentPaste: (props: any) => JSX.Element;

declare const IconControlCamera: (props: any) => JSX.Element;

declare const IconControlPointDuplicate: (props: any) => JSX.Element;

declare const IconControlPoint: (props: any) => JSX.Element;

declare const IconCopyright: (props: any) => JSX.Element;

declare const IconCoronavirus: (props: any) => JSX.Element;

declare const IconCorporateFare: (props: any) => JSX.Element;

declare const IconCountertops: (props: any) => JSX.Element;

declare const IconCreateNewFolder: (props: any) => JSX.Element;

declare const IconCreate: (props: any) => JSX.Element;

declare const IconCreditCard: (props: any) => JSX.Element;

declare const IconCrop_16_9: (props: any) => JSX.Element;

declare const IconCrop_3_2: (props: any) => JSX.Element;

declare const IconCrop_5_4: (props: any) => JSX.Element;

declare const IconCrop_7_5: (props: any) => JSX.Element;

declare const IconCropDin: (props: any) => JSX.Element;

declare const IconCropFree: (props: any) => JSX.Element;

declare const IconCropLandscape: (props: any) => JSX.Element;

declare const IconCropOriginal: (props: any) => JSX.Element;

declare const IconCropPortrait: (props: any) => JSX.Element;

declare const IconCropRotate: (props: any) => JSX.Element;

declare const IconCropSquare: (props: any) => JSX.Element;

declare const IconCrop: (props: any) => JSX.Element;

declare const IconDashboard: (props: any) => JSX.Element;

declare const IconDataUsage: (props: any) => JSX.Element;

declare const IconDateRange: (props: any) => JSX.Element;

declare const IconDeck: (props: any) => JSX.Element;

declare const IconDehaze: (props: any) => JSX.Element;

declare const IconDeleteForever: (props: any) => JSX.Element;

declare const IconDeleteOutline: (props: any) => JSX.Element;

declare const IconDeleteSweep: (props: any) => JSX.Element;

declare const IconDelete: (props: any) => JSX.Element;

declare const IconDepartureBoard: (props: any) => JSX.Element;

declare const IconDescription: (props: any) => JSX.Element;

declare const IconDesignServices: (props: any) => JSX.Element;

declare const IconDesktopAccessDisabled: (props: any) => JSX.Element;

declare const IconDesktopMac: (props: any) => JSX.Element;

declare const IconDesktopWindows: (props: any) => JSX.Element;

declare const IconDetails: (props: any) => JSX.Element;

declare const IconDeveloperBoard: (props: any) => JSX.Element;

declare const IconDeveloperMode: (props: any) => JSX.Element;

declare const IconDeviceHub: (props: any) => JSX.Element;

declare const IconDeviceUnknown: (props: any) => JSX.Element;

declare const IconDevicesOther: (props: any) => JSX.Element;

declare const IconDevices: (props: any) => JSX.Element;

declare const IconDialerSip: (props: any) => JSX.Element;

declare const IconDialpad: (props: any) => JSX.Element;

declare const IconDirectionsBike: (props: any) => JSX.Element;

declare const IconDirectionsBoat: (props: any) => JSX.Element;

declare const IconDirectionsBus: (props: any) => JSX.Element;

declare const IconDirectionsCar: (props: any) => JSX.Element;

declare const IconDirectionsOff: (props: any) => JSX.Element;

declare const IconDirectionsRailway: (props: any) => JSX.Element;

declare const IconDirectionsRun: (props: any) => JSX.Element;

declare const IconDirectionsSubway: (props: any) => JSX.Element;

declare const IconDirectionsTransit: (props: any) => JSX.Element;

declare const IconDirectionsWalk: (props: any) => JSX.Element;

declare const IconDirections: (props: any) => JSX.Element;

declare const IconDisabledByDefault: (props: any) => JSX.Element;

declare const IconDiscFull: (props: any) => JSX.Element;

declare const IconDns: (props: any) => JSX.Element;

declare const IconDoDisturbAlt: (props: any) => JSX.Element;

declare const IconDoDisturbOff: (props: any) => JSX.Element;

declare const IconDoDisturbOn: (props: any) => JSX.Element;

declare const IconDoDisturb: (props: any) => JSX.Element;

declare const IconDoNotStep: (props: any) => JSX.Element;

declare const IconDoNotTouch: (props: any) => JSX.Element;

declare const IconDock: (props: any) => JSX.Element;

declare const IconDomainDisabled: (props: any) => JSX.Element;

declare const IconDomainVerification: (props: any) => JSX.Element;

declare const IconDomain: (props: any) => JSX.Element;

declare const IconDoneAll: (props: any) => JSX.Element;

declare const IconDoneOutline: (props: any) => JSX.Element;

declare const IconDone: (props: any) => JSX.Element;

declare const IconDonutLarge: (props: any) => JSX.Element;

declare const IconDonutSmall: (props: any) => JSX.Element;

declare const IconDoubleArrow: (props: any) => JSX.Element;

declare const IconDownloadDone: (props: any) => JSX.Element;

declare const IconDownload: (props: any) => JSX.Element;

declare const IconDrafts: (props: any) => JSX.Element;

declare const IconDragHandle: (props: any) => JSX.Element;

declare const IconDragIndicator: (props: any) => JSX.Element;

declare const IconDriveEta: (props: any) => JSX.Element;

declare const IconDry: (props: any) => JSX.Element;

declare const IconDuo: (props: any) => JSX.Element;

declare const IconDvr: (props: any) => JSX.Element;

declare const IconDynamicFeed: (props: any) => JSX.Element;

declare const IconDynamicForm: (props: any) => JSX.Element;

declare const IconEast: (props: any) => JSX.Element;

declare const IconEco: (props: any) => JSX.Element;

declare const IconEditAttributes: (props: any) => JSX.Element;

declare const IconEditLocation: (props: any) => JSX.Element;

declare const IconEditRoad: (props: any) => JSX.Element;

declare const IconEdit: (props: any) => JSX.Element;

declare const IconEject: (props: any) => JSX.Element;

declare const IconElderly: (props: any) => JSX.Element;

declare const IconElectricBike: (props: any) => JSX.Element;

declare const IconElectricCar: (props: any) => JSX.Element;

declare const IconElectricMoped: (props: any) => JSX.Element;

declare const IconElectricScooter: (props: any) => JSX.Element;

declare const IconElectricalServices: (props: any) => JSX.Element;

declare const IconElevator: (props: any) => JSX.Element;

declare const IconEmail: (props: any) => JSX.Element;

declare const IconEmojiEmotions: (props: any) => JSX.Element;

declare const IconEmojiEvents: (props: any) => JSX.Element;

declare const IconEmojiFlags: (props: any) => JSX.Element;

declare const IconEmojiFoodBeverage: (props: any) => JSX.Element;

declare const IconEmojiNature: (props: any) => JSX.Element;

declare const IconEmojiObjects: (props: any) => JSX.Element;

declare const IconEmojiPeople: (props: any) => JSX.Element;

declare const IconEmojiSymbols: (props: any) => JSX.Element;

declare const IconEmojiTransportation: (props: any) => JSX.Element;

declare const IconEngineering: (props: any) => JSX.Element;

declare const IconEnhancedEncryption: (props: any) => JSX.Element;

declare const IconEqualizer: (props: any) => JSX.Element;

declare const IconErrorOutline: (props: any) => JSX.Element;

declare const IconError: (props: any) => JSX.Element;

declare const IconEscalatorWarning: (props: any) => JSX.Element;

declare const IconEscalator: (props: any) => JSX.Element;

declare const IconEuroSymbol: (props: any) => JSX.Element;

declare const IconEuro: (props: any) => JSX.Element;

declare const IconEvStation: (props: any) => JSX.Element;

declare const IconEventAvailable: (props: any) => JSX.Element;

declare const IconEventBusy: (props: any) => JSX.Element;

declare const IconEventNote: (props: any) => JSX.Element;

declare const IconEventSeat: (props: any) => JSX.Element;

declare const IconEvent: (props: any) => JSX.Element;

declare const IconExitToApp: (props: any) => JSX.Element;

declare const IconExpandLess: (props: any) => JSX.Element;

declare const IconExpandMore: (props: any) => JSX.Element;

declare const IconExplicit: (props: any) => JSX.Element;

declare const IconExploreOff: (props: any) => JSX.Element;

declare const IconExplore: (props: any) => JSX.Element;

declare const IconExposureNeg_1: (props: any) => JSX.Element;

declare const IconExposureNeg_2: (props: any) => JSX.Element;

declare const IconExposurePlus_1: (props: any) => JSX.Element;

declare const IconExposurePlus_2: (props: any) => JSX.Element;

declare const IconExposureZero: (props: any) => JSX.Element;

declare const IconExposure: (props: any) => JSX.Element;

declare const IconExtension: (props: any) => JSX.Element;

declare const IconFaceUnlock: (props: any) => JSX.Element;

declare const IconFace: (props: any) => JSX.Element;

declare const IconFacebook: (props: any) => JSX.Element;

declare const IconFactCheck: (props: any) => JSX.Element;

declare const IconFamilyRestroom: (props: any) => JSX.Element;

declare const IconFastForward: (props: any) => JSX.Element;

declare const IconFastRewind: (props: any) => JSX.Element;

declare const IconFastfood: (props: any) => JSX.Element;

declare const IconFavoriteBorder: (props: any) => JSX.Element;

declare const IconFavorite: (props: any) => JSX.Element;

declare const IconFeaturedPlayList: (props: any) => JSX.Element;

declare const IconFeaturedVideo: (props: any) => JSX.Element;

declare const IconFeedback: (props: any) => JSX.Element;

declare const IconFence: (props: any) => JSX.Element;

declare const IconFiberDvr: (props: any) => JSX.Element;

declare const IconFiberManualRecord: (props: any) => JSX.Element;

declare const IconFiberNew: (props: any) => JSX.Element;

declare const IconFiberPin: (props: any) => JSX.Element;

declare const IconFiberSmartRecord: (props: any) => JSX.Element;

declare const IconFileCopy: (props: any) => JSX.Element;

declare const IconFilter_1: (props: any) => JSX.Element;

declare const IconFilter_2: (props: any) => JSX.Element;

declare const IconFilter_3: (props: any) => JSX.Element;

declare const IconFilter_4: (props: any) => JSX.Element;

declare const IconFilter_5: (props: any) => JSX.Element;

declare const IconFilter_6: (props: any) => JSX.Element;

declare const IconFilter_7: (props: any) => JSX.Element;

declare const IconFilter_8: (props: any) => JSX.Element;

declare const IconFilter_9Plus: (props: any) => JSX.Element;

declare const IconFilter_9: (props: any) => JSX.Element;

declare const IconFilterAlt: (props: any) => JSX.Element;

declare const IconFilterBAndW: (props: any) => JSX.Element;

declare const IconFilterCenterFocus: (props: any) => JSX.Element;

declare const IconFilterDrama: (props: any) => JSX.Element;

declare const IconFilterFrames: (props: any) => JSX.Element;

declare const IconFilterHdr: (props: any) => JSX.Element;

declare const IconFilterList: (props: any) => JSX.Element;

declare const IconFilterNone: (props: any) => JSX.Element;

declare const IconFilterTiltShift: (props: any) => JSX.Element;

declare const IconFilterVintage: (props: any) => JSX.Element;

declare const IconFilter: (props: any) => JSX.Element;

declare const IconFindInPage: (props: any) => JSX.Element;

declare const IconFindReplace: (props: any) => JSX.Element;

declare const IconFingerprint: (props: any) => JSX.Element;

declare const IconFireExtinguisher: (props: any) => JSX.Element;

declare const IconFireplace: (props: any) => JSX.Element;

declare const IconFirstPage: (props: any) => JSX.Element;

declare const IconFitnessCenter: (props: any) => JSX.Element;

declare const IconFlag: (props: any) => JSX.Element;

declare const IconFlaky: (props: any) => JSX.Element;

declare const IconFlare: (props: any) => JSX.Element;

declare const IconFlashAuto: (props: any) => JSX.Element;

declare const IconFlashOff: (props: any) => JSX.Element;

declare const IconFlashOn: (props: any) => JSX.Element;

declare const IconFlightLand: (props: any) => JSX.Element;

declare const IconFlightTakeoff: (props: any) => JSX.Element;

declare const IconFlight: (props: any) => JSX.Element;

declare const IconFlipCameraAndroid: (props: any) => JSX.Element;

declare const IconFlipCameraIos: (props: any) => JSX.Element;

declare const IconFlipToBack: (props: any) => JSX.Element;

declare const IconFlipToFront: (props: any) => JSX.Element;

declare const IconFlip: (props: any) => JSX.Element;

declare const IconFolderOpen: (props: any) => JSX.Element;

declare const IconFolderShared: (props: any) => JSX.Element;

declare const IconFolderSpecial: (props: any) => JSX.Element;

declare const IconFolder: (props: any) => JSX.Element;

declare const IconFollowTheSigns: (props: any) => JSX.Element;

declare const IconFontDownload: (props: any) => JSX.Element;

declare const IconFoodBank: (props: any) => JSX.Element;

declare const IconFormatAlignCenter: (props: any) => JSX.Element;

declare const IconFormatAlignJustify: (props: any) => JSX.Element;

declare const IconFormatAlignLeft: (props: any) => JSX.Element;

declare const IconFormatAlignRight: (props: any) => JSX.Element;

declare const IconFormatBold: (props: any) => JSX.Element;

declare const IconFormatClear: (props: any) => JSX.Element;

declare const IconFormatColorReset: (props: any) => JSX.Element;

declare const IconFormatIndentDecrease: (props: any) => JSX.Element;

declare const IconFormatIndentIncrease: (props: any) => JSX.Element;

declare const IconFormatItalic: (props: any) => JSX.Element;

declare const IconFormatLineSpacing: (props: any) => JSX.Element;

declare const IconFormatListBulleted: (props: any) => JSX.Element;

declare const IconFormatListNumberedRtl: (props: any) => JSX.Element;

declare const IconFormatListNumbered: (props: any) => JSX.Element;

declare const IconFormatPaint: (props: any) => JSX.Element;

declare const IconFormatQuote: (props: any) => JSX.Element;

declare const IconFormatShapes: (props: any) => JSX.Element;

declare const IconFormatSize: (props: any) => JSX.Element;

declare const IconFormatStrikethrough: (props: any) => JSX.Element;

declare const IconFormatTextdirectionLToR: (props: any) => JSX.Element;

declare const IconFormatTextdirectionRToL: (props: any) => JSX.Element;

declare const IconFormatUnderlined: (props: any) => JSX.Element;

declare const IconForum: (props: any) => JSX.Element;

declare const IconForward_10: (props: any) => JSX.Element;

declare const IconForward_30: (props: any) => JSX.Element;

declare const IconForward_5: (props: any) => JSX.Element;

declare const IconForwardToInbox: (props: any) => JSX.Element;

declare const IconForward: (props: any) => JSX.Element;

declare const IconFoundation: (props: any) => JSX.Element;

declare const IconFreeBreakfast: (props: any) => JSX.Element;

declare const IconFullscreenExit: (props: any) => JSX.Element;

declare const IconFullscreen: (props: any) => JSX.Element;

declare const IconFunctions: (props: any) => JSX.Element;

declare const IconGTranslate: (props: any) => JSX.Element;

declare const IconGamepad: (props: any) => JSX.Element;

declare const IconGames: (props: any) => JSX.Element;

declare const IconGavel: (props: any) => JSX.Element;

declare const IconGesture: (props: any) => JSX.Element;

declare const IconGetApp: (props: any) => JSX.Element;

declare const IconGif: (props: any) => JSX.Element;

declare const IconGolfCourse: (props: any) => JSX.Element;

declare const IconGpsFixed: (props: any) => JSX.Element;

declare const IconGpsNotFixed: (props: any) => JSX.Element;

declare const IconGpsOff: (props: any) => JSX.Element;

declare const IconGrade: (props: any) => JSX.Element;

declare const IconGradient: (props: any) => JSX.Element;

declare const IconGrading: (props: any) => JSX.Element;

declare const IconGrain: (props: any) => JSX.Element;

declare const IconGraphicEq: (props: any) => JSX.Element;

declare const IconGrass: (props: any) => JSX.Element;

declare const IconGridOff: (props: any) => JSX.Element;

declare const IconGridOn: (props: any) => JSX.Element;

declare const IconGroupAdd: (props: any) => JSX.Element;

declare const IconGroupWork: (props: any) => JSX.Element;

declare const IconGroup: (props: any) => JSX.Element;

declare const IconGroups: (props: any) => JSX.Element;

declare const IconHandyman: (props: any) => JSX.Element;

declare const IconHd: (props: any) => JSX.Element;

declare const IconHdrOff: (props: any) => JSX.Element;

declare const IconHdrOn: (props: any) => JSX.Element;

declare const IconHdrStrong: (props: any) => JSX.Element;

declare const IconHdrWeak: (props: any) => JSX.Element;

declare const IconHeadsetMic: (props: any) => JSX.Element;

declare const IconHeadset: (props: any) => JSX.Element;

declare const IconHealing: (props: any) => JSX.Element;

declare const IconHearingDisabled: (props: any) => JSX.Element;

declare const IconHearing: (props: any) => JSX.Element;

declare const IconHeight: (props: any) => JSX.Element;

declare const IconHelpCenter: (props: any) => JSX.Element;

declare const IconHelpOutline: (props: any) => JSX.Element;

declare const IconHelp: (props: any) => JSX.Element;

declare const IconHighQuality: (props: any) => JSX.Element;

declare const IconHighlightAlt: (props: any) => JSX.Element;

declare const IconHighlightOff: (props: any) => JSX.Element;

declare const IconHighlight: (props: any) => JSX.Element;

declare const IconHistoryEdu: (props: any) => JSX.Element;

declare const IconHistoryToggleOff: (props: any) => JSX.Element;

declare const IconHistory: (props: any) => JSX.Element;

declare const IconHomeRepairService: (props: any) => JSX.Element;

declare const IconHomeWork: (props: any) => JSX.Element;

declare const IconHome: (props: any) => JSX.Element;

declare const IconHorizontalRule: (props: any) => JSX.Element;

declare const IconHorizontalSplit: (props: any) => JSX.Element;

declare const IconHotTub: (props: any) => JSX.Element;

declare const IconHotel: (props: any) => JSX.Element;

declare const IconHourglassBottom: (props: any) => JSX.Element;

declare const IconHourglassDisabled: (props: any) => JSX.Element;

declare const IconHourglassEmpty: (props: any) => JSX.Element;

declare const IconHourglassFull: (props: any) => JSX.Element;

declare const IconHourglassTop: (props: any) => JSX.Element;

declare const IconHouseSiding: (props: any) => JSX.Element;

declare const IconHouse: (props: any) => JSX.Element;

declare const IconHowToReg: (props: any) => JSX.Element;

declare const IconHowToVote: (props: any) => JSX.Element;

declare const IconHttp: (props: any) => JSX.Element;

declare const IconHttps: (props: any) => JSX.Element;

declare const IconHvac: (props: any) => JSX.Element;

declare const IconImageAspectRatio: (props: any) => JSX.Element;

declare const IconImageNotSupported: (props: any) => JSX.Element;

declare const IconImageSearch: (props: any) => JSX.Element;

declare const IconImage: (props: any) => JSX.Element;

declare const IconImportContacts: (props: any) => JSX.Element;

declare const IconImportExport: (props: any) => JSX.Element;

declare const IconImportantDevices: (props: any) => JSX.Element;

declare const IconInbox: (props: any) => JSX.Element;

declare const IconIndeterminateCheckBox: (props: any) => JSX.Element;

declare const IconInfo: (props: any) => JSX.Element;

declare const IconInput: (props: any) => JSX.Element;

declare const IconInsertChartOutlined: (props: any) => JSX.Element;

declare const IconInsertChart: (props: any) => JSX.Element;

declare const IconInsertComment: (props: any) => JSX.Element;

declare const IconInsertDriveFile: (props: any) => JSX.Element;

declare const IconInsertEmoticon: (props: any) => JSX.Element;

declare const IconInsertInvitation: (props: any) => JSX.Element;

declare const IconInsertLink: (props: any) => JSX.Element;

declare const IconInsertPhoto: (props: any) => JSX.Element;

declare const IconInsights: (props: any) => JSX.Element;

declare const IconIntegrationInstructions: (props: any) => JSX.Element;

declare const IconInvertColorsOff: (props: any) => JSX.Element;

declare const IconInvertColors: (props: any) => JSX.Element;

declare const IconIso: (props: any) => JSX.Element;

declare const IconKeyboardArrowDown: (props: any) => JSX.Element;

declare const IconKeyboardArrowLeft: (props: any) => JSX.Element;

declare const IconKeyboardArrowRight: (props: any) => JSX.Element;

declare const IconKeyboardArrowUp: (props: any) => JSX.Element;

declare const IconKeyboardBackspace: (props: any) => JSX.Element;

declare const IconKeyboardCapslock: (props: any) => JSX.Element;

declare const IconKeyboardHide: (props: any) => JSX.Element;

declare const IconKeyboardReturn: (props: any) => JSX.Element;

declare const IconKeyboardTab: (props: any) => JSX.Element;

declare const IconKeyboardVoice: (props: any) => JSX.Element;

declare const IconKeyboard: (props: any) => JSX.Element;

declare const IconKingBed: (props: any) => JSX.Element;

declare const IconKitchen: (props: any) => JSX.Element;

declare const IconLabelImportant: (props: any) => JSX.Element;

declare const IconLabelOff: (props: any) => JSX.Element;

declare const IconLabel: (props: any) => JSX.Element;

declare const IconLandscape: (props: any) => JSX.Element;

declare const IconLanguage: (props: any) => JSX.Element;

declare const IconLaptopChromebook: (props: any) => JSX.Element;

declare const IconLaptopMac: (props: any) => JSX.Element;

declare const IconLaptopWindows: (props: any) => JSX.Element;

declare const IconLaptop: (props: any) => JSX.Element;

declare const IconLastPage: (props: any) => JSX.Element;

declare const IconLaunch: (props: any) => JSX.Element;

declare const IconLayersClear: (props: any) => JSX.Element;

declare const IconLayers: (props: any) => JSX.Element;

declare const IconLeaderboard: (props: any) => JSX.Element;

declare const IconLeakAdd: (props: any) => JSX.Element;

declare const IconLeakRemove: (props: any) => JSX.Element;

declare const IconLegendToggle: (props: any) => JSX.Element;

declare const IconLens: (props: any) => JSX.Element;

declare const IconLibraryAddCheck: (props: any) => JSX.Element;

declare const IconLibraryAdd: (props: any) => JSX.Element;

declare const IconLibraryBooks: (props: any) => JSX.Element;

declare const IconLibraryMusic: (props: any) => JSX.Element;

declare const IconLightbulb: (props: any) => JSX.Element;

declare const IconLineStyle: (props: any) => JSX.Element;

declare const IconLineWeight: (props: any) => JSX.Element;

declare const IconLinearScale: (props: any) => JSX.Element;

declare const IconLinkOff: (props: any) => JSX.Element;

declare const IconLink: (props: any) => JSX.Element;

declare const IconLinkedCamera: (props: any) => JSX.Element;

declare const IconListAlt: (props: any) => JSX.Element;

declare const IconList: (props: any) => JSX.Element;

declare const IconLiveHelp: (props: any) => JSX.Element;

declare const IconLiveTv: (props: any) => JSX.Element;

declare const IconLocalActivity: (props: any) => JSX.Element;

declare const IconLocalAirport: (props: any) => JSX.Element;

declare const IconLocalAtm: (props: any) => JSX.Element;

declare const IconLocalBar: (props: any) => JSX.Element;

declare const IconLocalCafe: (props: any) => JSX.Element;

declare const IconLocalCarWash: (props: any) => JSX.Element;

declare const IconLocalConvenienceStore: (props: any) => JSX.Element;

declare const IconLocalDining: (props: any) => JSX.Element;

declare const IconLocalDrink: (props: any) => JSX.Element;

declare const IconLocalFireDepartment: (props: any) => JSX.Element;

declare const IconLocalFlorist: (props: any) => JSX.Element;

declare const IconLocalGasStation: (props: any) => JSX.Element;

declare const IconLocalGroceryStore: (props: any) => JSX.Element;

declare const IconLocalHospital: (props: any) => JSX.Element;

declare const IconLocalHotel: (props: any) => JSX.Element;

declare const IconLocalLaundryService: (props: any) => JSX.Element;

declare const IconLocalLibrary: (props: any) => JSX.Element;

declare const IconLocalMall: (props: any) => JSX.Element;

declare const IconLocalMovies: (props: any) => JSX.Element;

declare const IconLocalOffer: (props: any) => JSX.Element;

declare const IconLocalParking: (props: any) => JSX.Element;

declare const IconLocalPharmacy: (props: any) => JSX.Element;

declare const IconLocalPhone: (props: any) => JSX.Element;

declare const IconLocalPizza: (props: any) => JSX.Element;

declare const IconLocalPlay: (props: any) => JSX.Element;

declare const IconLocalPolice: (props: any) => JSX.Element;

declare const IconLocalPostOffice: (props: any) => JSX.Element;

declare const IconLocalPrintshop: (props: any) => JSX.Element;

declare const IconLocalSee: (props: any) => JSX.Element;

declare const IconLocalShipping: (props: any) => JSX.Element;

declare const IconLocalTaxi: (props: any) => JSX.Element;

declare const IconLocationCity: (props: any) => JSX.Element;

declare const IconLocationDisabled: (props: any) => JSX.Element;

declare const IconLocationOff: (props: any) => JSX.Element;

declare const IconLocationOn: (props: any) => JSX.Element;

declare const IconLocationSearching: (props: any) => JSX.Element;

declare const IconLockOpen: (props: any) => JSX.Element;

declare const IconLock: (props: any) => JSX.Element;

declare const IconLogin: (props: any) => JSX.Element;

declare const IconLooks_3: (props: any) => JSX.Element;

declare const IconLooks_4: (props: any) => JSX.Element;

declare const IconLooks_5: (props: any) => JSX.Element;

declare const IconLooks_6: (props: any) => JSX.Element;

declare const IconLooksOne: (props: any) => JSX.Element;

declare const IconLooksTwo: (props: any) => JSX.Element;

declare const IconLooks: (props: any) => JSX.Element;

declare const IconLoop: (props: any) => JSX.Element;

declare const IconLoupe: (props: any) => JSX.Element;

declare const IconLowPriority: (props: any) => JSX.Element;

declare const IconLoyalty: (props: any) => JSX.Element;

declare const IconLuggage: (props: any) => JSX.Element;

declare const IconMailOutline: (props: any) => JSX.Element;

declare const IconMail: (props: any) => JSX.Element;

declare const IconMap: (props: any) => JSX.Element;

declare const IconMapsUgc: (props: any) => JSX.Element;

declare const IconMarkChatRead: (props: any) => JSX.Element;

declare const IconMarkChatUnread: (props: any) => JSX.Element;

declare const IconMarkEmailRead: (props: any) => JSX.Element;

declare const IconMarkEmailUnread: (props: any) => JSX.Element;

declare const IconMarkunreadMailbox: (props: any) => JSX.Element;

declare const IconMarkunread: (props: any) => JSX.Element;

declare const IconMasks: (props: any) => JSX.Element;

declare const IconMaximize: (props: any) => JSX.Element;

declare const IconMediation: (props: any) => JSX.Element;

declare const IconMedicalServices: (props: any) => JSX.Element;

declare const IconMeetingRoom: (props: any) => JSX.Element;

declare const IconMemory: (props: any) => JSX.Element;

declare const IconMenuBook: (props: any) => JSX.Element;

declare const IconMenuOpen: (props: any) => JSX.Element;

declare const IconMenu: (props: any) => JSX.Element;

declare const IconMergeType: (props: any) => JSX.Element;

declare const IconMessage: (props: any) => JSX.Element;

declare const IconMicNone: (props: any) => JSX.Element;

declare const IconMicOff: (props: any) => JSX.Element;

declare const IconMic: (props: any) => JSX.Element;

declare const IconMicrowave: (props: any) => JSX.Element;

declare const IconMilitaryTech: (props: any) => JSX.Element;

declare const IconMinimize: (props: any) => JSX.Element;

declare const IconMiscellaneousServices: (props: any) => JSX.Element;

declare const IconMissedVideoCall: (props: any) => JSX.Element;

declare const IconMms: (props: any) => JSX.Element;

declare const IconMobileFriendly: (props: any) => JSX.Element;

declare const IconMobileOff: (props: any) => JSX.Element;

declare const IconMobileScreenShare: (props: any) => JSX.Element;

declare const IconModeComment: (props: any) => JSX.Element;

declare const IconMode: (props: any) => JSX.Element;

declare const IconModelTraining: (props: any) => JSX.Element;

declare const IconMonetizationOn: (props: any) => JSX.Element;

declare const IconMoneyOffCsred: (props: any) => JSX.Element;

declare const IconMoneyOff: (props: any) => JSX.Element;

declare const IconMoney: (props: any) => JSX.Element;

declare const IconMonochromePhotos: (props: any) => JSX.Element;

declare const IconMoodBad: (props: any) => JSX.Element;

declare const IconMood: (props: any) => JSX.Element;

declare const IconMoped: (props: any) => JSX.Element;

declare const IconMoreHoriz: (props: any) => JSX.Element;

declare const IconMoreTime: (props: any) => JSX.Element;

declare const IconMoreVert: (props: any) => JSX.Element;

declare const IconMore: (props: any) => JSX.Element;

declare const IconMotionPhotosOn: (props: any) => JSX.Element;

declare const IconMotionPhotosPause: (props: any) => JSX.Element;

declare const IconMotionPhotosPaused: (props: any) => JSX.Element;

declare const IconMouse: (props: any) => JSX.Element;

declare const IconMoveToInbox: (props: any) => JSX.Element;

declare const IconMovieCreation: (props: any) => JSX.Element;

declare const IconMovieFilter: (props: any) => JSX.Element;

declare const IconMovie: (props: any) => JSX.Element;

declare const IconMultilineChart: (props: any) => JSX.Element;

declare const IconMultipleStop: (props: any) => JSX.Element;

declare const IconMuseum: (props: any) => JSX.Element;

declare const IconMusicNote: (props: any) => JSX.Element;

declare const IconMusicOff: (props: any) => JSX.Element;

declare const IconMusicVideo: (props: any) => JSX.Element;

declare const IconMyLocation: (props: any) => JSX.Element;

declare const IconNat: (props: any) => JSX.Element;

declare const IconNaturePeople: (props: any) => JSX.Element;

declare const IconNature: (props: any) => JSX.Element;

declare const IconNavigateBefore: (props: any) => JSX.Element;

declare const IconNavigateNext: (props: any) => JSX.Element;

declare const IconNavigation: (props: any) => JSX.Element;

declare const IconNearMeDisabled: (props: any) => JSX.Element;

declare const IconNearMe: (props: any) => JSX.Element;

declare const IconNetworkCheck: (props: any) => JSX.Element;

declare const IconNetworkLocked: (props: any) => JSX.Element;

declare const IconNewReleases: (props: any) => JSX.Element;

declare const IconNextPlan: (props: any) => JSX.Element;

declare const IconNextWeek: (props: any) => JSX.Element;

declare const IconNfc: (props: any) => JSX.Element;

declare const IconNightShelter: (props: any) => JSX.Element;

declare const IconNightsStay: (props: any) => JSX.Element;

declare const IconNoBackpack: (props: any) => JSX.Element;

declare const IconNoCell: (props: any) => JSX.Element;

declare const IconNoDrinks: (props: any) => JSX.Element;

declare const IconNoEncryptionGmailerrorred: (props: any) => JSX.Element;

declare const IconNoEncryption: (props: any) => JSX.Element;

declare const IconNoFlash: (props: any) => JSX.Element;

declare const IconNoFood: (props: any) => JSX.Element;

declare const IconNoLuggage: (props: any) => JSX.Element;

declare const IconNoMeals: (props: any) => JSX.Element;

declare const IconNoMeetingRoom: (props: any) => JSX.Element;

declare const IconNoPhotography: (props: any) => JSX.Element;

declare const IconNoSim: (props: any) => JSX.Element;

declare const IconNoStroller: (props: any) => JSX.Element;

declare const IconNoTransfer: (props: any) => JSX.Element;

declare const IconNorthEast: (props: any) => JSX.Element;

declare const IconNorthWest: (props: any) => JSX.Element;

declare const IconNorth: (props: any) => JSX.Element;

declare const IconNotAccessible: (props: any) => JSX.Element;

declare const IconNotInterested: (props: any) => JSX.Element;

declare const IconNotListedLocation: (props: any) => JSX.Element;

declare const IconNotStarted: (props: any) => JSX.Element;

declare const IconNoteAdd: (props: any) => JSX.Element;

declare const IconNote: (props: any) => JSX.Element;

declare const IconNotes: (props: any) => JSX.Element;

declare const IconNotificationImportant: (props: any) => JSX.Element;

declare const IconNotificationsActive: (props: any) => JSX.Element;

declare const IconNotificationsNone: (props: any) => JSX.Element;

declare const IconNotificationsOff: (props: any) => JSX.Element;

declare const IconNotificationsPaused: (props: any) => JSX.Element;

declare const IconNotifications: (props: any) => JSX.Element;

declare const IconOfflineBolt: (props: any) => JSX.Element;

declare const IconOfflinePin: (props: any) => JSX.Element;

declare const IconOndemandVideo: (props: any) => JSX.Element;

declare const IconOnlinePrediction: (props: any) => JSX.Element;

declare const IconOpacity: (props: any) => JSX.Element;

declare const IconOpenInBrowser: (props: any) => JSX.Element;

declare const IconOpenInFull: (props: any) => JSX.Element;

declare const IconOpenInNew: (props: any) => JSX.Element;

declare const IconOpenWith: (props: any) => JSX.Element;

declare const IconOutbond: (props: any) => JSX.Element;

declare const IconOutdoorGrill: (props: any) => JSX.Element;

declare const IconOutlet: (props: any) => JSX.Element;

declare const IconOutlinedFlag: (props: any) => JSX.Element;

declare const IconPages: (props: any) => JSX.Element;

declare const IconPageview: (props: any) => JSX.Element;

declare const IconPalette: (props: any) => JSX.Element;

declare const IconPanTool: (props: any) => JSX.Element;

declare const IconPanoramaFishEye: (props: any) => JSX.Element;

declare const IconPanoramaHorizontal: (props: any) => JSX.Element;

declare const IconPanoramaVertical: (props: any) => JSX.Element;

declare const IconPanoramaWideAngle: (props: any) => JSX.Element;

declare const IconPanorama: (props: any) => JSX.Element;

declare const IconPartyMode: (props: any) => JSX.Element;

declare const IconPauseCircleFilled: (props: any) => JSX.Element;

declare const IconPauseCircleOutline: (props: any) => JSX.Element;

declare const IconPausePresentation: (props: any) => JSX.Element;

declare const IconPause: (props: any) => JSX.Element;

declare const IconPayment: (props: any) => JSX.Element;

declare const IconPayments: (props: any) => JSX.Element;

declare const IconPedalBike: (props: any) => JSX.Element;

declare const IconPendingActions: (props: any) => JSX.Element;

declare const IconPending: (props: any) => JSX.Element;

declare const IconPeopleAlt: (props: any) => JSX.Element;

declare const IconPeopleOutline: (props: any) => JSX.Element;

declare const IconPeople: (props: any) => JSX.Element;

declare const IconPermCameraMic: (props: any) => JSX.Element;

declare const IconPermContactCalendar: (props: any) => JSX.Element;

declare const IconPermDataSetting: (props: any) => JSX.Element;

declare const IconPermDeviceInformation: (props: any) => JSX.Element;

declare const IconPermIdentity: (props: any) => JSX.Element;

declare const IconPermMedia: (props: any) => JSX.Element;

declare const IconPermPhoneMsg: (props: any) => JSX.Element;

declare const IconPermScanWifi: (props: any) => JSX.Element;

declare const IconPersonAddAlt_1: (props: any) => JSX.Element;

declare const IconPersonAddDisabled: (props: any) => JSX.Element;

declare const IconPersonAdd: (props: any) => JSX.Element;

declare const IconPersonOutline: (props: any) => JSX.Element;

declare const IconPersonPinCircle: (props: any) => JSX.Element;

declare const IconPersonPin: (props: any) => JSX.Element;

declare const IconPersonRemoveAlt_1: (props: any) => JSX.Element;

declare const IconPersonRemove: (props: any) => JSX.Element;

declare const IconPersonSearch: (props: any) => JSX.Element;

declare const IconPerson: (props: any) => JSX.Element;

declare const IconPersonalVideo: (props: any) => JSX.Element;

declare const IconPestControlRodent: (props: any) => JSX.Element;

declare const IconPestControl: (props: any) => JSX.Element;

declare const IconPets: (props: any) => JSX.Element;

declare const IconPhoneAndroid: (props: any) => JSX.Element;

declare const IconPhoneBluetoothSpeaker: (props: any) => JSX.Element;

declare const IconPhoneCallback: (props: any) => JSX.Element;

declare const IconPhoneDisabled: (props: any) => JSX.Element;

declare const IconPhoneEnabled: (props: any) => JSX.Element;

declare const IconPhoneForwarded: (props: any) => JSX.Element;

declare const IconPhoneInTalk: (props: any) => JSX.Element;

declare const IconPhoneIphone: (props: any) => JSX.Element;

declare const IconPhoneLocked: (props: any) => JSX.Element;

declare const IconPhoneMissed: (props: any) => JSX.Element;

declare const IconPhonePaused: (props: any) => JSX.Element;

declare const IconPhone: (props: any) => JSX.Element;

declare const IconPhonelinkErase: (props: any) => JSX.Element;

declare const IconPhonelinkLock: (props: any) => JSX.Element;

declare const IconPhonelinkOff: (props: any) => JSX.Element;

declare const IconPhonelinkRing: (props: any) => JSX.Element;

declare const IconPhonelinkSetup: (props: any) => JSX.Element;

declare const IconPhonelink: (props: any) => JSX.Element;

declare const IconPhotoAlbum: (props: any) => JSX.Element;

declare const IconPhotoCamera: (props: any) => JSX.Element;

declare const IconPhotoFilter: (props: any) => JSX.Element;

declare const IconPhotoLibrary: (props: any) => JSX.Element;

declare const IconPhotoSizeSelectActual: (props: any) => JSX.Element;

declare const IconPhotoSizeSelectLarge: (props: any) => JSX.Element;

declare const IconPhotoSizeSelectSmall: (props: any) => JSX.Element;

declare const IconPhoto: (props: any) => JSX.Element;

declare const IconPictureAsPdf: (props: any) => JSX.Element;

declare const IconPictureInPictureAlt: (props: any) => JSX.Element;

declare const IconPictureInPicture: (props: any) => JSX.Element;

declare const IconPieChartOutline: (props: any) => JSX.Element;

declare const IconPieChart: (props: any) => JSX.Element;

declare const IconPinDrop: (props: any) => JSX.Element;

declare const IconPlace: (props: any) => JSX.Element;

declare const IconPlagiarism: (props: any) => JSX.Element;

declare const IconPlayArrow: (props: any) => JSX.Element;

declare const IconPlayCircleFilled: (props: any) => JSX.Element;

declare const IconPlayCircleOutline: (props: any) => JSX.Element;

declare const IconPlayForWork: (props: any) => JSX.Element;

declare const IconPlaylistAddCheck: (props: any) => JSX.Element;

declare const IconPlaylistAdd: (props: any) => JSX.Element;

declare const IconPlaylistPlay: (props: any) => JSX.Element;

declare const IconPlumbing: (props: any) => JSX.Element;

declare const IconPlusOne: (props: any) => JSX.Element;

declare const IconPointOfSale: (props: any) => JSX.Element;

declare const IconPolicy: (props: any) => JSX.Element;

declare const IconPoll: (props: any) => JSX.Element;

declare const IconPolymer: (props: any) => JSX.Element;

declare const IconPool: (props: any) => JSX.Element;

declare const IconPortableWifiOff: (props: any) => JSX.Element;

declare const IconPortrait: (props: any) => JSX.Element;

declare const IconPostAdd: (props: any) => JSX.Element;

declare const IconPowerInput: (props: any) => JSX.Element;

declare const IconPowerOff: (props: any) => JSX.Element;

declare const IconPowerSettingsNew: (props: any) => JSX.Element;

declare const IconPower: (props: any) => JSX.Element;

declare const IconPrecisionManufacturing: (props: any) => JSX.Element;

declare const IconPregnantWoman: (props: any) => JSX.Element;

declare const IconPresentToAll: (props: any) => JSX.Element;

declare const IconPreview: (props: any) => JSX.Element;

declare const IconPrintDisabled: (props: any) => JSX.Element;

declare const IconPrint: (props: any) => JSX.Element;

declare const IconPriorityHigh: (props: any) => JSX.Element;

declare const IconPrivacyTip: (props: any) => JSX.Element;

declare const IconPsychology: (props: any) => JSX.Element;

declare const IconPublicOff: (props: any) => JSX.Element;

declare const IconPublic: (props: any) => JSX.Element;

declare const IconPublish: (props: any) => JSX.Element;

declare const IconPublishedWithChanges: (props: any) => JSX.Element;

declare const IconPushPin: (props: any) => JSX.Element;

declare const IconQrCodeScanner: (props: any) => JSX.Element;

declare const IconQrCode: (props: any) => JSX.Element;

declare const IconQueryBuilder: (props: any) => JSX.Element;

declare const IconQuestionAnswer: (props: any) => JSX.Element;

declare const IconQueueMusic: (props: any) => JSX.Element;

declare const IconQueuePlayNext: (props: any) => JSX.Element;

declare const IconQueue: (props: any) => JSX.Element;

declare const IconQuickreply: (props: any) => JSX.Element;

declare const IconRadioButtonChecked: (props: any) => JSX.Element;

declare const IconRadioButtonUnchecked: (props: any) => JSX.Element;

declare const IconRadio: (props: any) => JSX.Element;

declare const IconRateReview: (props: any) => JSX.Element;

declare const IconReadMore: (props: any) => JSX.Element;

declare const IconReceiptLong: (props: any) => JSX.Element;

declare const IconReceipt: (props: any) => JSX.Element;

declare const IconRecentActors: (props: any) => JSX.Element;

declare const IconRecordVoiceOver: (props: any) => JSX.Element;

declare const IconRedeem: (props: any) => JSX.Element;

declare const IconRedo: (props: any) => JSX.Element;

declare const IconReduceCapacity: (props: any) => JSX.Element;

declare const IconRefresh: (props: any) => JSX.Element;

declare const IconRemoveCircleOutline: (props: any) => JSX.Element;

declare const IconRemoveCircle: (props: any) => JSX.Element;

declare const IconRemoveFromQueue: (props: any) => JSX.Element;

declare const IconRemoveRedEye: (props: any) => JSX.Element;

declare const IconRemoveShoppingCart: (props: any) => JSX.Element;

declare const IconRemove: (props: any) => JSX.Element;

declare const IconReorder: (props: any) => JSX.Element;

declare const IconRepeatOne: (props: any) => JSX.Element;

declare const IconRepeat: (props: any) => JSX.Element;

declare const IconReplay_10: (props: any) => JSX.Element;

declare const IconReplay_30: (props: any) => JSX.Element;

declare const IconReplay_5: (props: any) => JSX.Element;

declare const IconReplay: (props: any) => JSX.Element;

declare const IconReplyAll: (props: any) => JSX.Element;

declare const IconReply: (props: any) => JSX.Element;

declare const IconReportGmailerrorred: (props: any) => JSX.Element;

declare const IconReportOff: (props: any) => JSX.Element;

declare const IconReportProblem: (props: any) => JSX.Element;

declare const IconReport: (props: any) => JSX.Element;

declare const IconRequestPage: (props: any) => JSX.Element;

declare const IconRequestQuote: (props: any) => JSX.Element;

declare const IconRestaurantMenu: (props: any) => JSX.Element;

declare const IconRestaurant: (props: any) => JSX.Element;

declare const IconRestoreFromTrash: (props: any) => JSX.Element;

declare const IconRestorePage: (props: any) => JSX.Element;

declare const IconRestore: (props: any) => JSX.Element;

declare const IconRingVolume: (props: any) => JSX.Element;

declare const IconRoofing: (props: any) => JSX.Element;

declare const IconRoomPreferences: (props: any) => JSX.Element;

declare const IconRoomService: (props: any) => JSX.Element;

declare const IconRoom: (props: any) => JSX.Element;

declare const IconRotate_90DegreesCcw: (props: any) => JSX.Element;

declare const IconRotateLeft: (props: any) => JSX.Element;

declare const IconRotateRight: (props: any) => JSX.Element;

declare const IconRoundedCorner: (props: any) => JSX.Element;

declare const IconRouter: (props: any) => JSX.Element;

declare const IconRowing: (props: any) => JSX.Element;

declare const IconRssFeed: (props: any) => JSX.Element;

declare const IconRuleFolder: (props: any) => JSX.Element;

declare const IconRule: (props: any) => JSX.Element;

declare const IconRunCircle: (props: any) => JSX.Element;

declare const IconRvHookup: (props: any) => JSX.Element;

declare const IconSanitizer: (props: any) => JSX.Element;

declare const IconSatellite: (props: any) => JSX.Element;

declare const IconSaveAlt: (props: any) => JSX.Element;

declare const IconSave: (props: any) => JSX.Element;

declare const IconScanner: (props: any) => JSX.Element;

declare const IconScatterPlot: (props: any) => JSX.Element;

declare const IconSchedule: (props: any) => JSX.Element;

declare const IconSchool: (props: any) => JSX.Element;

declare const IconScience: (props: any) => JSX.Element;

declare const IconScore: (props: any) => JSX.Element;

declare const IconScreenLockLandscape: (props: any) => JSX.Element;

declare const IconScreenLockPortrait: (props: any) => JSX.Element;

declare const IconScreenLockRotation: (props: any) => JSX.Element;

declare const IconScreenRotation: (props: any) => JSX.Element;

declare const IconScreenShare: (props: any) => JSX.Element;

declare const IconSdCardAlert: (props: any) => JSX.Element;

declare const IconSdCard: (props: any) => JSX.Element;

declare const IconSdStorage: (props: any) => JSX.Element;

declare const IconSearchOff: (props: any) => JSX.Element;

declare const IconSearch: (props: any) => JSX.Element;

declare const IconSecurity: (props: any) => JSX.Element;

declare const IconSelectAll: (props: any) => JSX.Element;

declare const IconSelfImprovement: (props: any) => JSX.Element;

declare const IconSend: (props: any) => JSX.Element;

declare const IconSensorDoor: (props: any) => JSX.Element;

declare const IconSensorWindow: (props: any) => JSX.Element;

declare const IconSentimentDissatisfied: (props: any) => JSX.Element;

declare const IconSentimentNeutral: (props: any) => JSX.Element;

declare const IconSentimentSatisfiedAlt: (props: any) => JSX.Element;

declare const IconSentimentSatisfied: (props: any) => JSX.Element;

declare const IconSentimentVeryDissatisfied: (props: any) => JSX.Element;

declare const IconSentimentVerySatisfied: (props: any) => JSX.Element;

declare const IconSetMeal: (props: any) => JSX.Element;

declare const IconSettingsApplications: (props: any) => JSX.Element;

declare const IconSettingsBackupRestore: (props: any) => JSX.Element;

declare const IconSettingsBluetooth: (props: any) => JSX.Element;

declare const IconSettingsBrightness: (props: any) => JSX.Element;

declare const IconSettingsCell: (props: any) => JSX.Element;

declare const IconSettingsEthernet: (props: any) => JSX.Element;

declare const IconSettingsInputAntenna: (props: any) => JSX.Element;

declare const IconSettingsInputComponent: (props: any) => JSX.Element;

declare const IconSettingsInputComposite: (props: any) => JSX.Element;

declare const IconSettingsInputHdmi: (props: any) => JSX.Element;

declare const IconSettingsInputSvideo: (props: any) => JSX.Element;

declare const IconSettingsOverscan: (props: any) => JSX.Element;

declare const IconSettingsPhone: (props: any) => JSX.Element;

declare const IconSettingsPower: (props: any) => JSX.Element;

declare const IconSettingsRemote: (props: any) => JSX.Element;

declare const IconSettingsSystemDaydream: (props: any) => JSX.Element;

declare const IconSettingsVoice: (props: any) => JSX.Element;

declare const IconSettings: (props: any) => JSX.Element;

declare const IconShare: (props: any) => JSX.Element;

declare const IconShopTwo: (props: any) => JSX.Element;

declare const IconShop: (props: any) => JSX.Element;

declare const IconShoppingBag: (props: any) => JSX.Element;

declare const IconShoppingBasket: (props: any) => JSX.Element;

declare const IconShoppingCart: (props: any) => JSX.Element;

declare const IconShortText: (props: any) => JSX.Element;

declare const IconShowChart: (props: any) => JSX.Element;

declare const IconShuffle: (props: any) => JSX.Element;

declare const IconShutterSpeed: (props: any) => JSX.Element;

declare const IconSick: (props: any) => JSX.Element;

declare const IconSignalCellular_4Bar: (props: any) => JSX.Element;

declare const IconSignalCellularAlt: (props: any) => JSX.Element;

declare const IconSignalCellularConnectedNoInternet_4Bar: (props: any) => JSX.Element;

declare const IconSignalCellularNoSim: (props: any) => JSX.Element;

declare const IconSignalCellularNull: (props: any) => JSX.Element;

declare const IconSignalCellularOff: (props: any) => JSX.Element;

declare const IconSignalWifi_4BarLock: (props: any) => JSX.Element;

declare const IconSignalWifi_4Bar: (props: any) => JSX.Element;

declare const IconSignalWifiOff: (props: any) => JSX.Element;

declare const IconSimCard: (props: any) => JSX.Element;

declare const IconSingleBed: (props: any) => JSX.Element;

declare const IconSkipNext: (props: any) => JSX.Element;

declare const IconSkipPrevious: (props: any) => JSX.Element;

declare const IconSlideshow: (props: any) => JSX.Element;

declare const IconSlowMotionVideo: (props: any) => JSX.Element;

declare const IconSmartButton: (props: any) => JSX.Element;

declare const IconSmartphone: (props: any) => JSX.Element;

declare const IconSmokeFree: (props: any) => JSX.Element;

declare const IconSmokingRooms: (props: any) => JSX.Element;

declare const IconSmsFailed: (props: any) => JSX.Element;

declare const IconSms: (props: any) => JSX.Element;

declare const IconSnippetFolder: (props: any) => JSX.Element;

declare const IconSnooze: (props: any) => JSX.Element;

declare const IconSoap: (props: any) => JSX.Element;

declare const IconSortByAlpha: (props: any) => JSX.Element;

declare const IconSort: (props: any) => JSX.Element;

declare const IconSource: (props: any) => JSX.Element;

declare const IconSouthEast: (props: any) => JSX.Element;

declare const IconSouthWest: (props: any) => JSX.Element;

declare const IconSouth: (props: any) => JSX.Element;

declare const IconSpa: (props: any) => JSX.Element;

declare const IconSpaceBar: (props: any) => JSX.Element;

declare const IconSpeakerGroup: (props: any) => JSX.Element;

declare const IconSpeakerNotesOff: (props: any) => JSX.Element;

declare const IconSpeakerNotes: (props: any) => JSX.Element;

declare const IconSpeakerPhone: (props: any) => JSX.Element;

declare const IconSpeaker: (props: any) => JSX.Element;

declare const IconSpeed: (props: any) => JSX.Element;

declare const IconSpellcheck: (props: any) => JSX.Element;

declare const IconSportsBar: (props: any) => JSX.Element;

declare const IconSportsBaseball: (props: any) => JSX.Element;

declare const IconSportsBasketball: (props: any) => JSX.Element;

declare const IconSportsCricket: (props: any) => JSX.Element;

declare const IconSportsEsports: (props: any) => JSX.Element;

declare const IconSportsFootball: (props: any) => JSX.Element;

declare const IconSportsGolf: (props: any) => JSX.Element;

declare const IconSportsHandball: (props: any) => JSX.Element;

declare const IconSportsHockey: (props: any) => JSX.Element;

declare const IconSportsKabaddi: (props: any) => JSX.Element;

declare const IconSportsMma: (props: any) => JSX.Element;

declare const IconSportsMotorsports: (props: any) => JSX.Element;

declare const IconSportsRugby: (props: any) => JSX.Element;

declare const IconSportsSoccer: (props: any) => JSX.Element;

declare const IconSportsTennis: (props: any) => JSX.Element;

declare const IconSportsVolleyball: (props: any) => JSX.Element;

declare const IconSports: (props: any) => JSX.Element;

declare const IconSquareFoot: (props: any) => JSX.Element;

declare const IconStackedLineChart: (props: any) => JSX.Element;

declare const IconStairs: (props: any) => JSX.Element;

declare const IconStarBorderPurple500: (props: any) => JSX.Element;

declare const IconStarBorder: (props: any) => JSX.Element;

declare const IconStarHalf: (props: any) => JSX.Element;

declare const IconStarOutline: (props: any) => JSX.Element;

declare const IconStarPurple500: (props: any) => JSX.Element;

declare const IconStarRate: (props: any) => JSX.Element;

declare const IconStar: (props: any) => JSX.Element;

declare const IconStars: (props: any) => JSX.Element;

declare const IconStayCurrentLandscape: (props: any) => JSX.Element;

declare const IconStayCurrentPortrait: (props: any) => JSX.Element;

declare const IconStayPrimaryLandscape: (props: any) => JSX.Element;

declare const IconStayPrimaryPortrait: (props: any) => JSX.Element;

declare const IconStickyNote_2: (props: any) => JSX.Element;

declare const IconStopCircle: (props: any) => JSX.Element;

declare const IconStopScreenShare: (props: any) => JSX.Element;

declare const IconStop: (props: any) => JSX.Element;

declare const IconStorage: (props: any) => JSX.Element;

declare const IconStoreMallDirectory: (props: any) => JSX.Element;

declare const IconStore: (props: any) => JSX.Element;

declare const IconStorefront: (props: any) => JSX.Element;

declare const IconStraighten: (props: any) => JSX.Element;

declare const IconStreetview: (props: any) => JSX.Element;

declare const IconStrikethroughS: (props: any) => JSX.Element;

declare const IconStroller: (props: any) => JSX.Element;

declare const IconStyle: (props: any) => JSX.Element;

declare const IconSubdirectoryArrowLeft: (props: any) => JSX.Element;

declare const IconSubdirectoryArrowRight: (props: any) => JSX.Element;

declare const IconSubject: (props: any) => JSX.Element;

declare const IconSubscript: (props: any) => JSX.Element;

declare const IconSubscriptions: (props: any) => JSX.Element;

declare const IconSubtitlesOff: (props: any) => JSX.Element;

declare const IconSubtitles: (props: any) => JSX.Element;

declare const IconSubway: (props: any) => JSX.Element;

declare const IconSuperscript: (props: any) => JSX.Element;

declare const IconSupervisedUserCircle: (props: any) => JSX.Element;

declare const IconSupervisorAccount: (props: any) => JSX.Element;

declare const IconSupportAgent: (props: any) => JSX.Element;

declare const IconSupport: (props: any) => JSX.Element;

declare const IconSurroundSound: (props: any) => JSX.Element;

declare const IconSwapCalls: (props: any) => JSX.Element;

declare const IconSwapHoriz: (props: any) => JSX.Element;

declare const IconSwapHorizontalCircle: (props: any) => JSX.Element;

declare const IconSwapVert: (props: any) => JSX.Element;

declare const IconSwapVerticalCircle: (props: any) => JSX.Element;

declare const IconSwitchCamera: (props: any) => JSX.Element;

declare const IconSwitchLeft: (props: any) => JSX.Element;

declare const IconSwitchRight: (props: any) => JSX.Element;

declare const IconSwitchVideo: (props: any) => JSX.Element;

declare const IconSyncAlt: (props: any) => JSX.Element;

declare const IconSyncDisabled: (props: any) => JSX.Element;

declare const IconSyncProblem: (props: any) => JSX.Element;

declare const IconSync: (props: any) => JSX.Element;

declare const IconSystemUpdateAlt: (props: any) => JSX.Element;

declare const IconSystemUpdate: (props: any) => JSX.Element;

declare const IconTabUnselected: (props: any) => JSX.Element;

declare const IconTab: (props: any) => JSX.Element;

declare const IconTableChart: (props: any) => JSX.Element;

declare const IconTableRows: (props: any) => JSX.Element;

declare const IconTableView: (props: any) => JSX.Element;

declare const IconTabletAndroid: (props: any) => JSX.Element;

declare const IconTabletMac: (props: any) => JSX.Element;

declare const IconTablet: (props: any) => JSX.Element;

declare const IconTagFaces: (props: any) => JSX.Element;

declare const IconTapAndPlay: (props: any) => JSX.Element;

declare const IconTapas: (props: any) => JSX.Element;

declare const IconTerrain: (props: any) => JSX.Element;

declare const IconTextFields: (props: any) => JSX.Element;

declare const IconTextFormat: (props: any) => JSX.Element;

declare const IconTextRotateUp: (props: any) => JSX.Element;

declare const IconTextRotateVertical: (props: any) => JSX.Element;

declare const IconTextRotationAngledown: (props: any) => JSX.Element;

declare const IconTextRotationAngleup: (props: any) => JSX.Element;

declare const IconTextRotationDown: (props: any) => JSX.Element;

declare const IconTextRotationNone: (props: any) => JSX.Element;

declare const IconTextSnippet: (props: any) => JSX.Element;

declare const IconTextsms: (props: any) => JSX.Element;

declare const IconTexture: (props: any) => JSX.Element;

declare const IconTheaters: (props: any) => JSX.Element;

declare const IconThermostat: (props: any) => JSX.Element;

declare const IconThumbDownAlt: (props: any) => JSX.Element;

declare const IconThumbDown: (props: any) => JSX.Element;

declare const IconThumbUpAlt: (props: any) => JSX.Element;

declare const IconThumbUp: (props: any) => JSX.Element;

declare const IconThumbsUpDown: (props: any) => JSX.Element;

declare const IconTimeToLeave: (props: any) => JSX.Element;

declare const IconTimelapse: (props: any) => JSX.Element;

declare const IconTimeline: (props: any) => JSX.Element;

declare const IconTimer_10: (props: any) => JSX.Element;

declare const IconTimer_3: (props: any) => JSX.Element;

declare const IconTimerOff: (props: any) => JSX.Element;

declare const IconTimer: (props: any) => JSX.Element;

declare const IconTitle: (props: any) => JSX.Element;

declare const IconToc: (props: any) => JSX.Element;

declare const IconToday: (props: any) => JSX.Element;

declare const IconToggleOff: (props: any) => JSX.Element;

declare const IconToggleOn: (props: any) => JSX.Element;

declare const IconToll: (props: any) => JSX.Element;

declare const IconTonality: (props: any) => JSX.Element;

declare const IconTopic: (props: any) => JSX.Element;

declare const IconTouchApp: (props: any) => JSX.Element;

declare const IconTour: (props: any) => JSX.Element;

declare const IconToys: (props: any) => JSX.Element;

declare const IconTrackChanges: (props: any) => JSX.Element;

declare const IconTraffic: (props: any) => JSX.Element;

declare const IconTrain: (props: any) => JSX.Element;

declare const IconTram: (props: any) => JSX.Element;

declare const IconTransferWithinAStation: (props: any) => JSX.Element;

declare const IconTransform: (props: any) => JSX.Element;

declare const IconTransitEnterexit: (props: any) => JSX.Element;

declare const IconTranslate: (props: any) => JSX.Element;

declare const IconTrendingDown: (props: any) => JSX.Element;

declare const IconTrendingFlat: (props: any) => JSX.Element;

declare const IconTrendingUp: (props: any) => JSX.Element;

declare const IconTripOrigin: (props: any) => JSX.Element;

declare const IconTty: (props: any) => JSX.Element;

declare const IconTune: (props: any) => JSX.Element;

declare const IconTurnedInNot: (props: any) => JSX.Element;

declare const IconTurnedIn: (props: any) => JSX.Element;

declare const IconTvOff: (props: any) => JSX.Element;

declare const IconTv: (props: any) => JSX.Element;

declare const IconTwoWheeler: (props: any) => JSX.Element;

declare const IconUmbrella: (props: any) => JSX.Element;

declare const IconUnarchive: (props: any) => JSX.Element;

declare const IconUndo: (props: any) => JSX.Element;

declare const IconUnfoldLess: (props: any) => JSX.Element;

declare const IconUnfoldMore: (props: any) => JSX.Element;

declare const IconUnpublished: (props: any) => JSX.Element;

declare const IconUnsubscribe: (props: any) => JSX.Element;

declare const IconUpdate: (props: any) => JSX.Element;

declare const IconUpgrade: (props: any) => JSX.Element;

declare const IconUpload: (props: any) => JSX.Element;

declare const IconUsb: (props: any) => JSX.Element;

declare const IconVerifiedUser: (props: any) => JSX.Element;

declare const IconVerified: (props: any) => JSX.Element;

declare const IconVerticalAlignBottom: (props: any) => JSX.Element;

declare const IconVerticalAlignCenter: (props: any) => JSX.Element;

declare const IconVerticalAlignTop: (props: any) => JSX.Element;

declare const IconVerticalSplit: (props: any) => JSX.Element;

declare const IconVibration: (props: any) => JSX.Element;

declare const IconVideoCall: (props: any) => JSX.Element;

declare const IconVideoLabel: (props: any) => JSX.Element;

declare const IconVideoLibrary: (props: any) => JSX.Element;

declare const IconVideoSettings: (props: any) => JSX.Element;

declare const IconVideocamOff: (props: any) => JSX.Element;

declare const IconVideocam: (props: any) => JSX.Element;

declare const IconVideogameAsset: (props: any) => JSX.Element;

declare const IconViewAgenda: (props: any) => JSX.Element;

declare const IconViewArray: (props: any) => JSX.Element;

declare const IconViewCarousel: (props: any) => JSX.Element;

declare const IconViewColumn: (props: any) => JSX.Element;

declare const IconViewComfy: (props: any) => JSX.Element;

declare const IconViewCompact: (props: any) => JSX.Element;

declare const IconViewDay: (props: any) => JSX.Element;

declare const IconViewHeadline: (props: any) => JSX.Element;

declare const IconViewList: (props: any) => JSX.Element;

declare const IconViewModule: (props: any) => JSX.Element;

declare const IconViewQuilt: (props: any) => JSX.Element;

declare const IconViewSidebar: (props: any) => JSX.Element;

declare const IconViewStream: (props: any) => JSX.Element;

declare const IconViewWeek: (props: any) => JSX.Element;

declare const IconVignette: (props: any) => JSX.Element;

declare const IconVisibilityOff: (props: any) => JSX.Element;

declare const IconVisibility: (props: any) => JSX.Element;

declare const IconVoiceChat: (props: any) => JSX.Element;

declare const IconVoiceOverOff: (props: any) => JSX.Element;

declare const IconVoicemail: (props: any) => JSX.Element;

declare const IconVolumeDown: (props: any) => JSX.Element;

declare const IconVolumeMute: (props: any) => JSX.Element;

declare const IconVolumeOff: (props: any) => JSX.Element;

declare const IconVolumeUp: (props: any) => JSX.Element;

declare const IconVpnKey: (props: any) => JSX.Element;

declare const IconVpnLock: (props: any) => JSX.Element;

declare const IconWallpaper: (props: any) => JSX.Element;

declare const IconWarningAmber: (props: any) => JSX.Element;

declare const IconWarning: (props: any) => JSX.Element;

declare const IconWash: (props: any) => JSX.Element;

declare const IconWatchLater: (props: any) => JSX.Element;

declare const IconWatch: (props: any) => JSX.Element;

declare const IconWaterDamage: (props: any) => JSX.Element;

declare const IconWaves: (props: any) => JSX.Element;

declare const IconWbAuto: (props: any) => JSX.Element;

declare const IconWbCloudy: (props: any) => JSX.Element;

declare const IconWbIncandescent: (props: any) => JSX.Element;

declare const IconWbIridescent: (props: any) => JSX.Element;

declare const IconWbSunny: (props: any) => JSX.Element;

declare const IconWc: (props: any) => JSX.Element;

declare const IconWebAsset: (props: any) => JSX.Element;

declare const IconWeb: (props: any) => JSX.Element;

declare const IconWeekend: (props: any) => JSX.Element;

declare const IconWest: (props: any) => JSX.Element;

declare const IconWhatshot: (props: any) => JSX.Element;

declare const IconWheelchairPickup: (props: any) => JSX.Element;

declare const IconWhereToVote: (props: any) => JSX.Element;

declare const IconWidgets: (props: any) => JSX.Element;

declare const IconWifiCalling: (props: any) => JSX.Element;

declare const IconWifiLock: (props: any) => JSX.Element;

declare const IconWifiOff: (props: any) => JSX.Element;

declare const IconWifiProtectedSetup: (props: any) => JSX.Element;

declare const IconWifiTethering: (props: any) => JSX.Element;

declare const IconWifi: (props: any) => JSX.Element;

declare const IconWineBar: (props: any) => JSX.Element;

declare const IconWorkOff: (props: any) => JSX.Element;

declare const IconWorkOutline: (props: any) => JSX.Element;

declare const IconWork: (props: any) => JSX.Element;

declare const IconWrapText: (props: any) => JSX.Element;

declare const IconWrongLocation: (props: any) => JSX.Element;

declare const IconWysiwyg: (props: any) => JSX.Element;

declare const IconYoutubeSearchedFor: (props: any) => JSX.Element;

declare const IconZoomIn: (props: any) => JSX.Element;

declare const IconZoomOutMap: (props: any) => JSX.Element;

declare const IconZoomOut: (props: any) => JSX.Element;

declare const Image: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<ImageProps, "img">, "children" | "border" | "color" | "area" | "slot" | "style" | "title" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "tabIndex" | "crossOrigin" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "useMap" | "referrerPolicy" | "alt" | "src" | "loading" | "decoding" | "sizes" | "srcSet" | "objectFit" | "objectPosition"> & React$1.RefAttributes<HTMLImageElement>>;

declare const Link: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<LinkProps, "a">, "children" | "border" | "color" | "area" | "slot" | "style" | "title" | "type" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "media" | "target" | "tabIndex" | "href" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "download" | "hrefLang" | "ping" | "rel" | "referrerPolicy" | "isExternal"> & React$1.RefAttributes<HTMLAnchorElement>>;

declare const Loader: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<LoaderProps, "svg">, "string" | "children" | "border" | "color" | "values" | "name" | "area" | "style" | "clipPath" | "filter" | "mask" | "path" | "type" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "max" | "media" | "method" | "min" | "target" | "tabIndex" | "crossOrigin" | "accentHeight" | "accumulate" | "additive" | "alignmentBaseline" | "allowReorder" | "alphabetic" | "amplitude" | "arabicForm" | "ascent" | "attributeName" | "attributeType" | "autoReverse" | "azimuth" | "baseFrequency" | "baselineShift" | "baseProfile" | "bbox" | "begin" | "bias" | "by" | "calcMode" | "capHeight" | "clip" | "clipPathUnits" | "clipRule" | "colorInterpolation" | "colorInterpolationFilters" | "colorProfile" | "colorRendering" | "contentScriptType" | "contentStyleType" | "cursor" | "cx" | "cy" | "d" | "decelerate" | "descent" | "diffuseConstant" | "direction" | "divisor" | "dominantBaseline" | "dur" | "dx" | "dy" | "edgeMode" | "elevation" | "enableBackground" | "end" | "exponent" | "externalResourcesRequired" | "fill" | "fillOpacity" | "fillRule" | "filterRes" | "filterUnits" | "floodColor" | "floodOpacity" | "focusable" | "fontSizeAdjust" | "fontStretch" | "fontVariant" | "format" | "fr" | "from" | "fx" | "fy" | "g1" | "g2" | "glyphName" | "glyphOrientationHorizontal" | "glyphOrientationVertical" | "glyphRef" | "gradientTransform" | "gradientUnits" | "hanging" | "horizAdvX" | "horizOriginX" | "href" | "ideographic" | "imageRendering" | "in2" | "in" | "intercept" | "k1" | "k2" | "k3" | "k4" | "k" | "kernelMatrix" | "kernelUnitLength" | "kerning" | "keyPoints" | "keySplines" | "keyTimes" | "lengthAdjust" | "lightingColor" | "limitingConeAngle" | "local" | "markerEnd" | "markerHeight" | "markerMid" | "markerStart" | "markerUnits" | "markerWidth" | "maskContentUnits" | "maskUnits" | "mathematical" | "mode" | "numOctaves" | "offset" | "operator" | "orient" | "orientation" | "origin" | "overlinePosition" | "overlineThickness" | "paintOrder" | "panose1" | "pathLength" | "patternContentUnits" | "patternTransform" | "patternUnits" | "pointerEvents" | "points" | "pointsAtX" | "pointsAtY" | "pointsAtZ" | "preserveAlpha" | "preserveAspectRatio" | "primitiveUnits" | "r" | "radius" | "refX" | "refY" | "renderingIntent" | "repeatCount" | "repeatDur" | "requiredExtensions" | "requiredFeatures" | "restart" | "result" | "rotate" | "rx" | "ry" | "scale" | "seed" | "shapeRendering" | "slope" | "spacing" | "specularConstant" | "specularExponent" | "speed" | "spreadMethod" | "startOffset" | "stdDeviation" | "stemh" | "stemv" | "stitchTiles" | "stopColor" | "stopOpacity" | "strikethroughPosition" | "strikethroughThickness" | "stroke" | "strokeDasharray" | "strokeDashoffset" | "strokeLinecap" | "strokeLinejoin" | "strokeMiterlimit" | "strokeOpacity" | "strokeWidth" | "surfaceScale" | "systemLanguage" | "tableValues" | "targetX" | "targetY" | "textAnchor" | "textLength" | "textRendering" | "to" | "u1" | "u2" | "underlinePosition" | "underlineThickness" | "unicode" | "unicodeBidi" | "unicodeRange" | "unitsPerEm" | "vAlphabetic" | "vectorEffect" | "version" | "vertAdvY" | "vertOriginX" | "vertOriginY" | "vHanging" | "vIdeographic" | "viewBox" | "viewTarget" | "visibility" | "vMathematical" | "widths" | "wordSpacing" | "writingMode" | "x1" | "x2" | "x" | "xChannelSelector" | "xHeight" | "xlinkActuate" | "xlinkArcrole" | "xlinkHref" | "xlinkRole" | "xlinkShow" | "xlinkTitle" | "xlinkType" | "xmlBase" | "xmlLang" | "xmlns" | "xmlnsXlink" | "xmlSpace" | "y1" | "y2" | "y" | "yChannelSelector" | "z" | "zoomAndPan" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "size" | "variation" | "filledColor" | "emptyColor"> & React$1.RefAttributes<SVGSVGElement>>;

declare const Menu: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<MenuProps, "div">, "children" | "border" | "color" | "area" | "slot" | "style" | "title" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "tabIndex" | "direction" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "size" | "wrap" | "alignItems" | "alignContent" | "justifyContent" | "gap" | "columnGap" | "rowGap" | "onOpenChange" | "menuAlign" | "isOpen" | "trigger" | "triggerClassName"> & React$1.RefAttributes<HTMLDivElement>>;

declare const MenuButton: React$1.ForwardRefExoticComponent<Pick<ButtonProps, "border" | "color" | "area" | "style" | "type" | "id" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "direction" | "onClick" | "isFullWidth" | "isLoading" | "loadingText" | "size" | "variation" | "wrap" | "alignItems" | "alignContent" | "justifyContent" | "gap" | "columnGap" | "rowGap"> & {
    as?: ElementType;
} & Pick<Pick<React$1.DetailedHTMLProps<React$1.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, "children" | "value" | "disabled" | "color" | "name" | "form" | "slot" | "style" | "title" | "type" | "id" | "className" | "role" | "lang" | "tabIndex" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "autoFocus" | "formAction" | "formEncType" | "formMethod" | "formNoValidate" | "formTarget" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is">, "children" | "value" | "disabled" | "name" | "form" | "slot" | "title" | "lang" | "tabIndex" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "autoFocus" | "formAction" | "formEncType" | "formMethod" | "formNoValidate" | "formTarget" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is"> & React$1.RefAttributes<HTMLButtonElement>>;

declare const MenuItem: React$1.ForwardRefExoticComponent<MenuItemProps & React$1.RefAttributes<HTMLDivElement>>;

declare const Pagination: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<PaginationProps, "nav">, "children" | "border" | "color" | "area" | "slot" | "style" | "title" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "tabIndex" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "onNext" | "onPrevious" | "currentPage" | "totalPages" | "siblingCount"> & React$1.RefAttributes<HTMLElement>>;

declare const usePagination: (props: UsePaginationProps) => UsePaginationResult;

declare const PasswordField: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<PasswordFieldProps, "input">, "children" | "value" | "border" | "disabled" | "color" | "name" | "area" | "form" | "label" | "slot" | "style" | "title" | "pattern" | "type" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "max" | "min" | "tabIndex" | "crossOrigin" | "direction" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "list" | "autoFocus" | "formAction" | "formEncType" | "formMethod" | "formNoValidate" | "formTarget" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "size" | "variation" | "wrap" | "alignItems" | "alignContent" | "justifyContent" | "gap" | "columnGap" | "rowGap" | "alt" | "src" | "autoComplete" | "accept" | "capture" | "checked" | "enterKeyHint" | "maxLength" | "minLength" | "multiple" | "readOnly" | "required" | "step" | "descriptiveText" | "labelHidden" | "errorMessage" | "hasError" | "isReadOnly" | "isRequired" | "outerStartComponent" | "outerEndComponent" | "innerStartComponent" | "innerEndComponent" | "hideShowPassword" | "showPasswordButtonRef"> & React$1.RefAttributes<HTMLInputElement>>;

declare const PhoneNumberField: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<PhoneNumberFieldProps, "input">, "children" | "value" | "border" | "disabled" | "color" | "name" | "area" | "form" | "label" | "slot" | "style" | "title" | "pattern" | "type" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "max" | "min" | "tabIndex" | "crossOrigin" | "direction" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "list" | "autoFocus" | "formAction" | "formEncType" | "formMethod" | "formNoValidate" | "formTarget" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "size" | "variation" | "wrap" | "alignItems" | "alignContent" | "justifyContent" | "gap" | "columnGap" | "rowGap" | "alt" | "src" | "autoComplete" | "accept" | "capture" | "checked" | "enterKeyHint" | "maxLength" | "minLength" | "multiple" | "readOnly" | "required" | "step" | "descriptiveText" | "labelHidden" | "errorMessage" | "hasError" | "isReadOnly" | "isRequired" | "outerStartComponent" | "outerEndComponent" | "innerStartComponent" | "innerEndComponent" | "countryCodeLabel" | "countryCodeName" | "defaultCountryCode" | "onCountryCodeChange" | "countryCodeRef"> & React$1.RefAttributes<HTMLInputElement>>;

declare const Placeholder: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<PlaceholderProps, "div">, "children" | "border" | "color" | "area" | "slot" | "style" | "title" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "tabIndex" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "size" | "isLoaded"> & React$1.RefAttributes<HTMLDivElement>>;

declare const Radio: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<RadioProps, "input">, "children" | "value" | "border" | "disabled" | "color" | "name" | "area" | "form" | "slot" | "style" | "title" | "pattern" | "type" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "max" | "min" | "tabIndex" | "crossOrigin" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "list" | "autoFocus" | "formAction" | "formEncType" | "formMethod" | "formNoValidate" | "formTarget" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "size" | "variation" | "alt" | "src" | "autoComplete" | "accept" | "capture" | "checked" | "enterKeyHint" | "maxLength" | "minLength" | "multiple" | "readOnly" | "required" | "step" | "hasError" | "isReadOnly" | "isRequired"> & React$1.RefAttributes<HTMLInputElement>>;

declare const RadioGroupField: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<RadioGroupFieldProps, React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<FlexProps, "div">, "children" | "border" | "color" | "area" | "slot" | "style" | "title" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "tabIndex" | "direction" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "wrap" | "alignItems" | "alignContent" | "justifyContent" | "gap" | "columnGap" | "rowGap"> & React$1.RefAttributes<HTMLDivElement>>>, "children" | "value" | "border" | "color" | "name" | "area" | "label" | "slot" | "style" | "title" | "type" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "tabIndex" | "direction" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "size" | "variation" | "wrap" | "alignItems" | "alignContent" | "justifyContent" | "gap" | "columnGap" | "rowGap" | "autoComplete" | "checked" | "descriptiveText" | "labelHidden" | "errorMessage" | "hasError" | "isReadOnly" | "isRequired"> & React$1.RefAttributes<HTMLDivElement>>;

declare const Rating: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<RatingProps, React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<FlexProps, "div">, "children" | "border" | "color" | "area" | "slot" | "style" | "title" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "tabIndex" | "direction" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "wrap" | "alignItems" | "alignContent" | "justifyContent" | "gap" | "columnGap" | "rowGap"> & React$1.RefAttributes<HTMLDivElement>>>, "children" | "value" | "border" | "color" | "area" | "slot" | "style" | "title" | "icon" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "tabIndex" | "direction" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "size" | "wrap" | "alignItems" | "alignContent" | "justifyContent" | "gap" | "columnGap" | "rowGap" | "emptyColor" | "emptyIcon" | "fillColor" | "maxValue"> & React$1.RefAttributes<HTMLDivElement>>;

declare const ScrollView: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<ScrollViewProps, "div">, "children" | "border" | "color" | "area" | "slot" | "style" | "title" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "tabIndex" | "orientation" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is"> & React$1.RefAttributes<HTMLDivElement>>;

declare const SearchField: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<SearchFieldProps, "input">, "children" | "value" | "border" | "disabled" | "color" | "name" | "area" | "form" | "label" | "slot" | "style" | "title" | "pattern" | "type" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "max" | "min" | "tabIndex" | "crossOrigin" | "direction" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "list" | "autoFocus" | "formAction" | "formEncType" | "formMethod" | "formNoValidate" | "formTarget" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "size" | "variation" | "wrap" | "alignItems" | "alignContent" | "justifyContent" | "gap" | "columnGap" | "rowGap" | "alt" | "src" | "autoComplete" | "accept" | "capture" | "checked" | "enterKeyHint" | "maxLength" | "minLength" | "multiple" | "readOnly" | "required" | "step" | "descriptiveText" | "labelHidden" | "errorMessage" | "hasError" | "isReadOnly" | "isRequired" | "outerStartComponent" | "outerEndComponent" | "innerStartComponent" | "innerEndComponent" | "onClear" | "searchButtonRef"> & React$1.RefAttributes<HTMLInputElement>>;

declare const SelectField: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<SelectFieldProps, "select">, "children" | "value" | "border" | "disabled" | "color" | "name" | "area" | "form" | "label" | "slot" | "style" | "title" | "icon" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "tabIndex" | "direction" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "autoFocus" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "size" | "variation" | "wrap" | "alignItems" | "alignContent" | "justifyContent" | "gap" | "columnGap" | "rowGap" | "autoComplete" | "multiple" | "required" | "descriptiveText" | "labelHidden" | "errorMessage" | "hasError" | "isRequired" | "iconColor"> & React$1.RefAttributes<HTMLSelectElement>>;

declare const SliderField: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<SliderFieldProps, React$1.ForwardRefExoticComponent<_radix_ui_react_slider.SliderProps & React$1.RefAttributes<HTMLSpanElement>>>, "children" | "value" | "border" | "disabled" | "color" | "name" | "area" | "label" | "slot" | "style" | "title" | "type" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "max" | "min" | "tabIndex" | "direction" | "orientation" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "size" | "variation" | "wrap" | "alignItems" | "alignContent" | "justifyContent" | "gap" | "columnGap" | "rowGap" | "autoComplete" | "checked" | "step" | "descriptiveText" | "labelHidden" | "errorMessage" | "hasError" | "isReadOnly" | "isRequired" | "outerStartComponent" | "outerEndComponent" | "innerStartComponent" | "innerEndComponent" | "asChild" | "onValueChange" | "isValueHidden" | "trackSize" | "emptyTrackColor" | "filledTrackColor" | "thumbColor" | "minStepsBetweenThumbs"> & React$1.RefAttributes<HTMLSpanElement>>;

declare const StepperField: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<StepperFieldProps, "input">, "children" | "value" | "border" | "disabled" | "color" | "name" | "area" | "form" | "label" | "slot" | "style" | "title" | "pattern" | "type" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "max" | "min" | "tabIndex" | "crossOrigin" | "direction" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "list" | "autoFocus" | "formAction" | "formEncType" | "formMethod" | "formNoValidate" | "formTarget" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "size" | "variation" | "wrap" | "alignItems" | "alignContent" | "justifyContent" | "gap" | "columnGap" | "rowGap" | "alt" | "src" | "autoComplete" | "accept" | "capture" | "checked" | "enterKeyHint" | "maxLength" | "minLength" | "multiple" | "readOnly" | "required" | "step" | "descriptiveText" | "labelHidden" | "errorMessage" | "hasError" | "isReadOnly" | "isRequired" | "outerStartComponent" | "outerEndComponent" | "innerStartComponent" | "innerEndComponent" | "onDecrease" | "onIncrease" | "onStepChange"> & React$1.RefAttributes<HTMLInputElement>>;

declare const SwitchField: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<SwitchFieldProps, React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<FlexProps, "div">, "children" | "border" | "color" | "area" | "slot" | "style" | "title" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "tabIndex" | "direction" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "wrap" | "alignItems" | "alignContent" | "justifyContent" | "gap" | "columnGap" | "rowGap"> & React$1.RefAttributes<HTMLDivElement>>>, "children" | "value" | "border" | "color" | "name" | "area" | "label" | "slot" | "style" | "title" | "type" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "tabIndex" | "direction" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "size" | "variation" | "wrap" | "alignItems" | "alignContent" | "justifyContent" | "gap" | "columnGap" | "rowGap" | "autoComplete" | "checked" | "descriptiveText" | "labelHidden" | "errorMessage" | "hasError" | "isReadOnly" | "isRequired" | "thumbColor" | "isChecked" | "isLabelHidden" | "labelPosition" | "trackColor" | "trackCheckedColor"> & React$1.RefAttributes<HTMLDivElement>>;

declare const Table: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<TableProps, "table">, "children" | "border" | "color" | "area" | "caption" | "slot" | "style" | "summary" | "title" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "tabIndex" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "size" | "variation" | "cellPadding" | "cellSpacing" | "highlightOnHover"> & React$1.RefAttributes<HTMLTableElement>>;

declare const TableBody: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<TableBodyProps, "tbody">, "children" | "border" | "color" | "area" | "slot" | "style" | "title" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "tabIndex" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is"> & React$1.RefAttributes<HTMLTableSectionElement>>;

declare const TableCell: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<TableCellProps, TableCellElement>, "children" | "border" | "color" | "abbr" | "area" | "slot" | "style" | "title" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "tabIndex" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "align" | "colSpan" | "headers" | "scope" | "colspan" | "rowspan"> & React$1.RefAttributes<HTMLTableDataCellElement | HTMLTableHeaderCellElement>>;

declare const TableFoot: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<TableFootProps, "tfoot">, "children" | "border" | "color" | "area" | "slot" | "style" | "title" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "tabIndex" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is"> & React$1.RefAttributes<HTMLTableSectionElement>>;

declare const TableHead: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<TableHeadProps, "thead">, "children" | "border" | "color" | "area" | "slot" | "style" | "title" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "tabIndex" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is"> & React$1.RefAttributes<HTMLTableSectionElement>>;

declare const TableRow: Primitive<TableRowProps, 'tr'>;

declare const Tabs: Primitive<TabsProps, typeof Flex>;
declare const TabItem: React$1.FC<TabItemProps>;

declare const Text: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<TextProps, "p">, "children" | "border" | "color" | "area" | "slot" | "style" | "title" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "tabIndex" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "variation" | "isTruncated"> & React$1.RefAttributes<HTMLParagraphElement>>;

declare const TextFieldPrimitive: {
    <Multiline extends boolean>(props: Pick<TextFieldProps<Multiline>, "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> & {
        as?: "input" | "textarea" | TextFieldProps<Multiline>["as"];
    } & Pick<Pick<React$1.DetailedHTMLProps<React$1.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> | React$1.DetailedHTMLProps<React$1.TextareaHTMLAttributes<HTMLTextAreaElement>, HTMLTextAreaElement>, "children" | "value" | "disabled" | "color" | "name" | "form" | "slot" | "style" | "title" | "id" | "className" | "role" | "lang" | "tabIndex" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "autoFocus" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "autoComplete" | "maxLength" | "minLength" | "readOnly" | "required">, Exclude<"children", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"value", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"disabled", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"color", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"name", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"form", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"slot", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"style", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"title", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"id", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"className", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"role", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"lang", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"tabIndex", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-activedescendant", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-atomic", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-autocomplete", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-busy", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-checked", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-colcount", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-colindex", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-colspan", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-controls", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-current", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-describedby", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-details", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-disabled", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-dropeffect", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-errormessage", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-expanded", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-flowto", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-grabbed", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-haspopup", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-hidden", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-invalid", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-keyshortcuts", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-label", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-labelledby", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-level", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-live", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-modal", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-multiline", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-multiselectable", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-orientation", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-owns", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-placeholder", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-posinset", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-pressed", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-readonly", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-relevant", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-required", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-roledescription", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-rowcount", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-rowindex", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-rowspan", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-selected", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-setsize", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-sort", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-valuemax", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-valuemin", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-valuenow", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-valuetext", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"dangerouslySetInnerHTML", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onCopy", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onCopyCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onCut", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onCutCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPaste", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPasteCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onCompositionEnd", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onCompositionEndCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onCompositionStart", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onCompositionStartCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onCompositionUpdate", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onCompositionUpdateCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onFocus", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onFocusCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onBlur", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onBlurCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onChange", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onChangeCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onBeforeInput", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onBeforeInputCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onInput", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onInputCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onReset", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onResetCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onSubmit", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onSubmitCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onInvalid", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onInvalidCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onLoad", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onLoadCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onError", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onErrorCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onKeyDown", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onKeyDownCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onKeyPress", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onKeyPressCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onKeyUp", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onKeyUpCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onAbort", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onAbortCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onCanPlay", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onCanPlayCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onCanPlayThrough", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onCanPlayThroughCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDurationChange", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDurationChangeCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onEmptied", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onEmptiedCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onEncrypted", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onEncryptedCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onEnded", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onEndedCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onLoadedData", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onLoadedDataCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onLoadedMetadata", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onLoadedMetadataCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onLoadStart", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onLoadStartCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPause", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPauseCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPlay", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPlayCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPlaying", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPlayingCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onProgress", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onProgressCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onRateChange", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onRateChangeCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onSeeked", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onSeekedCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onSeeking", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onSeekingCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onStalled", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onStalledCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onSuspend", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onSuspendCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onTimeUpdate", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onTimeUpdateCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onVolumeChange", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onVolumeChangeCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onWaiting", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onWaitingCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onAuxClick", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onAuxClickCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onClick", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onClickCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onContextMenu", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onContextMenuCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDoubleClick", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDoubleClickCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDrag", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDragCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDragEnd", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDragEndCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDragEnter", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDragEnterCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDragExit", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDragExitCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDragLeave", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDragLeaveCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDragOver", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDragOverCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDragStart", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDragStartCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDrop", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDropCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onMouseDown", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onMouseDownCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onMouseEnter", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onMouseLeave", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onMouseMove", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onMouseMoveCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onMouseOut", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onMouseOutCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onMouseOver", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onMouseOverCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onMouseUp", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onMouseUpCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onSelect", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onSelectCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onTouchCancel", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onTouchCancelCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onTouchEnd", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onTouchEndCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onTouchMove", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onTouchMoveCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onTouchStart", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onTouchStartCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPointerDown", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPointerDownCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPointerMove", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPointerMoveCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPointerUp", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPointerUpCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPointerCancel", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPointerCancelCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPointerEnter", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPointerEnterCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPointerLeave", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPointerLeaveCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPointerOver", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPointerOverCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPointerOut", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPointerOutCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onGotPointerCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onGotPointerCaptureCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onLostPointerCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onLostPointerCaptureCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onScroll", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onScrollCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onWheel", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onWheelCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onAnimationStart", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onAnimationStartCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onAnimationEnd", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onAnimationEndCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onAnimationIteration", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onAnimationIterationCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onTransitionEnd", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onTransitionEndCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"key", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"autoFocus", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"defaultChecked", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"defaultValue", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"suppressContentEditableWarning", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"suppressHydrationWarning", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"accessKey", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"contentEditable", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"contextMenu", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"dir", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"draggable", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"hidden", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"placeholder", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"spellCheck", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"translate", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"radioGroup", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"about", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"datatype", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"inlist", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"prefix", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"property", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"resource", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"typeof", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"vocab", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"autoCapitalize", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"autoCorrect", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"autoSave", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"itemProp", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"itemScope", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"itemType", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"itemID", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"itemRef", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"results", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"security", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"unselectable", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"inputMode", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"is", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"autoComplete", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"maxLength", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"minLength", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"readOnly", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"required", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">>>, ref: React$1.ForwardedRef<HTMLTextAreaElement | HTMLInputElement>): JSX.Element;
    displayName: string;
};
declare const TextField: <Multiline extends boolean>(props: Pick<TextFieldProps<Multiline>, "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> & {
    as?: "input" | "textarea" | TextFieldProps<Multiline>["as"];
} & Pick<Pick<React$1.DetailedHTMLProps<React$1.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> | React$1.DetailedHTMLProps<React$1.TextareaHTMLAttributes<HTMLTextAreaElement>, HTMLTextAreaElement>, "children" | "value" | "disabled" | "color" | "name" | "form" | "slot" | "style" | "title" | "id" | "className" | "role" | "lang" | "tabIndex" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "autoFocus" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "autoComplete" | "maxLength" | "minLength" | "readOnly" | "required">, Exclude<"children", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"value", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"disabled", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"color", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"name", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"form", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"slot", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"style", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"title", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"id", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"className", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"role", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"lang", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"tabIndex", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-activedescendant", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-atomic", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-autocomplete", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-busy", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-checked", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-colcount", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-colindex", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-colspan", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-controls", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-current", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-describedby", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-details", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-disabled", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-dropeffect", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-errormessage", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-expanded", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-flowto", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-grabbed", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-haspopup", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-hidden", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-invalid", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-keyshortcuts", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-label", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-labelledby", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-level", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-live", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-modal", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-multiline", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-multiselectable", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-orientation", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-owns", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-placeholder", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-posinset", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-pressed", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-readonly", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-relevant", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-required", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-roledescription", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-rowcount", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-rowindex", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-rowspan", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-selected", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-setsize", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-sort", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-valuemax", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-valuemin", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-valuenow", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"aria-valuetext", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"dangerouslySetInnerHTML", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onCopy", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onCopyCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onCut", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onCutCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPaste", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPasteCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onCompositionEnd", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onCompositionEndCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onCompositionStart", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onCompositionStartCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onCompositionUpdate", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onCompositionUpdateCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onFocus", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onFocusCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onBlur", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onBlurCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onChange", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onChangeCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onBeforeInput", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onBeforeInputCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onInput", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onInputCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onReset", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onResetCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onSubmit", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onSubmitCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onInvalid", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onInvalidCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onLoad", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onLoadCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onError", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onErrorCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onKeyDown", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onKeyDownCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onKeyPress", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onKeyPressCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onKeyUp", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onKeyUpCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onAbort", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onAbortCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onCanPlay", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onCanPlayCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onCanPlayThrough", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onCanPlayThroughCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDurationChange", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDurationChangeCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onEmptied", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onEmptiedCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onEncrypted", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onEncryptedCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onEnded", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onEndedCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onLoadedData", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onLoadedDataCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onLoadedMetadata", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onLoadedMetadataCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onLoadStart", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onLoadStartCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPause", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPauseCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPlay", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPlayCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPlaying", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPlayingCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onProgress", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onProgressCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onRateChange", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onRateChangeCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onSeeked", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onSeekedCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onSeeking", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onSeekingCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onStalled", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onStalledCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onSuspend", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onSuspendCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onTimeUpdate", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onTimeUpdateCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onVolumeChange", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onVolumeChangeCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onWaiting", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onWaitingCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onAuxClick", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onAuxClickCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onClick", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onClickCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onContextMenu", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onContextMenuCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDoubleClick", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDoubleClickCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDrag", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDragCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDragEnd", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDragEndCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDragEnter", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDragEnterCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDragExit", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDragExitCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDragLeave", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDragLeaveCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDragOver", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDragOverCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDragStart", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDragStartCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDrop", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onDropCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onMouseDown", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onMouseDownCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onMouseEnter", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onMouseLeave", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onMouseMove", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onMouseMoveCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onMouseOut", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onMouseOutCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onMouseOver", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onMouseOverCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onMouseUp", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onMouseUpCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onSelect", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onSelectCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onTouchCancel", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onTouchCancelCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onTouchEnd", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onTouchEndCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onTouchMove", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onTouchMoveCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onTouchStart", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onTouchStartCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPointerDown", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPointerDownCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPointerMove", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPointerMoveCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPointerUp", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPointerUpCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPointerCancel", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPointerCancelCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPointerEnter", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPointerEnterCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPointerLeave", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPointerLeaveCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPointerOver", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPointerOverCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPointerOut", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onPointerOutCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onGotPointerCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onGotPointerCaptureCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onLostPointerCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onLostPointerCaptureCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onScroll", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onScrollCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onWheel", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onWheelCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onAnimationStart", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onAnimationStartCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onAnimationEnd", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onAnimationEndCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onAnimationIteration", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onAnimationIterationCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onTransitionEnd", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"onTransitionEndCapture", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"key", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"autoFocus", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"defaultChecked", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"defaultValue", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"suppressContentEditableWarning", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"suppressHydrationWarning", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"accessKey", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"contentEditable", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"contextMenu", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"dir", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"draggable", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"hidden", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"placeholder", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"spellCheck", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"translate", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"radioGroup", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"about", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"datatype", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"inlist", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"prefix", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"property", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"resource", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"typeof", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"vocab", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"autoCapitalize", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"autoCorrect", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"autoSave", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"itemProp", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"itemScope", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"itemType", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"itemID", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"itemRef", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"results", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"security", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"unselectable", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"inputMode", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"is", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"autoComplete", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"maxLength", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"minLength", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"readOnly", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">> | Exclude<"required", "as" | "isMultiline" | Exclude<keyof (Multiline extends true ? TextAreaFieldProps : TextInputFieldProps), "as">>> & {
    ref?: React$1.ForwardedRef<HTMLInputElement | HTMLTextAreaElement>;
}) => ReturnType<typeof TextFieldPrimitive>;

declare const ToggleButton: Primitive<ToggleButtonProps, typeof Button>;

declare const ToggleButtonGroup: Primitive<ToggleButtonGroupProps, typeof Flex>;

declare const View: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<ViewProps, ElementType>, string | number | symbol> & React$1.RefAttributes<HTMLDivElement | HTMLElement | HTMLStyleElement | SVGSVGElement | SVGElement | HTMLButtonElement | SVGPathElement | HTMLParagraphElement | SVGSymbolElement | HTMLObjectElement | HTMLBaseElement | HTMLAnchorElement | HTMLAreaElement | HTMLAudioElement | HTMLBodyElement | HTMLBRElement | HTMLCanvasElement | HTMLTableColElement | HTMLDataElement | HTMLDataListElement | HTMLDialogElement | HTMLDListElement | HTMLEmbedElement | HTMLFieldSetElement | HTMLFormElement | HTMLHeadingElement | HTMLHeadElement | HTMLHRElement | HTMLHtmlElement | HTMLIFrameElement | HTMLImageElement | HTMLInputElement | HTMLModElement | HTMLLabelElement | HTMLLegendElement | HTMLLIElement | HTMLLinkElement | HTMLMapElement | HTMLMetaElement | HTMLOListElement | HTMLOptGroupElement | HTMLOptionElement | HTMLParamElement | HTMLPreElement | HTMLProgressElement | HTMLQuoteElement | HTMLSlotElement | HTMLScriptElement | HTMLSelectElement | HTMLSourceElement | HTMLSpanElement | HTMLTableElement | HTMLTemplateElement | HTMLTableSectionElement | HTMLTableDataCellElement | HTMLTextAreaElement | HTMLTableHeaderCellElement | HTMLTitleElement | HTMLTableRowElement | HTMLTrackElement | HTMLUListElement | HTMLVideoElement | HTMLWebViewElement | SVGCircleElement | SVGClipPathElement | SVGDefsElement | SVGDescElement | SVGEllipseElement | SVGFEBlendElement | SVGFEColorMatrixElement | SVGFEComponentTransferElement | SVGFECompositeElement | SVGFEConvolveMatrixElement | SVGFEDiffuseLightingElement | SVGFEDisplacementMapElement | SVGFEDistantLightElement | SVGFEDropShadowElement | SVGFEFloodElement | SVGFEFuncAElement | SVGFEFuncBElement | SVGFEFuncGElement | SVGFEFuncRElement | SVGFEGaussianBlurElement | SVGFEImageElement | SVGFEMergeElement | SVGFEMergeNodeElement | SVGFEMorphologyElement | SVGFEOffsetElement | SVGFEPointLightElement | SVGFESpecularLightingElement | SVGFESpotLightElement | SVGFETileElement | SVGFETurbulenceElement | SVGFilterElement | SVGForeignObjectElement | SVGGElement | SVGImageElement | SVGLineElement | SVGLinearGradientElement | SVGMarkerElement | SVGMaskElement | SVGMetadataElement | SVGPatternElement | SVGPolygonElement | SVGPolylineElement | SVGRadialGradientElement | SVGRectElement | SVGStopElement | SVGSwitchElement | SVGTextElement | SVGTextPathElement | SVGTSpanElement | SVGUseElement | SVGViewElement>>;

declare const VisuallyHidden: React$1.ForwardRefExoticComponent<Pick<PrimitivePropsWithRef<VisuallyHiddenProps, "span">, "children" | "border" | "color" | "area" | "slot" | "style" | "title" | "id" | "as" | "isDisabled" | "className" | "testId" | "alignSelf" | "backgroundColor" | "backgroundImage" | "borderRadius" | "bottom" | "boxShadow" | "display" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "height" | "left" | "letterSpacing" | "lineHeight" | "margin" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "opacity" | "overflow" | "padding" | "position" | "right" | "textAlign" | "textDecoration" | "textTransform" | "top" | "transform" | "transformOrigin" | "width" | "flex" | "order" | "grow" | "shrink" | "basis" | "column" | "columnEnd" | "columnSpan" | "columnStart" | "row" | "rowEnd" | "rowSpan" | "rowStart" | "ariaLabel" | "ariaValuetext" | "role" | "lang" | "tabIndex" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "placeholder" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is"> & React$1.RefAttributes<HTMLSpanElement>>;

declare enum ComponentClassNames {
    Alert = "amplify-alert",
    AlertIcon = "amplify-alert__icon",
    AlertHeading = "amplify-alert__heading",
    AlertBody = "amplify-alert__body",
    AlertDismiss = "amplify-alert__dismiss",
    Badge = "amplify-badge",
    Button = "amplify-button",
    ButtonGroup = "amplify-buttongroup",
    Card = "amplify-card",
    Checkbox = "amplify-checkbox",
    CheckboxButton = "amplify-checkbox__button",
    CheckboxIcon = "amplify-checkbox__icon",
    CheckboxInput = "amplify-checkbox__input",
    CheckboxLabel = "amplify-checkbox__label",
    CheckboxField = "amplify-checkboxfield",
    Collection = "amplify-collection",
    CollectionItems = "amplify-collection-items",
    CollectionSearch = "amplify-collection-search",
    CollectionPagination = "amplify-collection-pagination",
    CountryCodeSelect = "amplify-countrycodeselect",
    Divider = "amplify-divider",
    Expander = "amplify-expander",
    ExpanderContent = "amplify-expander__content",
    ExpanderContentText = "amplify-expander__content__text",
    ExpanderHeader = "amplify-expander__header",
    ExpanderIcon = "amplify-expander__icon",
    ExpanderItem = "amplify-expander__item",
    ExpanderTrigger = "amplify-expander__trigger",
    Field = "amplify-field",
    FieldDescription = "amplify-field__description",
    FieldErrorMessage = "amplify-field__error-message",
    FieldGroup = "amplify-field-group",
    FieldGroupControl = "amplify-field-group__control",
    FieldGroupOuterEnd = "amplify-field-group__outer-end",
    FieldGroupOuterStart = "amplify-field-group__outer-start",
    FieldGroupInnerEnd = "amplify-field-group__inner-end",
    FieldGroupInnerStart = "amplify-field-group__inner-start",
    FieldGroupIcon = "amplify-field-group__icon",
    FieldGroupIconButton = "amplify-field-group__icon-button",
    FieldGroupHasInnerEnd = "amplify-field-group--has-inner-end",
    FieldGroupHasInnerStart = "amplify-field-group--has-inner-start",
    FieldShowPassword = "amplify-field__show-password",
    FieldGroupFieldWrapper = "amplify-field-group__field-wrapper",
    Flex = "amplify-flex",
    Grid = "amplify-grid",
    Heading = "amplify-heading",
    Icon = "amplify-icon",
    Image = "amplify-image",
    Input = "amplify-input",
    Label = "amplify-label",
    Link = "amplify-link",
    Loader = "amplify-loader",
    MenuContent = "amplify-menu-content",
    MenuItem = "amplify-menu-content__item",
    MenuTrigger = "amplify-menu-trigger",
    Pagination = "amplify-pagination",
    PaginationItemButton = "amplify-pagination__item-button",
    PaginationItemCurrent = "amplify-pagination__item-current",
    PaginationItemEllipsis = "amplify-pagination__item-ellipsis",
    PasswordField = "amplify-passwordfield",
    PhoneNumberField = "amplify-phonenumberfield",
    Placeholder = "amplify-placeholder",
    Radio = "amplify-radio",
    RadioButton = "amplify-radio__button",
    RadioInput = "amplify-radio__input",
    RadioLabel = "amplify-radio__label",
    RadioGroupField = "amplify-radiogroupfield",
    RadioGroup = "amplify-radiogroup",
    Rating = "amplify-rating",
    ScrollView = "amplify-scrollview",
    Select = "amplify-select",
    SelectField = "amplify-selectfield",
    SearchField = "amplify-searchfield",
    SearchFieldClear = "amplify-searchfield__clear",
    SearchFieldSearch = "amplify-searchfield__search",
    SelectWrapper = "amplify-select__wrapper",
    SelectIconWrapper = "amplify-select__icon-wrapper",
    SliderField = "amplify-sliderfield",
    SliderFieldGroup = "amplify-sliderfield__group",
    SliderFieldLabel = "amplify-sliderfield__label",
    SliderFieldRange = "amplify-sliderfield__range",
    SliderFieldRoot = "amplify-sliderfield__root",
    SliderFieldThumb = "amplify-sliderfield__thumb",
    SliderFieldTrack = "amplify-sliderfield__track",
    StepperField = "amplify-stepperfield",
    StepperFieldButtonDecrease = "amplify-stepperfield__button--decrease",
    StepperFieldButtonIncrease = "amplify-stepperfield__button--increase",
    StepperFieldInput = "amplify-stepperfield__input",
    SwitchField = "amplify-switchfield",
    SwitchLabel = "amplify-switch-label",
    SwitchThumb = "amplify-switch-thumb",
    SwitchTrack = "amplify-switch-track",
    SwitchWrapper = "amplify-switch__wrapper",
    Table = "amplify-table",
    TableCaption = "amplify-table__caption",
    TableBody = "amplify-table__body",
    TableTd = "amplify-table__td",
    TableTh = "amplify-table__th",
    TableFoot = "amplify-table__foot",
    TableHead = "amplify-table__head",
    TableRow = "amplify-table__row",
    Tabs = "amplify-tabs",
    TabItems = "amplify-tabs-item",
    Text = "amplify-text",
    Textarea = "amplify-textarea",
    TextField = "amplify-textfield",
    ToggleButton = "amplify-togglebutton",
    ToggleButtonGroup = "amplify-togglebuttongroup",
    View = "amplify-view",
    VisuallyHidden = "amplify-visually-hidden"
}

declare const SharedText: {
    CountryCodeSelect: {
        ariaLabel: string;
    };
    ShowPasswordButton: {
        ariaLabel: {
            showPassword: string;
            hidePassword: string;
        };
    };
    Fields: {
        ariaLabel: {
            clearField: string;
        };
    };
    SearchField: {
        ariaLabel: {
            search: string;
        };
    };
    StepperField: {
        ariaLabel: {
            IncreaseTo: string;
            DecreaseTo: string;
        };
    };
    Collection: {
        SearchFieldLabel: string;
    };
};

declare const index_Alert: typeof Alert;
declare const index_Badge: typeof Badge;
declare const index_Button: typeof Button;
declare const index_ButtonGroup: typeof ButtonGroup;
declare const index_Card: typeof Card;
declare const index_CheckboxField: typeof CheckboxField;
declare const index_Collection: typeof Collection;
declare const index_Divider: typeof Divider;
declare const index_Expander: typeof Expander;
declare const index_ExpanderItem: typeof ExpanderItem;
declare const index_FieldGroupIcon: typeof FieldGroupIcon;
declare const index_FieldGroupIconButton: typeof FieldGroupIconButton;
declare const index_Flex: typeof Flex;
declare const index_Grid: typeof Grid;
declare const index_Heading: typeof Heading;
declare const index_Icon: typeof Icon;
declare const index_Image: typeof Image;
declare const index_Link: typeof Link;
declare const index_Loader: typeof Loader;
declare const index_Menu: typeof Menu;
declare const index_MenuButton: typeof MenuButton;
declare const index_MenuItem: typeof MenuItem;
declare const index_Pagination: typeof Pagination;
declare const index_PasswordField: typeof PasswordField;
declare const index_PhoneNumberField: typeof PhoneNumberField;
declare const index_Placeholder: typeof Placeholder;
declare const index_Radio: typeof Radio;
declare const index_RadioGroupField: typeof RadioGroupField;
declare const index_Rating: typeof Rating;
declare const index_ScrollView: typeof ScrollView;
declare const index_SearchField: typeof SearchField;
declare const index_SelectField: typeof SelectField;
declare const index_SliderField: typeof SliderField;
declare const index_StepperField: typeof StepperField;
declare const index_SwitchField: typeof SwitchField;
declare const index_Tabs: typeof Tabs;
declare const index_TabItem: typeof TabItem;
declare const index_Text: typeof Text;
declare const index_TextField: typeof TextField;
declare const index_ToggleButton: typeof ToggleButton;
declare const index_ToggleButtonGroup: typeof ToggleButtonGroup;
declare const index_View: typeof View;
declare const index_VisuallyHidden: typeof VisuallyHidden;
declare const index_Icon360: typeof Icon360;
declare const index_Icon3dRotation: typeof Icon3dRotation;
declare const index_Icon4k: typeof Icon4k;
declare const index_Icon5g: typeof Icon5g;
declare const index_Icon6FtApart: typeof Icon6FtApart;
declare const index_IconAcUnit: typeof IconAcUnit;
declare const index_IconAccessAlarm: typeof IconAccessAlarm;
declare const index_IconAccessAlarms: typeof IconAccessAlarms;
declare const index_IconAccessTime: typeof IconAccessTime;
declare const index_IconAccessibilityNew: typeof IconAccessibilityNew;
declare const index_IconAccessibility: typeof IconAccessibility;
declare const index_IconAccessibleForward: typeof IconAccessibleForward;
declare const index_IconAccessible: typeof IconAccessible;
declare const index_IconAccountBalanceWallet: typeof IconAccountBalanceWallet;
declare const index_IconAccountBalance: typeof IconAccountBalance;
declare const index_IconAccountBox: typeof IconAccountBox;
declare const index_IconAccountCircle: typeof IconAccountCircle;
declare const index_IconAccountTree: typeof IconAccountTree;
declare const index_IconAdUnits: typeof IconAdUnits;
declare const index_IconAdb: typeof IconAdb;
declare const index_IconAddAPhoto: typeof IconAddAPhoto;
declare const index_IconAddAlarm: typeof IconAddAlarm;
declare const index_IconAddAlert: typeof IconAddAlert;
declare const index_IconAddBox: typeof IconAddBox;
declare const index_IconAddBusiness: typeof IconAddBusiness;
declare const index_IconAddCircleOutline: typeof IconAddCircleOutline;
declare const index_IconAddCircle: typeof IconAddCircle;
declare const index_IconAddComment: typeof IconAddComment;
declare const index_IconAddIcCall: typeof IconAddIcCall;
declare const index_IconAddLocationAlt: typeof IconAddLocationAlt;
declare const index_IconAddLocation: typeof IconAddLocation;
declare const index_IconAddPhotoAlternate: typeof IconAddPhotoAlternate;
declare const index_IconAddRoad: typeof IconAddRoad;
declare const index_IconAddShoppingCart: typeof IconAddShoppingCart;
declare const index_IconAddTask: typeof IconAddTask;
declare const index_IconAddToHomeScreen: typeof IconAddToHomeScreen;
declare const index_IconAddToPhotos: typeof IconAddToPhotos;
declare const index_IconAddToQueue: typeof IconAddToQueue;
declare const index_IconAdd: typeof IconAdd;
declare const index_IconAddchart: typeof IconAddchart;
declare const index_IconAdjust: typeof IconAdjust;
declare const index_IconAdminPanelSettings: typeof IconAdminPanelSettings;
declare const index_IconAgriculture: typeof IconAgriculture;
declare const index_IconAirlineSeatFlatAngled: typeof IconAirlineSeatFlatAngled;
declare const index_IconAirlineSeatFlat: typeof IconAirlineSeatFlat;
declare const index_IconAirlineSeatIndividualSuite: typeof IconAirlineSeatIndividualSuite;
declare const index_IconAirlineSeatLegroomExtra: typeof IconAirlineSeatLegroomExtra;
declare const index_IconAirlineSeatLegroomNormal: typeof IconAirlineSeatLegroomNormal;
declare const index_IconAirlineSeatLegroomReduced: typeof IconAirlineSeatLegroomReduced;
declare const index_IconAirlineSeatReclineExtra: typeof IconAirlineSeatReclineExtra;
declare const index_IconAirlineSeatReclineNormal: typeof IconAirlineSeatReclineNormal;
declare const index_IconAirplanemodeActive: typeof IconAirplanemodeActive;
declare const index_IconAirplanemodeInactive: typeof IconAirplanemodeInactive;
declare const index_IconAirplay: typeof IconAirplay;
declare const index_IconAirportShuttle: typeof IconAirportShuttle;
declare const index_IconAlarmAdd: typeof IconAlarmAdd;
declare const index_IconAlarmOff: typeof IconAlarmOff;
declare const index_IconAlarmOn: typeof IconAlarmOn;
declare const index_IconAlarm: typeof IconAlarm;
declare const index_IconAlbum: typeof IconAlbum;
declare const index_IconAllInbox: typeof IconAllInbox;
declare const index_IconAllInclusive: typeof IconAllInclusive;
declare const index_IconAllOut: typeof IconAllOut;
declare const index_IconAltRoute: typeof IconAltRoute;
declare const index_IconAlternateEmail: typeof IconAlternateEmail;
declare const index_IconAmpStories: typeof IconAmpStories;
declare const index_IconAnalytics: typeof IconAnalytics;
declare const index_IconAnchor: typeof IconAnchor;
declare const index_IconAndroid: typeof IconAndroid;
declare const index_IconAnnouncement: typeof IconAnnouncement;
declare const index_IconApartment: typeof IconApartment;
declare const index_IconApi: typeof IconApi;
declare const index_IconAppBlocking: typeof IconAppBlocking;
declare const index_IconAppSettingsAlt: typeof IconAppSettingsAlt;
declare const index_IconApps: typeof IconApps;
declare const index_IconArchitecture: typeof IconArchitecture;
declare const index_IconArchive: typeof IconArchive;
declare const index_IconArrowBackIos: typeof IconArrowBackIos;
declare const index_IconArrowBack: typeof IconArrowBack;
declare const index_IconArrowCircleDown: typeof IconArrowCircleDown;
declare const index_IconArrowCircleUp: typeof IconArrowCircleUp;
declare const index_IconArrowDownward: typeof IconArrowDownward;
declare const index_IconArrowDropDownCircle: typeof IconArrowDropDownCircle;
declare const index_IconArrowDropDown: typeof IconArrowDropDown;
declare const index_IconArrowDropUp: typeof IconArrowDropUp;
declare const index_IconArrowForwardIos: typeof IconArrowForwardIos;
declare const index_IconArrowForward: typeof IconArrowForward;
declare const index_IconArrowLeft: typeof IconArrowLeft;
declare const index_IconArrowRightAlt: typeof IconArrowRightAlt;
declare const index_IconArrowRight: typeof IconArrowRight;
declare const index_IconArrowUpward: typeof IconArrowUpward;
declare const index_IconArtTrack: typeof IconArtTrack;
declare const index_IconArticle: typeof IconArticle;
declare const index_IconAspectRatio: typeof IconAspectRatio;
declare const index_IconAssessment: typeof IconAssessment;
declare const index_IconAssignmentInd: typeof IconAssignmentInd;
declare const index_IconAssignmentLate: typeof IconAssignmentLate;
declare const index_IconAssignmentReturn: typeof IconAssignmentReturn;
declare const index_IconAssignmentReturned: typeof IconAssignmentReturned;
declare const index_IconAssignmentTurnedIn: typeof IconAssignmentTurnedIn;
declare const index_IconAssignment: typeof IconAssignment;
declare const index_IconAssistantPhoto: typeof IconAssistantPhoto;
declare const index_IconAssistant: typeof IconAssistant;
declare const index_IconAtm: typeof IconAtm;
declare const index_IconAttachEmail: typeof IconAttachEmail;
declare const index_IconAttachFile: typeof IconAttachFile;
declare const index_IconAttachMoney: typeof IconAttachMoney;
declare const index_IconAttachment: typeof IconAttachment;
declare const index_IconAttribution: typeof IconAttribution;
declare const index_IconAudiotrack: typeof IconAudiotrack;
declare const index_IconAutoDelete: typeof IconAutoDelete;
declare const index_IconAutorenew: typeof IconAutorenew;
declare const index_IconAvTimer: typeof IconAvTimer;
declare const index_IconBabyChangingStation: typeof IconBabyChangingStation;
declare const index_IconBackpack: typeof IconBackpack;
declare const index_IconBackspace: typeof IconBackspace;
declare const index_IconBackupTable: typeof IconBackupTable;
declare const index_IconBackup: typeof IconBackup;
declare const index_IconBallot: typeof IconBallot;
declare const index_IconBarChart: typeof IconBarChart;
declare const index_IconBatchPrediction: typeof IconBatchPrediction;
declare const index_IconBathtub: typeof IconBathtub;
declare const index_IconBatteryAlert: typeof IconBatteryAlert;
declare const index_IconBatteryChargingFull: typeof IconBatteryChargingFull;
declare const index_IconBatteryFull: typeof IconBatteryFull;
declare const index_IconBatteryStd: typeof IconBatteryStd;
declare const index_IconBatteryUnknown: typeof IconBatteryUnknown;
declare const index_IconBeachAccess: typeof IconBeachAccess;
declare const index_IconBedtime: typeof IconBedtime;
declare const index_IconBeenhere: typeof IconBeenhere;
declare const index_IconBento: typeof IconBento;
declare const index_IconBikeScooter: typeof IconBikeScooter;
declare const index_IconBiotech: typeof IconBiotech;
declare const index_IconBlock: typeof IconBlock;
declare const index_IconBluetoothAudio: typeof IconBluetoothAudio;
declare const index_IconBluetoothConnected: typeof IconBluetoothConnected;
declare const index_IconBluetoothDisabled: typeof IconBluetoothDisabled;
declare const index_IconBluetoothSearching: typeof IconBluetoothSearching;
declare const index_IconBluetooth: typeof IconBluetooth;
declare const index_IconBlurCircular: typeof IconBlurCircular;
declare const index_IconBlurLinear: typeof IconBlurLinear;
declare const index_IconBlurOff: typeof IconBlurOff;
declare const index_IconBlurOn: typeof IconBlurOn;
declare const index_IconBookOnline: typeof IconBookOnline;
declare const index_IconBook: typeof IconBook;
declare const index_IconBookmarkBorder: typeof IconBookmarkBorder;
declare const index_IconBookmark: typeof IconBookmark;
declare const index_IconBookmarks: typeof IconBookmarks;
declare const index_IconBorderAll: typeof IconBorderAll;
declare const index_IconBorderBottom: typeof IconBorderBottom;
declare const index_IconBorderClear: typeof IconBorderClear;
declare const index_IconBorderHorizontal: typeof IconBorderHorizontal;
declare const index_IconBorderInner: typeof IconBorderInner;
declare const index_IconBorderLeft: typeof IconBorderLeft;
declare const index_IconBorderOuter: typeof IconBorderOuter;
declare const index_IconBorderRight: typeof IconBorderRight;
declare const index_IconBorderStyle: typeof IconBorderStyle;
declare const index_IconBorderTop: typeof IconBorderTop;
declare const index_IconBorderVertical: typeof IconBorderVertical;
declare const index_IconBrandingWatermark: typeof IconBrandingWatermark;
declare const index_IconBrightness_1: typeof IconBrightness_1;
declare const index_IconBrightness_2: typeof IconBrightness_2;
declare const index_IconBrightness_3: typeof IconBrightness_3;
declare const index_IconBrightness_4: typeof IconBrightness_4;
declare const index_IconBrightness_5: typeof IconBrightness_5;
declare const index_IconBrightness_6: typeof IconBrightness_6;
declare const index_IconBrightness_7: typeof IconBrightness_7;
declare const index_IconBrightnessAuto: typeof IconBrightnessAuto;
declare const index_IconBrightnessHigh: typeof IconBrightnessHigh;
declare const index_IconBrightnessLow: typeof IconBrightnessLow;
declare const index_IconBrightnessMedium: typeof IconBrightnessMedium;
declare const index_IconBrokenImage: typeof IconBrokenImage;
declare const index_IconBrowserNotSupported: typeof IconBrowserNotSupported;
declare const index_IconBrush: typeof IconBrush;
declare const index_IconBubbleChart: typeof IconBubbleChart;
declare const index_IconBugReport: typeof IconBugReport;
declare const index_IconBuildCircle: typeof IconBuildCircle;
declare const index_IconBuild: typeof IconBuild;
declare const index_IconBurstMode: typeof IconBurstMode;
declare const index_IconBusinessCenter: typeof IconBusinessCenter;
declare const index_IconBusiness: typeof IconBusiness;
declare const index_IconCached: typeof IconCached;
declare const index_IconCake: typeof IconCake;
declare const index_IconCalculate: typeof IconCalculate;
declare const index_IconCalendarToday: typeof IconCalendarToday;
declare const index_IconCalendarViewDay: typeof IconCalendarViewDay;
declare const index_IconCallEnd: typeof IconCallEnd;
declare const index_IconCallMade: typeof IconCallMade;
declare const index_IconCallMerge: typeof IconCallMerge;
declare const index_IconCallMissedOutgoing: typeof IconCallMissedOutgoing;
declare const index_IconCallMissed: typeof IconCallMissed;
declare const index_IconCallReceived: typeof IconCallReceived;
declare const index_IconCallSplit: typeof IconCallSplit;
declare const index_IconCallToAction: typeof IconCallToAction;
declare const index_IconCall: typeof IconCall;
declare const index_IconCameraAlt: typeof IconCameraAlt;
declare const index_IconCameraEnhance: typeof IconCameraEnhance;
declare const index_IconCameraFront: typeof IconCameraFront;
declare const index_IconCameraRear: typeof IconCameraRear;
declare const index_IconCameraRoll: typeof IconCameraRoll;
declare const index_IconCamera: typeof IconCamera;
declare const index_IconCampaign: typeof IconCampaign;
declare const index_IconCancelPresentation: typeof IconCancelPresentation;
declare const index_IconCancelScheduleSend: typeof IconCancelScheduleSend;
declare const index_IconCancel: typeof IconCancel;
declare const index_IconCardGiftcard: typeof IconCardGiftcard;
declare const index_IconCardMembership: typeof IconCardMembership;
declare const index_IconCardTravel: typeof IconCardTravel;
declare const index_IconCarpenter: typeof IconCarpenter;
declare const index_IconCasino: typeof IconCasino;
declare const index_IconCastConnected: typeof IconCastConnected;
declare const index_IconCastForEducation: typeof IconCastForEducation;
declare const index_IconCast: typeof IconCast;
declare const index_IconCategory: typeof IconCategory;
declare const index_IconCenterFocusStrong: typeof IconCenterFocusStrong;
declare const index_IconCenterFocusWeak: typeof IconCenterFocusWeak;
declare const index_IconChangeHistory: typeof IconChangeHistory;
declare const index_IconChargingStation: typeof IconChargingStation;
declare const index_IconChatBubbleOutline: typeof IconChatBubbleOutline;
declare const index_IconChatBubble: typeof IconChatBubble;
declare const index_IconChat: typeof IconChat;
declare const index_IconCheckBoxOutlineBlank: typeof IconCheckBoxOutlineBlank;
declare const index_IconCheckBox: typeof IconCheckBox;
declare const index_IconCheckCircleOutline: typeof IconCheckCircleOutline;
declare const index_IconCheckCircle: typeof IconCheckCircle;
declare const index_IconCheck: typeof IconCheck;
declare const index_IconCheckroom: typeof IconCheckroom;
declare const index_IconChevronLeft: typeof IconChevronLeft;
declare const index_IconChevronRight: typeof IconChevronRight;
declare const index_IconChildCare: typeof IconChildCare;
declare const index_IconChildFriendly: typeof IconChildFriendly;
declare const index_IconChromeReaderMode: typeof IconChromeReaderMode;
declare const index_IconClass: typeof IconClass;
declare const index_IconCleanHands: typeof IconCleanHands;
declare const index_IconCleaningServices: typeof IconCleaningServices;
declare const index_IconClearAll: typeof IconClearAll;
declare const index_IconClear: typeof IconClear;
declare const index_IconCloseFullscreen: typeof IconCloseFullscreen;
declare const index_IconClose: typeof IconClose;
declare const index_IconClosedCaptionDisabled: typeof IconClosedCaptionDisabled;
declare const index_IconClosedCaption: typeof IconClosedCaption;
declare const index_IconCloudCircle: typeof IconCloudCircle;
declare const index_IconCloudDone: typeof IconCloudDone;
declare const index_IconCloudDownload: typeof IconCloudDownload;
declare const index_IconCloudOff: typeof IconCloudOff;
declare const index_IconCloudQueue: typeof IconCloudQueue;
declare const index_IconCloudUpload: typeof IconCloudUpload;
declare const index_IconCloud: typeof IconCloud;
declare const index_IconCode: typeof IconCode;
declare const index_IconCollectionsBookmark: typeof IconCollectionsBookmark;
declare const index_IconCollections: typeof IconCollections;
declare const index_IconColorLens: typeof IconColorLens;
declare const index_IconColorize: typeof IconColorize;
declare const index_IconCommentBank: typeof IconCommentBank;
declare const index_IconComment: typeof IconComment;
declare const index_IconCommute: typeof IconCommute;
declare const index_IconCompareArrows: typeof IconCompareArrows;
declare const index_IconCompare: typeof IconCompare;
declare const index_IconCompassCalibration: typeof IconCompassCalibration;
declare const index_IconComputer: typeof IconComputer;
declare const index_IconConfirmationNumber: typeof IconConfirmationNumber;
declare const index_IconConnectWithoutContact: typeof IconConnectWithoutContact;
declare const index_IconConstruction: typeof IconConstruction;
declare const index_IconContactMail: typeof IconContactMail;
declare const index_IconContactPage: typeof IconContactPage;
declare const index_IconContactPhone: typeof IconContactPhone;
declare const index_IconContactSupport: typeof IconContactSupport;
declare const index_IconContactless: typeof IconContactless;
declare const index_IconContacts: typeof IconContacts;
declare const index_IconContentCopy: typeof IconContentCopy;
declare const index_IconContentCut: typeof IconContentCut;
declare const index_IconContentPaste: typeof IconContentPaste;
declare const index_IconControlCamera: typeof IconControlCamera;
declare const index_IconControlPointDuplicate: typeof IconControlPointDuplicate;
declare const index_IconControlPoint: typeof IconControlPoint;
declare const index_IconCopyright: typeof IconCopyright;
declare const index_IconCoronavirus: typeof IconCoronavirus;
declare const index_IconCorporateFare: typeof IconCorporateFare;
declare const index_IconCountertops: typeof IconCountertops;
declare const index_IconCreateNewFolder: typeof IconCreateNewFolder;
declare const index_IconCreate: typeof IconCreate;
declare const index_IconCreditCard: typeof IconCreditCard;
declare const index_IconCrop_16_9: typeof IconCrop_16_9;
declare const index_IconCrop_3_2: typeof IconCrop_3_2;
declare const index_IconCrop_5_4: typeof IconCrop_5_4;
declare const index_IconCrop_7_5: typeof IconCrop_7_5;
declare const index_IconCropDin: typeof IconCropDin;
declare const index_IconCropFree: typeof IconCropFree;
declare const index_IconCropLandscape: typeof IconCropLandscape;
declare const index_IconCropOriginal: typeof IconCropOriginal;
declare const index_IconCropPortrait: typeof IconCropPortrait;
declare const index_IconCropRotate: typeof IconCropRotate;
declare const index_IconCropSquare: typeof IconCropSquare;
declare const index_IconCrop: typeof IconCrop;
declare const index_IconDashboard: typeof IconDashboard;
declare const index_IconDataUsage: typeof IconDataUsage;
declare const index_IconDateRange: typeof IconDateRange;
declare const index_IconDeck: typeof IconDeck;
declare const index_IconDehaze: typeof IconDehaze;
declare const index_IconDeleteForever: typeof IconDeleteForever;
declare const index_IconDeleteOutline: typeof IconDeleteOutline;
declare const index_IconDeleteSweep: typeof IconDeleteSweep;
declare const index_IconDelete: typeof IconDelete;
declare const index_IconDepartureBoard: typeof IconDepartureBoard;
declare const index_IconDescription: typeof IconDescription;
declare const index_IconDesignServices: typeof IconDesignServices;
declare const index_IconDesktopAccessDisabled: typeof IconDesktopAccessDisabled;
declare const index_IconDesktopMac: typeof IconDesktopMac;
declare const index_IconDesktopWindows: typeof IconDesktopWindows;
declare const index_IconDetails: typeof IconDetails;
declare const index_IconDeveloperBoard: typeof IconDeveloperBoard;
declare const index_IconDeveloperMode: typeof IconDeveloperMode;
declare const index_IconDeviceHub: typeof IconDeviceHub;
declare const index_IconDeviceUnknown: typeof IconDeviceUnknown;
declare const index_IconDevicesOther: typeof IconDevicesOther;
declare const index_IconDevices: typeof IconDevices;
declare const index_IconDialerSip: typeof IconDialerSip;
declare const index_IconDialpad: typeof IconDialpad;
declare const index_IconDirectionsBike: typeof IconDirectionsBike;
declare const index_IconDirectionsBoat: typeof IconDirectionsBoat;
declare const index_IconDirectionsBus: typeof IconDirectionsBus;
declare const index_IconDirectionsCar: typeof IconDirectionsCar;
declare const index_IconDirectionsOff: typeof IconDirectionsOff;
declare const index_IconDirectionsRailway: typeof IconDirectionsRailway;
declare const index_IconDirectionsRun: typeof IconDirectionsRun;
declare const index_IconDirectionsSubway: typeof IconDirectionsSubway;
declare const index_IconDirectionsTransit: typeof IconDirectionsTransit;
declare const index_IconDirectionsWalk: typeof IconDirectionsWalk;
declare const index_IconDirections: typeof IconDirections;
declare const index_IconDisabledByDefault: typeof IconDisabledByDefault;
declare const index_IconDiscFull: typeof IconDiscFull;
declare const index_IconDns: typeof IconDns;
declare const index_IconDoDisturbAlt: typeof IconDoDisturbAlt;
declare const index_IconDoDisturbOff: typeof IconDoDisturbOff;
declare const index_IconDoDisturbOn: typeof IconDoDisturbOn;
declare const index_IconDoDisturb: typeof IconDoDisturb;
declare const index_IconDoNotStep: typeof IconDoNotStep;
declare const index_IconDoNotTouch: typeof IconDoNotTouch;
declare const index_IconDock: typeof IconDock;
declare const index_IconDomainDisabled: typeof IconDomainDisabled;
declare const index_IconDomainVerification: typeof IconDomainVerification;
declare const index_IconDomain: typeof IconDomain;
declare const index_IconDoneAll: typeof IconDoneAll;
declare const index_IconDoneOutline: typeof IconDoneOutline;
declare const index_IconDone: typeof IconDone;
declare const index_IconDonutLarge: typeof IconDonutLarge;
declare const index_IconDonutSmall: typeof IconDonutSmall;
declare const index_IconDoubleArrow: typeof IconDoubleArrow;
declare const index_IconDownloadDone: typeof IconDownloadDone;
declare const index_IconDownload: typeof IconDownload;
declare const index_IconDrafts: typeof IconDrafts;
declare const index_IconDragHandle: typeof IconDragHandle;
declare const index_IconDragIndicator: typeof IconDragIndicator;
declare const index_IconDriveEta: typeof IconDriveEta;
declare const index_IconDry: typeof IconDry;
declare const index_IconDuo: typeof IconDuo;
declare const index_IconDvr: typeof IconDvr;
declare const index_IconDynamicFeed: typeof IconDynamicFeed;
declare const index_IconDynamicForm: typeof IconDynamicForm;
declare const index_IconEast: typeof IconEast;
declare const index_IconEco: typeof IconEco;
declare const index_IconEditAttributes: typeof IconEditAttributes;
declare const index_IconEditLocation: typeof IconEditLocation;
declare const index_IconEditRoad: typeof IconEditRoad;
declare const index_IconEdit: typeof IconEdit;
declare const index_IconEject: typeof IconEject;
declare const index_IconElderly: typeof IconElderly;
declare const index_IconElectricBike: typeof IconElectricBike;
declare const index_IconElectricCar: typeof IconElectricCar;
declare const index_IconElectricMoped: typeof IconElectricMoped;
declare const index_IconElectricScooter: typeof IconElectricScooter;
declare const index_IconElectricalServices: typeof IconElectricalServices;
declare const index_IconElevator: typeof IconElevator;
declare const index_IconEmail: typeof IconEmail;
declare const index_IconEmojiEmotions: typeof IconEmojiEmotions;
declare const index_IconEmojiEvents: typeof IconEmojiEvents;
declare const index_IconEmojiFlags: typeof IconEmojiFlags;
declare const index_IconEmojiFoodBeverage: typeof IconEmojiFoodBeverage;
declare const index_IconEmojiNature: typeof IconEmojiNature;
declare const index_IconEmojiObjects: typeof IconEmojiObjects;
declare const index_IconEmojiPeople: typeof IconEmojiPeople;
declare const index_IconEmojiSymbols: typeof IconEmojiSymbols;
declare const index_IconEmojiTransportation: typeof IconEmojiTransportation;
declare const index_IconEngineering: typeof IconEngineering;
declare const index_IconEnhancedEncryption: typeof IconEnhancedEncryption;
declare const index_IconEqualizer: typeof IconEqualizer;
declare const index_IconErrorOutline: typeof IconErrorOutline;
declare const index_IconError: typeof IconError;
declare const index_IconEscalatorWarning: typeof IconEscalatorWarning;
declare const index_IconEscalator: typeof IconEscalator;
declare const index_IconEuroSymbol: typeof IconEuroSymbol;
declare const index_IconEuro: typeof IconEuro;
declare const index_IconEvStation: typeof IconEvStation;
declare const index_IconEventAvailable: typeof IconEventAvailable;
declare const index_IconEventBusy: typeof IconEventBusy;
declare const index_IconEventNote: typeof IconEventNote;
declare const index_IconEventSeat: typeof IconEventSeat;
declare const index_IconEvent: typeof IconEvent;
declare const index_IconExitToApp: typeof IconExitToApp;
declare const index_IconExpandLess: typeof IconExpandLess;
declare const index_IconExpandMore: typeof IconExpandMore;
declare const index_IconExplicit: typeof IconExplicit;
declare const index_IconExploreOff: typeof IconExploreOff;
declare const index_IconExplore: typeof IconExplore;
declare const index_IconExposureNeg_1: typeof IconExposureNeg_1;
declare const index_IconExposureNeg_2: typeof IconExposureNeg_2;
declare const index_IconExposurePlus_1: typeof IconExposurePlus_1;
declare const index_IconExposurePlus_2: typeof IconExposurePlus_2;
declare const index_IconExposureZero: typeof IconExposureZero;
declare const index_IconExposure: typeof IconExposure;
declare const index_IconExtension: typeof IconExtension;
declare const index_IconFaceUnlock: typeof IconFaceUnlock;
declare const index_IconFace: typeof IconFace;
declare const index_IconFacebook: typeof IconFacebook;
declare const index_IconFactCheck: typeof IconFactCheck;
declare const index_IconFamilyRestroom: typeof IconFamilyRestroom;
declare const index_IconFastForward: typeof IconFastForward;
declare const index_IconFastRewind: typeof IconFastRewind;
declare const index_IconFastfood: typeof IconFastfood;
declare const index_IconFavoriteBorder: typeof IconFavoriteBorder;
declare const index_IconFavorite: typeof IconFavorite;
declare const index_IconFeaturedPlayList: typeof IconFeaturedPlayList;
declare const index_IconFeaturedVideo: typeof IconFeaturedVideo;
declare const index_IconFeedback: typeof IconFeedback;
declare const index_IconFence: typeof IconFence;
declare const index_IconFiberDvr: typeof IconFiberDvr;
declare const index_IconFiberManualRecord: typeof IconFiberManualRecord;
declare const index_IconFiberNew: typeof IconFiberNew;
declare const index_IconFiberPin: typeof IconFiberPin;
declare const index_IconFiberSmartRecord: typeof IconFiberSmartRecord;
declare const index_IconFileCopy: typeof IconFileCopy;
declare const index_IconFilter_1: typeof IconFilter_1;
declare const index_IconFilter_2: typeof IconFilter_2;
declare const index_IconFilter_3: typeof IconFilter_3;
declare const index_IconFilter_4: typeof IconFilter_4;
declare const index_IconFilter_5: typeof IconFilter_5;
declare const index_IconFilter_6: typeof IconFilter_6;
declare const index_IconFilter_7: typeof IconFilter_7;
declare const index_IconFilter_8: typeof IconFilter_8;
declare const index_IconFilter_9Plus: typeof IconFilter_9Plus;
declare const index_IconFilter_9: typeof IconFilter_9;
declare const index_IconFilterAlt: typeof IconFilterAlt;
declare const index_IconFilterBAndW: typeof IconFilterBAndW;
declare const index_IconFilterCenterFocus: typeof IconFilterCenterFocus;
declare const index_IconFilterDrama: typeof IconFilterDrama;
declare const index_IconFilterFrames: typeof IconFilterFrames;
declare const index_IconFilterHdr: typeof IconFilterHdr;
declare const index_IconFilterList: typeof IconFilterList;
declare const index_IconFilterNone: typeof IconFilterNone;
declare const index_IconFilterTiltShift: typeof IconFilterTiltShift;
declare const index_IconFilterVintage: typeof IconFilterVintage;
declare const index_IconFilter: typeof IconFilter;
declare const index_IconFindInPage: typeof IconFindInPage;
declare const index_IconFindReplace: typeof IconFindReplace;
declare const index_IconFingerprint: typeof IconFingerprint;
declare const index_IconFireExtinguisher: typeof IconFireExtinguisher;
declare const index_IconFireplace: typeof IconFireplace;
declare const index_IconFirstPage: typeof IconFirstPage;
declare const index_IconFitnessCenter: typeof IconFitnessCenter;
declare const index_IconFlag: typeof IconFlag;
declare const index_IconFlaky: typeof IconFlaky;
declare const index_IconFlare: typeof IconFlare;
declare const index_IconFlashAuto: typeof IconFlashAuto;
declare const index_IconFlashOff: typeof IconFlashOff;
declare const index_IconFlashOn: typeof IconFlashOn;
declare const index_IconFlightLand: typeof IconFlightLand;
declare const index_IconFlightTakeoff: typeof IconFlightTakeoff;
declare const index_IconFlight: typeof IconFlight;
declare const index_IconFlipCameraAndroid: typeof IconFlipCameraAndroid;
declare const index_IconFlipCameraIos: typeof IconFlipCameraIos;
declare const index_IconFlipToBack: typeof IconFlipToBack;
declare const index_IconFlipToFront: typeof IconFlipToFront;
declare const index_IconFlip: typeof IconFlip;
declare const index_IconFolderOpen: typeof IconFolderOpen;
declare const index_IconFolderShared: typeof IconFolderShared;
declare const index_IconFolderSpecial: typeof IconFolderSpecial;
declare const index_IconFolder: typeof IconFolder;
declare const index_IconFollowTheSigns: typeof IconFollowTheSigns;
declare const index_IconFontDownload: typeof IconFontDownload;
declare const index_IconFoodBank: typeof IconFoodBank;
declare const index_IconFormatAlignCenter: typeof IconFormatAlignCenter;
declare const index_IconFormatAlignJustify: typeof IconFormatAlignJustify;
declare const index_IconFormatAlignLeft: typeof IconFormatAlignLeft;
declare const index_IconFormatAlignRight: typeof IconFormatAlignRight;
declare const index_IconFormatBold: typeof IconFormatBold;
declare const index_IconFormatClear: typeof IconFormatClear;
declare const index_IconFormatColorReset: typeof IconFormatColorReset;
declare const index_IconFormatIndentDecrease: typeof IconFormatIndentDecrease;
declare const index_IconFormatIndentIncrease: typeof IconFormatIndentIncrease;
declare const index_IconFormatItalic: typeof IconFormatItalic;
declare const index_IconFormatLineSpacing: typeof IconFormatLineSpacing;
declare const index_IconFormatListBulleted: typeof IconFormatListBulleted;
declare const index_IconFormatListNumberedRtl: typeof IconFormatListNumberedRtl;
declare const index_IconFormatListNumbered: typeof IconFormatListNumbered;
declare const index_IconFormatPaint: typeof IconFormatPaint;
declare const index_IconFormatQuote: typeof IconFormatQuote;
declare const index_IconFormatShapes: typeof IconFormatShapes;
declare const index_IconFormatSize: typeof IconFormatSize;
declare const index_IconFormatStrikethrough: typeof IconFormatStrikethrough;
declare const index_IconFormatTextdirectionLToR: typeof IconFormatTextdirectionLToR;
declare const index_IconFormatTextdirectionRToL: typeof IconFormatTextdirectionRToL;
declare const index_IconFormatUnderlined: typeof IconFormatUnderlined;
declare const index_IconForum: typeof IconForum;
declare const index_IconForward_10: typeof IconForward_10;
declare const index_IconForward_30: typeof IconForward_30;
declare const index_IconForward_5: typeof IconForward_5;
declare const index_IconForwardToInbox: typeof IconForwardToInbox;
declare const index_IconForward: typeof IconForward;
declare const index_IconFoundation: typeof IconFoundation;
declare const index_IconFreeBreakfast: typeof IconFreeBreakfast;
declare const index_IconFullscreenExit: typeof IconFullscreenExit;
declare const index_IconFullscreen: typeof IconFullscreen;
declare const index_IconFunctions: typeof IconFunctions;
declare const index_IconGTranslate: typeof IconGTranslate;
declare const index_IconGamepad: typeof IconGamepad;
declare const index_IconGames: typeof IconGames;
declare const index_IconGavel: typeof IconGavel;
declare const index_IconGesture: typeof IconGesture;
declare const index_IconGetApp: typeof IconGetApp;
declare const index_IconGif: typeof IconGif;
declare const index_IconGolfCourse: typeof IconGolfCourse;
declare const index_IconGpsFixed: typeof IconGpsFixed;
declare const index_IconGpsNotFixed: typeof IconGpsNotFixed;
declare const index_IconGpsOff: typeof IconGpsOff;
declare const index_IconGrade: typeof IconGrade;
declare const index_IconGradient: typeof IconGradient;
declare const index_IconGrading: typeof IconGrading;
declare const index_IconGrain: typeof IconGrain;
declare const index_IconGraphicEq: typeof IconGraphicEq;
declare const index_IconGrass: typeof IconGrass;
declare const index_IconGridOff: typeof IconGridOff;
declare const index_IconGridOn: typeof IconGridOn;
declare const index_IconGroupAdd: typeof IconGroupAdd;
declare const index_IconGroupWork: typeof IconGroupWork;
declare const index_IconGroup: typeof IconGroup;
declare const index_IconGroups: typeof IconGroups;
declare const index_IconHandyman: typeof IconHandyman;
declare const index_IconHd: typeof IconHd;
declare const index_IconHdrOff: typeof IconHdrOff;
declare const index_IconHdrOn: typeof IconHdrOn;
declare const index_IconHdrStrong: typeof IconHdrStrong;
declare const index_IconHdrWeak: typeof IconHdrWeak;
declare const index_IconHeadsetMic: typeof IconHeadsetMic;
declare const index_IconHeadset: typeof IconHeadset;
declare const index_IconHealing: typeof IconHealing;
declare const index_IconHearingDisabled: typeof IconHearingDisabled;
declare const index_IconHearing: typeof IconHearing;
declare const index_IconHeight: typeof IconHeight;
declare const index_IconHelpCenter: typeof IconHelpCenter;
declare const index_IconHelpOutline: typeof IconHelpOutline;
declare const index_IconHelp: typeof IconHelp;
declare const index_IconHighQuality: typeof IconHighQuality;
declare const index_IconHighlightAlt: typeof IconHighlightAlt;
declare const index_IconHighlightOff: typeof IconHighlightOff;
declare const index_IconHighlight: typeof IconHighlight;
declare const index_IconHistoryEdu: typeof IconHistoryEdu;
declare const index_IconHistoryToggleOff: typeof IconHistoryToggleOff;
declare const index_IconHistory: typeof IconHistory;
declare const index_IconHomeRepairService: typeof IconHomeRepairService;
declare const index_IconHomeWork: typeof IconHomeWork;
declare const index_IconHome: typeof IconHome;
declare const index_IconHorizontalRule: typeof IconHorizontalRule;
declare const index_IconHorizontalSplit: typeof IconHorizontalSplit;
declare const index_IconHotTub: typeof IconHotTub;
declare const index_IconHotel: typeof IconHotel;
declare const index_IconHourglassBottom: typeof IconHourglassBottom;
declare const index_IconHourglassDisabled: typeof IconHourglassDisabled;
declare const index_IconHourglassEmpty: typeof IconHourglassEmpty;
declare const index_IconHourglassFull: typeof IconHourglassFull;
declare const index_IconHourglassTop: typeof IconHourglassTop;
declare const index_IconHouseSiding: typeof IconHouseSiding;
declare const index_IconHouse: typeof IconHouse;
declare const index_IconHowToReg: typeof IconHowToReg;
declare const index_IconHowToVote: typeof IconHowToVote;
declare const index_IconHttp: typeof IconHttp;
declare const index_IconHttps: typeof IconHttps;
declare const index_IconHvac: typeof IconHvac;
declare const index_IconImageAspectRatio: typeof IconImageAspectRatio;
declare const index_IconImageNotSupported: typeof IconImageNotSupported;
declare const index_IconImageSearch: typeof IconImageSearch;
declare const index_IconImage: typeof IconImage;
declare const index_IconImportContacts: typeof IconImportContacts;
declare const index_IconImportExport: typeof IconImportExport;
declare const index_IconImportantDevices: typeof IconImportantDevices;
declare const index_IconInbox: typeof IconInbox;
declare const index_IconIndeterminateCheckBox: typeof IconIndeterminateCheckBox;
declare const index_IconInfo: typeof IconInfo;
declare const index_IconInput: typeof IconInput;
declare const index_IconInsertChartOutlined: typeof IconInsertChartOutlined;
declare const index_IconInsertChart: typeof IconInsertChart;
declare const index_IconInsertComment: typeof IconInsertComment;
declare const index_IconInsertDriveFile: typeof IconInsertDriveFile;
declare const index_IconInsertEmoticon: typeof IconInsertEmoticon;
declare const index_IconInsertInvitation: typeof IconInsertInvitation;
declare const index_IconInsertLink: typeof IconInsertLink;
declare const index_IconInsertPhoto: typeof IconInsertPhoto;
declare const index_IconInsights: typeof IconInsights;
declare const index_IconIntegrationInstructions: typeof IconIntegrationInstructions;
declare const index_IconInvertColorsOff: typeof IconInvertColorsOff;
declare const index_IconInvertColors: typeof IconInvertColors;
declare const index_IconIso: typeof IconIso;
declare const index_IconKeyboardArrowDown: typeof IconKeyboardArrowDown;
declare const index_IconKeyboardArrowLeft: typeof IconKeyboardArrowLeft;
declare const index_IconKeyboardArrowRight: typeof IconKeyboardArrowRight;
declare const index_IconKeyboardArrowUp: typeof IconKeyboardArrowUp;
declare const index_IconKeyboardBackspace: typeof IconKeyboardBackspace;
declare const index_IconKeyboardCapslock: typeof IconKeyboardCapslock;
declare const index_IconKeyboardHide: typeof IconKeyboardHide;
declare const index_IconKeyboardReturn: typeof IconKeyboardReturn;
declare const index_IconKeyboardTab: typeof IconKeyboardTab;
declare const index_IconKeyboardVoice: typeof IconKeyboardVoice;
declare const index_IconKeyboard: typeof IconKeyboard;
declare const index_IconKingBed: typeof IconKingBed;
declare const index_IconKitchen: typeof IconKitchen;
declare const index_IconLabelImportant: typeof IconLabelImportant;
declare const index_IconLabelOff: typeof IconLabelOff;
declare const index_IconLabel: typeof IconLabel;
declare const index_IconLandscape: typeof IconLandscape;
declare const index_IconLanguage: typeof IconLanguage;
declare const index_IconLaptopChromebook: typeof IconLaptopChromebook;
declare const index_IconLaptopMac: typeof IconLaptopMac;
declare const index_IconLaptopWindows: typeof IconLaptopWindows;
declare const index_IconLaptop: typeof IconLaptop;
declare const index_IconLastPage: typeof IconLastPage;
declare const index_IconLaunch: typeof IconLaunch;
declare const index_IconLayersClear: typeof IconLayersClear;
declare const index_IconLayers: typeof IconLayers;
declare const index_IconLeaderboard: typeof IconLeaderboard;
declare const index_IconLeakAdd: typeof IconLeakAdd;
declare const index_IconLeakRemove: typeof IconLeakRemove;
declare const index_IconLegendToggle: typeof IconLegendToggle;
declare const index_IconLens: typeof IconLens;
declare const index_IconLibraryAddCheck: typeof IconLibraryAddCheck;
declare const index_IconLibraryAdd: typeof IconLibraryAdd;
declare const index_IconLibraryBooks: typeof IconLibraryBooks;
declare const index_IconLibraryMusic: typeof IconLibraryMusic;
declare const index_IconLightbulb: typeof IconLightbulb;
declare const index_IconLineStyle: typeof IconLineStyle;
declare const index_IconLineWeight: typeof IconLineWeight;
declare const index_IconLinearScale: typeof IconLinearScale;
declare const index_IconLinkOff: typeof IconLinkOff;
declare const index_IconLink: typeof IconLink;
declare const index_IconLinkedCamera: typeof IconLinkedCamera;
declare const index_IconListAlt: typeof IconListAlt;
declare const index_IconList: typeof IconList;
declare const index_IconLiveHelp: typeof IconLiveHelp;
declare const index_IconLiveTv: typeof IconLiveTv;
declare const index_IconLocalActivity: typeof IconLocalActivity;
declare const index_IconLocalAirport: typeof IconLocalAirport;
declare const index_IconLocalAtm: typeof IconLocalAtm;
declare const index_IconLocalBar: typeof IconLocalBar;
declare const index_IconLocalCafe: typeof IconLocalCafe;
declare const index_IconLocalCarWash: typeof IconLocalCarWash;
declare const index_IconLocalConvenienceStore: typeof IconLocalConvenienceStore;
declare const index_IconLocalDining: typeof IconLocalDining;
declare const index_IconLocalDrink: typeof IconLocalDrink;
declare const index_IconLocalFireDepartment: typeof IconLocalFireDepartment;
declare const index_IconLocalFlorist: typeof IconLocalFlorist;
declare const index_IconLocalGasStation: typeof IconLocalGasStation;
declare const index_IconLocalGroceryStore: typeof IconLocalGroceryStore;
declare const index_IconLocalHospital: typeof IconLocalHospital;
declare const index_IconLocalHotel: typeof IconLocalHotel;
declare const index_IconLocalLaundryService: typeof IconLocalLaundryService;
declare const index_IconLocalLibrary: typeof IconLocalLibrary;
declare const index_IconLocalMall: typeof IconLocalMall;
declare const index_IconLocalMovies: typeof IconLocalMovies;
declare const index_IconLocalOffer: typeof IconLocalOffer;
declare const index_IconLocalParking: typeof IconLocalParking;
declare const index_IconLocalPharmacy: typeof IconLocalPharmacy;
declare const index_IconLocalPhone: typeof IconLocalPhone;
declare const index_IconLocalPizza: typeof IconLocalPizza;
declare const index_IconLocalPlay: typeof IconLocalPlay;
declare const index_IconLocalPolice: typeof IconLocalPolice;
declare const index_IconLocalPostOffice: typeof IconLocalPostOffice;
declare const index_IconLocalPrintshop: typeof IconLocalPrintshop;
declare const index_IconLocalSee: typeof IconLocalSee;
declare const index_IconLocalShipping: typeof IconLocalShipping;
declare const index_IconLocalTaxi: typeof IconLocalTaxi;
declare const index_IconLocationCity: typeof IconLocationCity;
declare const index_IconLocationDisabled: typeof IconLocationDisabled;
declare const index_IconLocationOff: typeof IconLocationOff;
declare const index_IconLocationOn: typeof IconLocationOn;
declare const index_IconLocationSearching: typeof IconLocationSearching;
declare const index_IconLockOpen: typeof IconLockOpen;
declare const index_IconLock: typeof IconLock;
declare const index_IconLogin: typeof IconLogin;
declare const index_IconLooks_3: typeof IconLooks_3;
declare const index_IconLooks_4: typeof IconLooks_4;
declare const index_IconLooks_5: typeof IconLooks_5;
declare const index_IconLooks_6: typeof IconLooks_6;
declare const index_IconLooksOne: typeof IconLooksOne;
declare const index_IconLooksTwo: typeof IconLooksTwo;
declare const index_IconLooks: typeof IconLooks;
declare const index_IconLoop: typeof IconLoop;
declare const index_IconLoupe: typeof IconLoupe;
declare const index_IconLowPriority: typeof IconLowPriority;
declare const index_IconLoyalty: typeof IconLoyalty;
declare const index_IconLuggage: typeof IconLuggage;
declare const index_IconMailOutline: typeof IconMailOutline;
declare const index_IconMail: typeof IconMail;
declare const index_IconMap: typeof IconMap;
declare const index_IconMapsUgc: typeof IconMapsUgc;
declare const index_IconMarkChatRead: typeof IconMarkChatRead;
declare const index_IconMarkChatUnread: typeof IconMarkChatUnread;
declare const index_IconMarkEmailRead: typeof IconMarkEmailRead;
declare const index_IconMarkEmailUnread: typeof IconMarkEmailUnread;
declare const index_IconMarkunreadMailbox: typeof IconMarkunreadMailbox;
declare const index_IconMarkunread: typeof IconMarkunread;
declare const index_IconMasks: typeof IconMasks;
declare const index_IconMaximize: typeof IconMaximize;
declare const index_IconMediation: typeof IconMediation;
declare const index_IconMedicalServices: typeof IconMedicalServices;
declare const index_IconMeetingRoom: typeof IconMeetingRoom;
declare const index_IconMemory: typeof IconMemory;
declare const index_IconMenuBook: typeof IconMenuBook;
declare const index_IconMenuOpen: typeof IconMenuOpen;
declare const index_IconMenu: typeof IconMenu;
declare const index_IconMergeType: typeof IconMergeType;
declare const index_IconMessage: typeof IconMessage;
declare const index_IconMicNone: typeof IconMicNone;
declare const index_IconMicOff: typeof IconMicOff;
declare const index_IconMic: typeof IconMic;
declare const index_IconMicrowave: typeof IconMicrowave;
declare const index_IconMilitaryTech: typeof IconMilitaryTech;
declare const index_IconMinimize: typeof IconMinimize;
declare const index_IconMiscellaneousServices: typeof IconMiscellaneousServices;
declare const index_IconMissedVideoCall: typeof IconMissedVideoCall;
declare const index_IconMms: typeof IconMms;
declare const index_IconMobileFriendly: typeof IconMobileFriendly;
declare const index_IconMobileOff: typeof IconMobileOff;
declare const index_IconMobileScreenShare: typeof IconMobileScreenShare;
declare const index_IconModeComment: typeof IconModeComment;
declare const index_IconMode: typeof IconMode;
declare const index_IconModelTraining: typeof IconModelTraining;
declare const index_IconMonetizationOn: typeof IconMonetizationOn;
declare const index_IconMoneyOffCsred: typeof IconMoneyOffCsred;
declare const index_IconMoneyOff: typeof IconMoneyOff;
declare const index_IconMoney: typeof IconMoney;
declare const index_IconMonochromePhotos: typeof IconMonochromePhotos;
declare const index_IconMoodBad: typeof IconMoodBad;
declare const index_IconMood: typeof IconMood;
declare const index_IconMoped: typeof IconMoped;
declare const index_IconMoreHoriz: typeof IconMoreHoriz;
declare const index_IconMoreTime: typeof IconMoreTime;
declare const index_IconMoreVert: typeof IconMoreVert;
declare const index_IconMore: typeof IconMore;
declare const index_IconMotionPhotosOn: typeof IconMotionPhotosOn;
declare const index_IconMotionPhotosPause: typeof IconMotionPhotosPause;
declare const index_IconMotionPhotosPaused: typeof IconMotionPhotosPaused;
declare const index_IconMouse: typeof IconMouse;
declare const index_IconMoveToInbox: typeof IconMoveToInbox;
declare const index_IconMovieCreation: typeof IconMovieCreation;
declare const index_IconMovieFilter: typeof IconMovieFilter;
declare const index_IconMovie: typeof IconMovie;
declare const index_IconMultilineChart: typeof IconMultilineChart;
declare const index_IconMultipleStop: typeof IconMultipleStop;
declare const index_IconMuseum: typeof IconMuseum;
declare const index_IconMusicNote: typeof IconMusicNote;
declare const index_IconMusicOff: typeof IconMusicOff;
declare const index_IconMusicVideo: typeof IconMusicVideo;
declare const index_IconMyLocation: typeof IconMyLocation;
declare const index_IconNat: typeof IconNat;
declare const index_IconNaturePeople: typeof IconNaturePeople;
declare const index_IconNature: typeof IconNature;
declare const index_IconNavigateBefore: typeof IconNavigateBefore;
declare const index_IconNavigateNext: typeof IconNavigateNext;
declare const index_IconNavigation: typeof IconNavigation;
declare const index_IconNearMeDisabled: typeof IconNearMeDisabled;
declare const index_IconNearMe: typeof IconNearMe;
declare const index_IconNetworkCheck: typeof IconNetworkCheck;
declare const index_IconNetworkLocked: typeof IconNetworkLocked;
declare const index_IconNewReleases: typeof IconNewReleases;
declare const index_IconNextPlan: typeof IconNextPlan;
declare const index_IconNextWeek: typeof IconNextWeek;
declare const index_IconNfc: typeof IconNfc;
declare const index_IconNightShelter: typeof IconNightShelter;
declare const index_IconNightsStay: typeof IconNightsStay;
declare const index_IconNoBackpack: typeof IconNoBackpack;
declare const index_IconNoCell: typeof IconNoCell;
declare const index_IconNoDrinks: typeof IconNoDrinks;
declare const index_IconNoEncryptionGmailerrorred: typeof IconNoEncryptionGmailerrorred;
declare const index_IconNoEncryption: typeof IconNoEncryption;
declare const index_IconNoFlash: typeof IconNoFlash;
declare const index_IconNoFood: typeof IconNoFood;
declare const index_IconNoLuggage: typeof IconNoLuggage;
declare const index_IconNoMeals: typeof IconNoMeals;
declare const index_IconNoMeetingRoom: typeof IconNoMeetingRoom;
declare const index_IconNoPhotography: typeof IconNoPhotography;
declare const index_IconNoSim: typeof IconNoSim;
declare const index_IconNoStroller: typeof IconNoStroller;
declare const index_IconNoTransfer: typeof IconNoTransfer;
declare const index_IconNorthEast: typeof IconNorthEast;
declare const index_IconNorthWest: typeof IconNorthWest;
declare const index_IconNorth: typeof IconNorth;
declare const index_IconNotAccessible: typeof IconNotAccessible;
declare const index_IconNotInterested: typeof IconNotInterested;
declare const index_IconNotListedLocation: typeof IconNotListedLocation;
declare const index_IconNotStarted: typeof IconNotStarted;
declare const index_IconNoteAdd: typeof IconNoteAdd;
declare const index_IconNote: typeof IconNote;
declare const index_IconNotes: typeof IconNotes;
declare const index_IconNotificationImportant: typeof IconNotificationImportant;
declare const index_IconNotificationsActive: typeof IconNotificationsActive;
declare const index_IconNotificationsNone: typeof IconNotificationsNone;
declare const index_IconNotificationsOff: typeof IconNotificationsOff;
declare const index_IconNotificationsPaused: typeof IconNotificationsPaused;
declare const index_IconNotifications: typeof IconNotifications;
declare const index_IconOfflineBolt: typeof IconOfflineBolt;
declare const index_IconOfflinePin: typeof IconOfflinePin;
declare const index_IconOndemandVideo: typeof IconOndemandVideo;
declare const index_IconOnlinePrediction: typeof IconOnlinePrediction;
declare const index_IconOpacity: typeof IconOpacity;
declare const index_IconOpenInBrowser: typeof IconOpenInBrowser;
declare const index_IconOpenInFull: typeof IconOpenInFull;
declare const index_IconOpenInNew: typeof IconOpenInNew;
declare const index_IconOpenWith: typeof IconOpenWith;
declare const index_IconOutbond: typeof IconOutbond;
declare const index_IconOutdoorGrill: typeof IconOutdoorGrill;
declare const index_IconOutlet: typeof IconOutlet;
declare const index_IconOutlinedFlag: typeof IconOutlinedFlag;
declare const index_IconPages: typeof IconPages;
declare const index_IconPageview: typeof IconPageview;
declare const index_IconPalette: typeof IconPalette;
declare const index_IconPanTool: typeof IconPanTool;
declare const index_IconPanoramaFishEye: typeof IconPanoramaFishEye;
declare const index_IconPanoramaHorizontal: typeof IconPanoramaHorizontal;
declare const index_IconPanoramaVertical: typeof IconPanoramaVertical;
declare const index_IconPanoramaWideAngle: typeof IconPanoramaWideAngle;
declare const index_IconPanorama: typeof IconPanorama;
declare const index_IconPartyMode: typeof IconPartyMode;
declare const index_IconPauseCircleFilled: typeof IconPauseCircleFilled;
declare const index_IconPauseCircleOutline: typeof IconPauseCircleOutline;
declare const index_IconPausePresentation: typeof IconPausePresentation;
declare const index_IconPause: typeof IconPause;
declare const index_IconPayment: typeof IconPayment;
declare const index_IconPayments: typeof IconPayments;
declare const index_IconPedalBike: typeof IconPedalBike;
declare const index_IconPendingActions: typeof IconPendingActions;
declare const index_IconPending: typeof IconPending;
declare const index_IconPeopleAlt: typeof IconPeopleAlt;
declare const index_IconPeopleOutline: typeof IconPeopleOutline;
declare const index_IconPeople: typeof IconPeople;
declare const index_IconPermCameraMic: typeof IconPermCameraMic;
declare const index_IconPermContactCalendar: typeof IconPermContactCalendar;
declare const index_IconPermDataSetting: typeof IconPermDataSetting;
declare const index_IconPermDeviceInformation: typeof IconPermDeviceInformation;
declare const index_IconPermIdentity: typeof IconPermIdentity;
declare const index_IconPermMedia: typeof IconPermMedia;
declare const index_IconPermPhoneMsg: typeof IconPermPhoneMsg;
declare const index_IconPermScanWifi: typeof IconPermScanWifi;
declare const index_IconPersonAddAlt_1: typeof IconPersonAddAlt_1;
declare const index_IconPersonAddDisabled: typeof IconPersonAddDisabled;
declare const index_IconPersonAdd: typeof IconPersonAdd;
declare const index_IconPersonOutline: typeof IconPersonOutline;
declare const index_IconPersonPinCircle: typeof IconPersonPinCircle;
declare const index_IconPersonPin: typeof IconPersonPin;
declare const index_IconPersonRemoveAlt_1: typeof IconPersonRemoveAlt_1;
declare const index_IconPersonRemove: typeof IconPersonRemove;
declare const index_IconPersonSearch: typeof IconPersonSearch;
declare const index_IconPerson: typeof IconPerson;
declare const index_IconPersonalVideo: typeof IconPersonalVideo;
declare const index_IconPestControlRodent: typeof IconPestControlRodent;
declare const index_IconPestControl: typeof IconPestControl;
declare const index_IconPets: typeof IconPets;
declare const index_IconPhoneAndroid: typeof IconPhoneAndroid;
declare const index_IconPhoneBluetoothSpeaker: typeof IconPhoneBluetoothSpeaker;
declare const index_IconPhoneCallback: typeof IconPhoneCallback;
declare const index_IconPhoneDisabled: typeof IconPhoneDisabled;
declare const index_IconPhoneEnabled: typeof IconPhoneEnabled;
declare const index_IconPhoneForwarded: typeof IconPhoneForwarded;
declare const index_IconPhoneInTalk: typeof IconPhoneInTalk;
declare const index_IconPhoneIphone: typeof IconPhoneIphone;
declare const index_IconPhoneLocked: typeof IconPhoneLocked;
declare const index_IconPhoneMissed: typeof IconPhoneMissed;
declare const index_IconPhonePaused: typeof IconPhonePaused;
declare const index_IconPhone: typeof IconPhone;
declare const index_IconPhonelinkErase: typeof IconPhonelinkErase;
declare const index_IconPhonelinkLock: typeof IconPhonelinkLock;
declare const index_IconPhonelinkOff: typeof IconPhonelinkOff;
declare const index_IconPhonelinkRing: typeof IconPhonelinkRing;
declare const index_IconPhonelinkSetup: typeof IconPhonelinkSetup;
declare const index_IconPhonelink: typeof IconPhonelink;
declare const index_IconPhotoAlbum: typeof IconPhotoAlbum;
declare const index_IconPhotoCamera: typeof IconPhotoCamera;
declare const index_IconPhotoFilter: typeof IconPhotoFilter;
declare const index_IconPhotoLibrary: typeof IconPhotoLibrary;
declare const index_IconPhotoSizeSelectActual: typeof IconPhotoSizeSelectActual;
declare const index_IconPhotoSizeSelectLarge: typeof IconPhotoSizeSelectLarge;
declare const index_IconPhotoSizeSelectSmall: typeof IconPhotoSizeSelectSmall;
declare const index_IconPhoto: typeof IconPhoto;
declare const index_IconPictureAsPdf: typeof IconPictureAsPdf;
declare const index_IconPictureInPictureAlt: typeof IconPictureInPictureAlt;
declare const index_IconPictureInPicture: typeof IconPictureInPicture;
declare const index_IconPieChartOutline: typeof IconPieChartOutline;
declare const index_IconPieChart: typeof IconPieChart;
declare const index_IconPinDrop: typeof IconPinDrop;
declare const index_IconPlace: typeof IconPlace;
declare const index_IconPlagiarism: typeof IconPlagiarism;
declare const index_IconPlayArrow: typeof IconPlayArrow;
declare const index_IconPlayCircleFilled: typeof IconPlayCircleFilled;
declare const index_IconPlayCircleOutline: typeof IconPlayCircleOutline;
declare const index_IconPlayForWork: typeof IconPlayForWork;
declare const index_IconPlaylistAddCheck: typeof IconPlaylistAddCheck;
declare const index_IconPlaylistAdd: typeof IconPlaylistAdd;
declare const index_IconPlaylistPlay: typeof IconPlaylistPlay;
declare const index_IconPlumbing: typeof IconPlumbing;
declare const index_IconPlusOne: typeof IconPlusOne;
declare const index_IconPointOfSale: typeof IconPointOfSale;
declare const index_IconPolicy: typeof IconPolicy;
declare const index_IconPoll: typeof IconPoll;
declare const index_IconPolymer: typeof IconPolymer;
declare const index_IconPool: typeof IconPool;
declare const index_IconPortableWifiOff: typeof IconPortableWifiOff;
declare const index_IconPortrait: typeof IconPortrait;
declare const index_IconPostAdd: typeof IconPostAdd;
declare const index_IconPowerInput: typeof IconPowerInput;
declare const index_IconPowerOff: typeof IconPowerOff;
declare const index_IconPowerSettingsNew: typeof IconPowerSettingsNew;
declare const index_IconPower: typeof IconPower;
declare const index_IconPrecisionManufacturing: typeof IconPrecisionManufacturing;
declare const index_IconPregnantWoman: typeof IconPregnantWoman;
declare const index_IconPresentToAll: typeof IconPresentToAll;
declare const index_IconPreview: typeof IconPreview;
declare const index_IconPrintDisabled: typeof IconPrintDisabled;
declare const index_IconPrint: typeof IconPrint;
declare const index_IconPriorityHigh: typeof IconPriorityHigh;
declare const index_IconPrivacyTip: typeof IconPrivacyTip;
declare const index_IconPsychology: typeof IconPsychology;
declare const index_IconPublicOff: typeof IconPublicOff;
declare const index_IconPublic: typeof IconPublic;
declare const index_IconPublish: typeof IconPublish;
declare const index_IconPublishedWithChanges: typeof IconPublishedWithChanges;
declare const index_IconPushPin: typeof IconPushPin;
declare const index_IconQrCodeScanner: typeof IconQrCodeScanner;
declare const index_IconQrCode: typeof IconQrCode;
declare const index_IconQueryBuilder: typeof IconQueryBuilder;
declare const index_IconQuestionAnswer: typeof IconQuestionAnswer;
declare const index_IconQueueMusic: typeof IconQueueMusic;
declare const index_IconQueuePlayNext: typeof IconQueuePlayNext;
declare const index_IconQueue: typeof IconQueue;
declare const index_IconQuickreply: typeof IconQuickreply;
declare const index_IconRadioButtonChecked: typeof IconRadioButtonChecked;
declare const index_IconRadioButtonUnchecked: typeof IconRadioButtonUnchecked;
declare const index_IconRadio: typeof IconRadio;
declare const index_IconRateReview: typeof IconRateReview;
declare const index_IconReadMore: typeof IconReadMore;
declare const index_IconReceiptLong: typeof IconReceiptLong;
declare const index_IconReceipt: typeof IconReceipt;
declare const index_IconRecentActors: typeof IconRecentActors;
declare const index_IconRecordVoiceOver: typeof IconRecordVoiceOver;
declare const index_IconRedeem: typeof IconRedeem;
declare const index_IconRedo: typeof IconRedo;
declare const index_IconReduceCapacity: typeof IconReduceCapacity;
declare const index_IconRefresh: typeof IconRefresh;
declare const index_IconRemoveCircleOutline: typeof IconRemoveCircleOutline;
declare const index_IconRemoveCircle: typeof IconRemoveCircle;
declare const index_IconRemoveFromQueue: typeof IconRemoveFromQueue;
declare const index_IconRemoveRedEye: typeof IconRemoveRedEye;
declare const index_IconRemoveShoppingCart: typeof IconRemoveShoppingCart;
declare const index_IconRemove: typeof IconRemove;
declare const index_IconReorder: typeof IconReorder;
declare const index_IconRepeatOne: typeof IconRepeatOne;
declare const index_IconRepeat: typeof IconRepeat;
declare const index_IconReplay_10: typeof IconReplay_10;
declare const index_IconReplay_30: typeof IconReplay_30;
declare const index_IconReplay_5: typeof IconReplay_5;
declare const index_IconReplay: typeof IconReplay;
declare const index_IconReplyAll: typeof IconReplyAll;
declare const index_IconReply: typeof IconReply;
declare const index_IconReportGmailerrorred: typeof IconReportGmailerrorred;
declare const index_IconReportOff: typeof IconReportOff;
declare const index_IconReportProblem: typeof IconReportProblem;
declare const index_IconReport: typeof IconReport;
declare const index_IconRequestPage: typeof IconRequestPage;
declare const index_IconRequestQuote: typeof IconRequestQuote;
declare const index_IconRestaurantMenu: typeof IconRestaurantMenu;
declare const index_IconRestaurant: typeof IconRestaurant;
declare const index_IconRestoreFromTrash: typeof IconRestoreFromTrash;
declare const index_IconRestorePage: typeof IconRestorePage;
declare const index_IconRestore: typeof IconRestore;
declare const index_IconRingVolume: typeof IconRingVolume;
declare const index_IconRoofing: typeof IconRoofing;
declare const index_IconRoomPreferences: typeof IconRoomPreferences;
declare const index_IconRoomService: typeof IconRoomService;
declare const index_IconRoom: typeof IconRoom;
declare const index_IconRotate_90DegreesCcw: typeof IconRotate_90DegreesCcw;
declare const index_IconRotateLeft: typeof IconRotateLeft;
declare const index_IconRotateRight: typeof IconRotateRight;
declare const index_IconRoundedCorner: typeof IconRoundedCorner;
declare const index_IconRouter: typeof IconRouter;
declare const index_IconRowing: typeof IconRowing;
declare const index_IconRssFeed: typeof IconRssFeed;
declare const index_IconRuleFolder: typeof IconRuleFolder;
declare const index_IconRule: typeof IconRule;
declare const index_IconRunCircle: typeof IconRunCircle;
declare const index_IconRvHookup: typeof IconRvHookup;
declare const index_IconSanitizer: typeof IconSanitizer;
declare const index_IconSatellite: typeof IconSatellite;
declare const index_IconSaveAlt: typeof IconSaveAlt;
declare const index_IconSave: typeof IconSave;
declare const index_IconScanner: typeof IconScanner;
declare const index_IconScatterPlot: typeof IconScatterPlot;
declare const index_IconSchedule: typeof IconSchedule;
declare const index_IconSchool: typeof IconSchool;
declare const index_IconScience: typeof IconScience;
declare const index_IconScore: typeof IconScore;
declare const index_IconScreenLockLandscape: typeof IconScreenLockLandscape;
declare const index_IconScreenLockPortrait: typeof IconScreenLockPortrait;
declare const index_IconScreenLockRotation: typeof IconScreenLockRotation;
declare const index_IconScreenRotation: typeof IconScreenRotation;
declare const index_IconScreenShare: typeof IconScreenShare;
declare const index_IconSdCardAlert: typeof IconSdCardAlert;
declare const index_IconSdCard: typeof IconSdCard;
declare const index_IconSdStorage: typeof IconSdStorage;
declare const index_IconSearchOff: typeof IconSearchOff;
declare const index_IconSearch: typeof IconSearch;
declare const index_IconSecurity: typeof IconSecurity;
declare const index_IconSelectAll: typeof IconSelectAll;
declare const index_IconSelfImprovement: typeof IconSelfImprovement;
declare const index_IconSend: typeof IconSend;
declare const index_IconSensorDoor: typeof IconSensorDoor;
declare const index_IconSensorWindow: typeof IconSensorWindow;
declare const index_IconSentimentDissatisfied: typeof IconSentimentDissatisfied;
declare const index_IconSentimentNeutral: typeof IconSentimentNeutral;
declare const index_IconSentimentSatisfiedAlt: typeof IconSentimentSatisfiedAlt;
declare const index_IconSentimentSatisfied: typeof IconSentimentSatisfied;
declare const index_IconSentimentVeryDissatisfied: typeof IconSentimentVeryDissatisfied;
declare const index_IconSentimentVerySatisfied: typeof IconSentimentVerySatisfied;
declare const index_IconSetMeal: typeof IconSetMeal;
declare const index_IconSettingsApplications: typeof IconSettingsApplications;
declare const index_IconSettingsBackupRestore: typeof IconSettingsBackupRestore;
declare const index_IconSettingsBluetooth: typeof IconSettingsBluetooth;
declare const index_IconSettingsBrightness: typeof IconSettingsBrightness;
declare const index_IconSettingsCell: typeof IconSettingsCell;
declare const index_IconSettingsEthernet: typeof IconSettingsEthernet;
declare const index_IconSettingsInputAntenna: typeof IconSettingsInputAntenna;
declare const index_IconSettingsInputComponent: typeof IconSettingsInputComponent;
declare const index_IconSettingsInputComposite: typeof IconSettingsInputComposite;
declare const index_IconSettingsInputHdmi: typeof IconSettingsInputHdmi;
declare const index_IconSettingsInputSvideo: typeof IconSettingsInputSvideo;
declare const index_IconSettingsOverscan: typeof IconSettingsOverscan;
declare const index_IconSettingsPhone: typeof IconSettingsPhone;
declare const index_IconSettingsPower: typeof IconSettingsPower;
declare const index_IconSettingsRemote: typeof IconSettingsRemote;
declare const index_IconSettingsSystemDaydream: typeof IconSettingsSystemDaydream;
declare const index_IconSettingsVoice: typeof IconSettingsVoice;
declare const index_IconSettings: typeof IconSettings;
declare const index_IconShare: typeof IconShare;
declare const index_IconShopTwo: typeof IconShopTwo;
declare const index_IconShop: typeof IconShop;
declare const index_IconShoppingBag: typeof IconShoppingBag;
declare const index_IconShoppingBasket: typeof IconShoppingBasket;
declare const index_IconShoppingCart: typeof IconShoppingCart;
declare const index_IconShortText: typeof IconShortText;
declare const index_IconShowChart: typeof IconShowChart;
declare const index_IconShuffle: typeof IconShuffle;
declare const index_IconShutterSpeed: typeof IconShutterSpeed;
declare const index_IconSick: typeof IconSick;
declare const index_IconSignalCellular_4Bar: typeof IconSignalCellular_4Bar;
declare const index_IconSignalCellularAlt: typeof IconSignalCellularAlt;
declare const index_IconSignalCellularConnectedNoInternet_4Bar: typeof IconSignalCellularConnectedNoInternet_4Bar;
declare const index_IconSignalCellularNoSim: typeof IconSignalCellularNoSim;
declare const index_IconSignalCellularNull: typeof IconSignalCellularNull;
declare const index_IconSignalCellularOff: typeof IconSignalCellularOff;
declare const index_IconSignalWifi_4BarLock: typeof IconSignalWifi_4BarLock;
declare const index_IconSignalWifi_4Bar: typeof IconSignalWifi_4Bar;
declare const index_IconSignalWifiOff: typeof IconSignalWifiOff;
declare const index_IconSimCard: typeof IconSimCard;
declare const index_IconSingleBed: typeof IconSingleBed;
declare const index_IconSkipNext: typeof IconSkipNext;
declare const index_IconSkipPrevious: typeof IconSkipPrevious;
declare const index_IconSlideshow: typeof IconSlideshow;
declare const index_IconSlowMotionVideo: typeof IconSlowMotionVideo;
declare const index_IconSmartButton: typeof IconSmartButton;
declare const index_IconSmartphone: typeof IconSmartphone;
declare const index_IconSmokeFree: typeof IconSmokeFree;
declare const index_IconSmokingRooms: typeof IconSmokingRooms;
declare const index_IconSmsFailed: typeof IconSmsFailed;
declare const index_IconSms: typeof IconSms;
declare const index_IconSnippetFolder: typeof IconSnippetFolder;
declare const index_IconSnooze: typeof IconSnooze;
declare const index_IconSoap: typeof IconSoap;
declare const index_IconSortByAlpha: typeof IconSortByAlpha;
declare const index_IconSort: typeof IconSort;
declare const index_IconSource: typeof IconSource;
declare const index_IconSouthEast: typeof IconSouthEast;
declare const index_IconSouthWest: typeof IconSouthWest;
declare const index_IconSouth: typeof IconSouth;
declare const index_IconSpa: typeof IconSpa;
declare const index_IconSpaceBar: typeof IconSpaceBar;
declare const index_IconSpeakerGroup: typeof IconSpeakerGroup;
declare const index_IconSpeakerNotesOff: typeof IconSpeakerNotesOff;
declare const index_IconSpeakerNotes: typeof IconSpeakerNotes;
declare const index_IconSpeakerPhone: typeof IconSpeakerPhone;
declare const index_IconSpeaker: typeof IconSpeaker;
declare const index_IconSpeed: typeof IconSpeed;
declare const index_IconSpellcheck: typeof IconSpellcheck;
declare const index_IconSportsBar: typeof IconSportsBar;
declare const index_IconSportsBaseball: typeof IconSportsBaseball;
declare const index_IconSportsBasketball: typeof IconSportsBasketball;
declare const index_IconSportsCricket: typeof IconSportsCricket;
declare const index_IconSportsEsports: typeof IconSportsEsports;
declare const index_IconSportsFootball: typeof IconSportsFootball;
declare const index_IconSportsGolf: typeof IconSportsGolf;
declare const index_IconSportsHandball: typeof IconSportsHandball;
declare const index_IconSportsHockey: typeof IconSportsHockey;
declare const index_IconSportsKabaddi: typeof IconSportsKabaddi;
declare const index_IconSportsMma: typeof IconSportsMma;
declare const index_IconSportsMotorsports: typeof IconSportsMotorsports;
declare const index_IconSportsRugby: typeof IconSportsRugby;
declare const index_IconSportsSoccer: typeof IconSportsSoccer;
declare const index_IconSportsTennis: typeof IconSportsTennis;
declare const index_IconSportsVolleyball: typeof IconSportsVolleyball;
declare const index_IconSports: typeof IconSports;
declare const index_IconSquareFoot: typeof IconSquareFoot;
declare const index_IconStackedLineChart: typeof IconStackedLineChart;
declare const index_IconStairs: typeof IconStairs;
declare const index_IconStarBorderPurple500: typeof IconStarBorderPurple500;
declare const index_IconStarBorder: typeof IconStarBorder;
declare const index_IconStarHalf: typeof IconStarHalf;
declare const index_IconStarOutline: typeof IconStarOutline;
declare const index_IconStarPurple500: typeof IconStarPurple500;
declare const index_IconStarRate: typeof IconStarRate;
declare const index_IconStar: typeof IconStar;
declare const index_IconStars: typeof IconStars;
declare const index_IconStayCurrentLandscape: typeof IconStayCurrentLandscape;
declare const index_IconStayCurrentPortrait: typeof IconStayCurrentPortrait;
declare const index_IconStayPrimaryLandscape: typeof IconStayPrimaryLandscape;
declare const index_IconStayPrimaryPortrait: typeof IconStayPrimaryPortrait;
declare const index_IconStickyNote_2: typeof IconStickyNote_2;
declare const index_IconStopCircle: typeof IconStopCircle;
declare const index_IconStopScreenShare: typeof IconStopScreenShare;
declare const index_IconStop: typeof IconStop;
declare const index_IconStorage: typeof IconStorage;
declare const index_IconStoreMallDirectory: typeof IconStoreMallDirectory;
declare const index_IconStore: typeof IconStore;
declare const index_IconStorefront: typeof IconStorefront;
declare const index_IconStraighten: typeof IconStraighten;
declare const index_IconStreetview: typeof IconStreetview;
declare const index_IconStrikethroughS: typeof IconStrikethroughS;
declare const index_IconStroller: typeof IconStroller;
declare const index_IconStyle: typeof IconStyle;
declare const index_IconSubdirectoryArrowLeft: typeof IconSubdirectoryArrowLeft;
declare const index_IconSubdirectoryArrowRight: typeof IconSubdirectoryArrowRight;
declare const index_IconSubject: typeof IconSubject;
declare const index_IconSubscript: typeof IconSubscript;
declare const index_IconSubscriptions: typeof IconSubscriptions;
declare const index_IconSubtitlesOff: typeof IconSubtitlesOff;
declare const index_IconSubtitles: typeof IconSubtitles;
declare const index_IconSubway: typeof IconSubway;
declare const index_IconSuperscript: typeof IconSuperscript;
declare const index_IconSupervisedUserCircle: typeof IconSupervisedUserCircle;
declare const index_IconSupervisorAccount: typeof IconSupervisorAccount;
declare const index_IconSupportAgent: typeof IconSupportAgent;
declare const index_IconSupport: typeof IconSupport;
declare const index_IconSurroundSound: typeof IconSurroundSound;
declare const index_IconSwapCalls: typeof IconSwapCalls;
declare const index_IconSwapHoriz: typeof IconSwapHoriz;
declare const index_IconSwapHorizontalCircle: typeof IconSwapHorizontalCircle;
declare const index_IconSwapVert: typeof IconSwapVert;
declare const index_IconSwapVerticalCircle: typeof IconSwapVerticalCircle;
declare const index_IconSwitchCamera: typeof IconSwitchCamera;
declare const index_IconSwitchLeft: typeof IconSwitchLeft;
declare const index_IconSwitchRight: typeof IconSwitchRight;
declare const index_IconSwitchVideo: typeof IconSwitchVideo;
declare const index_IconSyncAlt: typeof IconSyncAlt;
declare const index_IconSyncDisabled: typeof IconSyncDisabled;
declare const index_IconSyncProblem: typeof IconSyncProblem;
declare const index_IconSync: typeof IconSync;
declare const index_IconSystemUpdateAlt: typeof IconSystemUpdateAlt;
declare const index_IconSystemUpdate: typeof IconSystemUpdate;
declare const index_IconTabUnselected: typeof IconTabUnselected;
declare const index_IconTab: typeof IconTab;
declare const index_IconTableChart: typeof IconTableChart;
declare const index_IconTableRows: typeof IconTableRows;
declare const index_IconTableView: typeof IconTableView;
declare const index_IconTabletAndroid: typeof IconTabletAndroid;
declare const index_IconTabletMac: typeof IconTabletMac;
declare const index_IconTablet: typeof IconTablet;
declare const index_IconTagFaces: typeof IconTagFaces;
declare const index_IconTapAndPlay: typeof IconTapAndPlay;
declare const index_IconTapas: typeof IconTapas;
declare const index_IconTerrain: typeof IconTerrain;
declare const index_IconTextFields: typeof IconTextFields;
declare const index_IconTextFormat: typeof IconTextFormat;
declare const index_IconTextRotateUp: typeof IconTextRotateUp;
declare const index_IconTextRotateVertical: typeof IconTextRotateVertical;
declare const index_IconTextRotationAngledown: typeof IconTextRotationAngledown;
declare const index_IconTextRotationAngleup: typeof IconTextRotationAngleup;
declare const index_IconTextRotationDown: typeof IconTextRotationDown;
declare const index_IconTextRotationNone: typeof IconTextRotationNone;
declare const index_IconTextSnippet: typeof IconTextSnippet;
declare const index_IconTextsms: typeof IconTextsms;
declare const index_IconTexture: typeof IconTexture;
declare const index_IconTheaters: typeof IconTheaters;
declare const index_IconThermostat: typeof IconThermostat;
declare const index_IconThumbDownAlt: typeof IconThumbDownAlt;
declare const index_IconThumbDown: typeof IconThumbDown;
declare const index_IconThumbUpAlt: typeof IconThumbUpAlt;
declare const index_IconThumbUp: typeof IconThumbUp;
declare const index_IconThumbsUpDown: typeof IconThumbsUpDown;
declare const index_IconTimeToLeave: typeof IconTimeToLeave;
declare const index_IconTimelapse: typeof IconTimelapse;
declare const index_IconTimeline: typeof IconTimeline;
declare const index_IconTimer_10: typeof IconTimer_10;
declare const index_IconTimer_3: typeof IconTimer_3;
declare const index_IconTimerOff: typeof IconTimerOff;
declare const index_IconTimer: typeof IconTimer;
declare const index_IconTitle: typeof IconTitle;
declare const index_IconToc: typeof IconToc;
declare const index_IconToday: typeof IconToday;
declare const index_IconToggleOff: typeof IconToggleOff;
declare const index_IconToggleOn: typeof IconToggleOn;
declare const index_IconToll: typeof IconToll;
declare const index_IconTonality: typeof IconTonality;
declare const index_IconTopic: typeof IconTopic;
declare const index_IconTouchApp: typeof IconTouchApp;
declare const index_IconTour: typeof IconTour;
declare const index_IconToys: typeof IconToys;
declare const index_IconTrackChanges: typeof IconTrackChanges;
declare const index_IconTraffic: typeof IconTraffic;
declare const index_IconTrain: typeof IconTrain;
declare const index_IconTram: typeof IconTram;
declare const index_IconTransferWithinAStation: typeof IconTransferWithinAStation;
declare const index_IconTransform: typeof IconTransform;
declare const index_IconTransitEnterexit: typeof IconTransitEnterexit;
declare const index_IconTranslate: typeof IconTranslate;
declare const index_IconTrendingDown: typeof IconTrendingDown;
declare const index_IconTrendingFlat: typeof IconTrendingFlat;
declare const index_IconTrendingUp: typeof IconTrendingUp;
declare const index_IconTripOrigin: typeof IconTripOrigin;
declare const index_IconTty: typeof IconTty;
declare const index_IconTune: typeof IconTune;
declare const index_IconTurnedInNot: typeof IconTurnedInNot;
declare const index_IconTurnedIn: typeof IconTurnedIn;
declare const index_IconTvOff: typeof IconTvOff;
declare const index_IconTv: typeof IconTv;
declare const index_IconTwoWheeler: typeof IconTwoWheeler;
declare const index_IconUmbrella: typeof IconUmbrella;
declare const index_IconUnarchive: typeof IconUnarchive;
declare const index_IconUndo: typeof IconUndo;
declare const index_IconUnfoldLess: typeof IconUnfoldLess;
declare const index_IconUnfoldMore: typeof IconUnfoldMore;
declare const index_IconUnpublished: typeof IconUnpublished;
declare const index_IconUnsubscribe: typeof IconUnsubscribe;
declare const index_IconUpdate: typeof IconUpdate;
declare const index_IconUpgrade: typeof IconUpgrade;
declare const index_IconUpload: typeof IconUpload;
declare const index_IconUsb: typeof IconUsb;
declare const index_IconVerifiedUser: typeof IconVerifiedUser;
declare const index_IconVerified: typeof IconVerified;
declare const index_IconVerticalAlignBottom: typeof IconVerticalAlignBottom;
declare const index_IconVerticalAlignCenter: typeof IconVerticalAlignCenter;
declare const index_IconVerticalAlignTop: typeof IconVerticalAlignTop;
declare const index_IconVerticalSplit: typeof IconVerticalSplit;
declare const index_IconVibration: typeof IconVibration;
declare const index_IconVideoCall: typeof IconVideoCall;
declare const index_IconVideoLabel: typeof IconVideoLabel;
declare const index_IconVideoLibrary: typeof IconVideoLibrary;
declare const index_IconVideoSettings: typeof IconVideoSettings;
declare const index_IconVideocamOff: typeof IconVideocamOff;
declare const index_IconVideocam: typeof IconVideocam;
declare const index_IconVideogameAsset: typeof IconVideogameAsset;
declare const index_IconViewAgenda: typeof IconViewAgenda;
declare const index_IconViewArray: typeof IconViewArray;
declare const index_IconViewCarousel: typeof IconViewCarousel;
declare const index_IconViewColumn: typeof IconViewColumn;
declare const index_IconViewComfy: typeof IconViewComfy;
declare const index_IconViewCompact: typeof IconViewCompact;
declare const index_IconViewDay: typeof IconViewDay;
declare const index_IconViewHeadline: typeof IconViewHeadline;
declare const index_IconViewList: typeof IconViewList;
declare const index_IconViewModule: typeof IconViewModule;
declare const index_IconViewQuilt: typeof IconViewQuilt;
declare const index_IconViewSidebar: typeof IconViewSidebar;
declare const index_IconViewStream: typeof IconViewStream;
declare const index_IconViewWeek: typeof IconViewWeek;
declare const index_IconVignette: typeof IconVignette;
declare const index_IconVisibilityOff: typeof IconVisibilityOff;
declare const index_IconVisibility: typeof IconVisibility;
declare const index_IconVoiceChat: typeof IconVoiceChat;
declare const index_IconVoiceOverOff: typeof IconVoiceOverOff;
declare const index_IconVoicemail: typeof IconVoicemail;
declare const index_IconVolumeDown: typeof IconVolumeDown;
declare const index_IconVolumeMute: typeof IconVolumeMute;
declare const index_IconVolumeOff: typeof IconVolumeOff;
declare const index_IconVolumeUp: typeof IconVolumeUp;
declare const index_IconVpnKey: typeof IconVpnKey;
declare const index_IconVpnLock: typeof IconVpnLock;
declare const index_IconWallpaper: typeof IconWallpaper;
declare const index_IconWarningAmber: typeof IconWarningAmber;
declare const index_IconWarning: typeof IconWarning;
declare const index_IconWash: typeof IconWash;
declare const index_IconWatchLater: typeof IconWatchLater;
declare const index_IconWatch: typeof IconWatch;
declare const index_IconWaterDamage: typeof IconWaterDamage;
declare const index_IconWaves: typeof IconWaves;
declare const index_IconWbAuto: typeof IconWbAuto;
declare const index_IconWbCloudy: typeof IconWbCloudy;
declare const index_IconWbIncandescent: typeof IconWbIncandescent;
declare const index_IconWbIridescent: typeof IconWbIridescent;
declare const index_IconWbSunny: typeof IconWbSunny;
declare const index_IconWc: typeof IconWc;
declare const index_IconWebAsset: typeof IconWebAsset;
declare const index_IconWeb: typeof IconWeb;
declare const index_IconWeekend: typeof IconWeekend;
declare const index_IconWest: typeof IconWest;
declare const index_IconWhatshot: typeof IconWhatshot;
declare const index_IconWheelchairPickup: typeof IconWheelchairPickup;
declare const index_IconWhereToVote: typeof IconWhereToVote;
declare const index_IconWidgets: typeof IconWidgets;
declare const index_IconWifiCalling: typeof IconWifiCalling;
declare const index_IconWifiLock: typeof IconWifiLock;
declare const index_IconWifiOff: typeof IconWifiOff;
declare const index_IconWifiProtectedSetup: typeof IconWifiProtectedSetup;
declare const index_IconWifiTethering: typeof IconWifiTethering;
declare const index_IconWifi: typeof IconWifi;
declare const index_IconWineBar: typeof IconWineBar;
declare const index_IconWorkOff: typeof IconWorkOff;
declare const index_IconWorkOutline: typeof IconWorkOutline;
declare const index_IconWork: typeof IconWork;
declare const index_IconWrapText: typeof IconWrapText;
declare const index_IconWrongLocation: typeof IconWrongLocation;
declare const index_IconWysiwyg: typeof IconWysiwyg;
declare const index_IconYoutubeSearchedFor: typeof IconYoutubeSearchedFor;
declare const index_IconZoomIn: typeof IconZoomIn;
declare const index_IconZoomOutMap: typeof IconZoomOutMap;
declare const index_IconZoomOut: typeof IconZoomOut;
declare const index_Table: typeof Table;
declare const index_TableBody: typeof TableBody;
declare const index_TableCell: typeof TableCell;
declare const index_TableFoot: typeof TableFoot;
declare const index_TableHead: typeof TableHead;
declare const index_TableRow: typeof TableRow;
declare const index_usePagination: typeof usePagination;
type index_ComponentClassNames = ComponentClassNames;
declare const index_ComponentClassNames: typeof ComponentClassNames;
declare const index_SharedText: typeof SharedText;
type index_AlertVariations = AlertVariations;
type index_AlertProps = AlertProps;
type index_BadgeVariations = BadgeVariations;
type index_BadgeSizes = BadgeSizes;
type index_BadgeProps = BadgeProps;
type index_BaseComponentProps = BaseComponentProps;
type index_AriaProps = AriaProps;
type index_Sizes = Sizes;
type index_ButtonSizes = ButtonSizes;
type index_ButtonTypes = ButtonTypes;
type index_ButtonVariations = ButtonVariations;
type index_ButtonProps = ButtonProps;
type index_ButtonGroupProps = ButtonGroupProps;
type index_CardVariations = CardVariations;
type index_CardProps = CardProps;
type index_CheckboxFieldProps = CheckboxFieldProps;
type index_CollectionType = CollectionType;
type index_CollectionWrapperProps = CollectionWrapperProps;
type index_CollectionBaseProps<_0> = CollectionBaseProps<_0>;
type index_ListCollectionProps<_0> = ListCollectionProps<_0>;
type index_GridCollectionProps<_0> = GridCollectionProps<_0>;
type index_CollectionProps<_0> = CollectionProps<_0>;
declare const index_DataStoreItemProps: typeof DataStoreItemProps;
declare const index_DataStoreCollectionProps: typeof DataStoreCollectionProps;
declare const index_DataStoreItemResult: typeof DataStoreItemResult;
declare const index_DataStoreCollectionResult: typeof DataStoreCollectionResult;
declare const index_DataStoreBindingProps: typeof DataStoreBindingProps;
declare const index_DataStorePredicateObject: typeof DataStorePredicateObject;
type index_DividerOrientations = DividerOrientations;
type index_DividerSizes = DividerSizes;
type index_DividerOptions = DividerOptions;
type index_DividerProps = DividerProps;
type index_ExpanderProps = ExpanderProps;
type index_ExpanderItemProps = ExpanderItemProps;
type index_FieldProps = FieldProps;
type index_FieldClearButtonProps = FieldClearButtonProps;
type index_FieldDescriptionProps = FieldDescriptionProps;
type index_FieldErrorMessageProps = FieldErrorMessageProps;
type index_FieldVariations = FieldVariations;
type index_FieldGroupOrientation = FieldGroupOrientation;
type index_FieldGroupOptions = FieldGroupOptions;
type index_FieldGroupIconProps = FieldGroupIconProps;
type index_FieldGroupIconButtonProps = FieldGroupIconButtonProps;
type index_FlexContainerStyleProps = FlexContainerStyleProps;
type index_FlexProps = FlexProps;
type index_FlexItemStyleProps = FlexItemStyleProps;
type index_HeadingLevel = HeadingLevel;
type index_HeadingProps = HeadingProps;
type index_ViewBox = ViewBox;
type index_IconSize = IconSize;
type index_IconProps = IconProps;
type index_InputMode = InputMode;
type index_InputSizes = InputSizes;
type index_InputProps = InputProps;
type index_ImageStyleProps = ImageStyleProps;
type index_ImageOptions = ImageOptions;
type index_ImageProps = ImageProps;
type index_LabelProps = LabelProps;
type index_LinkOptions = LinkOptions;
type index_LinkProps = LinkProps;
type index_LoaderSizes = LoaderSizes;
type index_LoaderVariations = LoaderVariations;
type index_LoaderProps = LoaderProps;
type index_MenuProps = MenuProps;
type index_MenuItemProps = MenuItemProps;
type index_PaginationItemType = PaginationItemType;
type index_PaginationCallbackType = PaginationCallbackType;
type index_PaginationProps = PaginationProps;
type index_UsePaginationProps = UsePaginationProps;
type index_UsePaginationResult = UsePaginationResult;
type index_PaginationItemProps = PaginationItemProps;
type index_PasswordFieldProps = PasswordFieldProps;
type index_PasswordFieldType = PasswordFieldType;
type index_ShowPasswordButtonProps = ShowPasswordButtonProps;
type index_PhoneNumberFieldProps = PhoneNumberFieldProps;
type index_CountryCodeSelectProps = CountryCodeSelectProps;
type index_PlaceholderSizes = PlaceholderSizes;
type index_PlaceholderProps = PlaceholderProps;
type index_RadioProps = RadioProps;
type index_RadioGroupFieldProps = RadioGroupFieldProps;
type index_RatingSizes = RatingSizes;
type index_RatingOptions = RatingOptions;
type index_RatingProps = RatingProps;
type index_ScrollViewProps = ScrollViewProps;
type index_SearchFieldProps = SearchFieldProps;
type index_SearchFieldButtonProps = SearchFieldButtonProps;
type index_SelectFieldProps = SelectFieldProps;
type index_SliderFieldProps = SliderFieldProps;
type index_StepperFieldProps = StepperFieldProps;
type index_StyleProp<_0> = StyleProp<_0>;
type index_ResponsiveObject<_0> = ResponsiveObject<_0>;
type index_ResponsiveStyle<_0> = ResponsiveStyle<_0>;
type index_BaseStyleProps = BaseStyleProps;
type index_CSSLayoutStyleProps = CSSLayoutStyleProps;
type index_AllStyleProps = AllStyleProps;
type index_ComponentPropToStyleProp = ComponentPropToStyleProp;
declare const index_ComponentPropsToStylePropsMap: typeof ComponentPropsToStylePropsMap;
declare const index_ComponentPropsToStylePropsMapKeys: typeof ComponentPropsToStylePropsMapKeys;
type index_labelPositions = labelPositions;
type index_SwitchFieldProps = SwitchFieldProps;
type index_TableSize = TableSize;
type index_TableVariation = TableVariation;
type index_TableProps = TableProps;
type index_TableBodyProps = TableBodyProps;
type index_TableCellElement = TableCellElement;
type index_TableCellProps = TableCellProps;
type index_TableFootProps = TableFootProps;
type index_TableHeadProps = TableHeadProps;
type index_TableRowProps = TableRowProps;
type index_TabsSpacing = TabsSpacing;
type index_TabsProps = TabsProps;
type index_TabItemProps = TabItemProps;
type index_TextVariation = TextVariation;
type index_TextProps = TextProps;
type index_TextAreaStyleProps = TextAreaStyleProps;
type index_TextAreaProps = TextAreaProps;
type index_TextFieldOptions = TextFieldOptions;
type index_TextInputFieldProps = TextInputFieldProps;
type index_TextAreaFieldProps = TextAreaFieldProps;
type index_TextFieldProps<_0> = TextFieldProps<_0>;
type index_ToggleButtonProps = ToggleButtonProps;
type index_ToggleButtonGroupProps = ToggleButtonGroupProps;
type index_ElementType = ElementType;
type index_HTMLElementType<_0> = HTMLElementType<_0>;
type index_ElementProps<_0> = ElementProps<_0>;
type index_PrimitiveProps<_0, _1> = PrimitiveProps<_0, _1>;
type index_PrimitivePropsWithRef<_0, _1> = PrimitivePropsWithRef<_0, _1>;
type index_Primitive<_0, _1> = Primitive<_0, _1>;
type index_PrimitiveWithForwardRef<_0, _1> = PrimitiveWithForwardRef<_0, _1>;
type index_ViewProps = ViewProps;
type index_VisuallyHiddenProps = VisuallyHiddenProps;
type index_GridSpanType = GridSpanType;
type index_GridContainerStyleProps = GridContainerStyleProps;
type index_GridItemStyleProps = GridItemStyleProps;
type index_GridProps = GridProps;
declare namespace index {
  export {
    index_Alert as Alert,
    index_Badge as Badge,
    index_Button as Button,
    index_ButtonGroup as ButtonGroup,
    index_Card as Card,
    index_CheckboxField as CheckboxField,
    index_Collection as Collection,
    index_Divider as Divider,
    index_Expander as Expander,
    index_ExpanderItem as ExpanderItem,
    index_FieldGroupIcon as FieldGroupIcon,
    index_FieldGroupIconButton as FieldGroupIconButton,
    index_Flex as Flex,
    index_Grid as Grid,
    index_Heading as Heading,
    index_Icon as Icon,
    index_Image as Image,
    index_Link as Link,
    index_Loader as Loader,
    index_Menu as Menu,
    index_MenuButton as MenuButton,
    index_MenuItem as MenuItem,
    index_Pagination as Pagination,
    index_PasswordField as PasswordField,
    index_PhoneNumberField as PhoneNumberField,
    index_Placeholder as Placeholder,
    index_Radio as Radio,
    index_RadioGroupField as RadioGroupField,
    index_Rating as Rating,
    index_ScrollView as ScrollView,
    index_SearchField as SearchField,
    index_SelectField as SelectField,
    index_SliderField as SliderField,
    index_StepperField as StepperField,
    index_SwitchField as SwitchField,
    index_Tabs as Tabs,
    index_TabItem as TabItem,
    index_Text as Text,
    index_TextField as TextField,
    index_ToggleButton as ToggleButton,
    index_ToggleButtonGroup as ToggleButtonGroup,
    index_View as View,
    index_VisuallyHidden as VisuallyHidden,
    index_Icon360 as Icon360,
    index_Icon3dRotation as Icon3dRotation,
    index_Icon4k as Icon4k,
    index_Icon5g as Icon5g,
    index_Icon6FtApart as Icon6FtApart,
    index_IconAcUnit as IconAcUnit,
    index_IconAccessAlarm as IconAccessAlarm,
    index_IconAccessAlarms as IconAccessAlarms,
    index_IconAccessTime as IconAccessTime,
    index_IconAccessibilityNew as IconAccessibilityNew,
    index_IconAccessibility as IconAccessibility,
    index_IconAccessibleForward as IconAccessibleForward,
    index_IconAccessible as IconAccessible,
    index_IconAccountBalanceWallet as IconAccountBalanceWallet,
    index_IconAccountBalance as IconAccountBalance,
    index_IconAccountBox as IconAccountBox,
    index_IconAccountCircle as IconAccountCircle,
    index_IconAccountTree as IconAccountTree,
    index_IconAdUnits as IconAdUnits,
    index_IconAdb as IconAdb,
    index_IconAddAPhoto as IconAddAPhoto,
    index_IconAddAlarm as IconAddAlarm,
    index_IconAddAlert as IconAddAlert,
    index_IconAddBox as IconAddBox,
    index_IconAddBusiness as IconAddBusiness,
    index_IconAddCircleOutline as IconAddCircleOutline,
    index_IconAddCircle as IconAddCircle,
    index_IconAddComment as IconAddComment,
    index_IconAddIcCall as IconAddIcCall,
    index_IconAddLocationAlt as IconAddLocationAlt,
    index_IconAddLocation as IconAddLocation,
    index_IconAddPhotoAlternate as IconAddPhotoAlternate,
    index_IconAddRoad as IconAddRoad,
    index_IconAddShoppingCart as IconAddShoppingCart,
    index_IconAddTask as IconAddTask,
    index_IconAddToHomeScreen as IconAddToHomeScreen,
    index_IconAddToPhotos as IconAddToPhotos,
    index_IconAddToQueue as IconAddToQueue,
    index_IconAdd as IconAdd,
    index_IconAddchart as IconAddchart,
    index_IconAdjust as IconAdjust,
    index_IconAdminPanelSettings as IconAdminPanelSettings,
    index_IconAgriculture as IconAgriculture,
    index_IconAirlineSeatFlatAngled as IconAirlineSeatFlatAngled,
    index_IconAirlineSeatFlat as IconAirlineSeatFlat,
    index_IconAirlineSeatIndividualSuite as IconAirlineSeatIndividualSuite,
    index_IconAirlineSeatLegroomExtra as IconAirlineSeatLegroomExtra,
    index_IconAirlineSeatLegroomNormal as IconAirlineSeatLegroomNormal,
    index_IconAirlineSeatLegroomReduced as IconAirlineSeatLegroomReduced,
    index_IconAirlineSeatReclineExtra as IconAirlineSeatReclineExtra,
    index_IconAirlineSeatReclineNormal as IconAirlineSeatReclineNormal,
    index_IconAirplanemodeActive as IconAirplanemodeActive,
    index_IconAirplanemodeInactive as IconAirplanemodeInactive,
    index_IconAirplay as IconAirplay,
    index_IconAirportShuttle as IconAirportShuttle,
    index_IconAlarmAdd as IconAlarmAdd,
    index_IconAlarmOff as IconAlarmOff,
    index_IconAlarmOn as IconAlarmOn,
    index_IconAlarm as IconAlarm,
    index_IconAlbum as IconAlbum,
    index_IconAllInbox as IconAllInbox,
    index_IconAllInclusive as IconAllInclusive,
    index_IconAllOut as IconAllOut,
    index_IconAltRoute as IconAltRoute,
    index_IconAlternateEmail as IconAlternateEmail,
    index_IconAmpStories as IconAmpStories,
    index_IconAnalytics as IconAnalytics,
    index_IconAnchor as IconAnchor,
    index_IconAndroid as IconAndroid,
    index_IconAnnouncement as IconAnnouncement,
    index_IconApartment as IconApartment,
    index_IconApi as IconApi,
    index_IconAppBlocking as IconAppBlocking,
    index_IconAppSettingsAlt as IconAppSettingsAlt,
    index_IconApps as IconApps,
    index_IconArchitecture as IconArchitecture,
    index_IconArchive as IconArchive,
    index_IconArrowBackIos as IconArrowBackIos,
    index_IconArrowBack as IconArrowBack,
    index_IconArrowCircleDown as IconArrowCircleDown,
    index_IconArrowCircleUp as IconArrowCircleUp,
    index_IconArrowDownward as IconArrowDownward,
    index_IconArrowDropDownCircle as IconArrowDropDownCircle,
    index_IconArrowDropDown as IconArrowDropDown,
    index_IconArrowDropUp as IconArrowDropUp,
    index_IconArrowForwardIos as IconArrowForwardIos,
    index_IconArrowForward as IconArrowForward,
    index_IconArrowLeft as IconArrowLeft,
    index_IconArrowRightAlt as IconArrowRightAlt,
    index_IconArrowRight as IconArrowRight,
    index_IconArrowUpward as IconArrowUpward,
    index_IconArtTrack as IconArtTrack,
    index_IconArticle as IconArticle,
    index_IconAspectRatio as IconAspectRatio,
    index_IconAssessment as IconAssessment,
    index_IconAssignmentInd as IconAssignmentInd,
    index_IconAssignmentLate as IconAssignmentLate,
    index_IconAssignmentReturn as IconAssignmentReturn,
    index_IconAssignmentReturned as IconAssignmentReturned,
    index_IconAssignmentTurnedIn as IconAssignmentTurnedIn,
    index_IconAssignment as IconAssignment,
    index_IconAssistantPhoto as IconAssistantPhoto,
    index_IconAssistant as IconAssistant,
    index_IconAtm as IconAtm,
    index_IconAttachEmail as IconAttachEmail,
    index_IconAttachFile as IconAttachFile,
    index_IconAttachMoney as IconAttachMoney,
    index_IconAttachment as IconAttachment,
    index_IconAttribution as IconAttribution,
    index_IconAudiotrack as IconAudiotrack,
    index_IconAutoDelete as IconAutoDelete,
    index_IconAutorenew as IconAutorenew,
    index_IconAvTimer as IconAvTimer,
    index_IconBabyChangingStation as IconBabyChangingStation,
    index_IconBackpack as IconBackpack,
    index_IconBackspace as IconBackspace,
    index_IconBackupTable as IconBackupTable,
    index_IconBackup as IconBackup,
    index_IconBallot as IconBallot,
    index_IconBarChart as IconBarChart,
    index_IconBatchPrediction as IconBatchPrediction,
    index_IconBathtub as IconBathtub,
    index_IconBatteryAlert as IconBatteryAlert,
    index_IconBatteryChargingFull as IconBatteryChargingFull,
    index_IconBatteryFull as IconBatteryFull,
    index_IconBatteryStd as IconBatteryStd,
    index_IconBatteryUnknown as IconBatteryUnknown,
    index_IconBeachAccess as IconBeachAccess,
    index_IconBedtime as IconBedtime,
    index_IconBeenhere as IconBeenhere,
    index_IconBento as IconBento,
    index_IconBikeScooter as IconBikeScooter,
    index_IconBiotech as IconBiotech,
    index_IconBlock as IconBlock,
    index_IconBluetoothAudio as IconBluetoothAudio,
    index_IconBluetoothConnected as IconBluetoothConnected,
    index_IconBluetoothDisabled as IconBluetoothDisabled,
    index_IconBluetoothSearching as IconBluetoothSearching,
    index_IconBluetooth as IconBluetooth,
    index_IconBlurCircular as IconBlurCircular,
    index_IconBlurLinear as IconBlurLinear,
    index_IconBlurOff as IconBlurOff,
    index_IconBlurOn as IconBlurOn,
    index_IconBookOnline as IconBookOnline,
    index_IconBook as IconBook,
    index_IconBookmarkBorder as IconBookmarkBorder,
    index_IconBookmark as IconBookmark,
    index_IconBookmarks as IconBookmarks,
    index_IconBorderAll as IconBorderAll,
    index_IconBorderBottom as IconBorderBottom,
    index_IconBorderClear as IconBorderClear,
    index_IconBorderHorizontal as IconBorderHorizontal,
    index_IconBorderInner as IconBorderInner,
    index_IconBorderLeft as IconBorderLeft,
    index_IconBorderOuter as IconBorderOuter,
    index_IconBorderRight as IconBorderRight,
    index_IconBorderStyle as IconBorderStyle,
    index_IconBorderTop as IconBorderTop,
    index_IconBorderVertical as IconBorderVertical,
    index_IconBrandingWatermark as IconBrandingWatermark,
    index_IconBrightness_1 as IconBrightness_1,
    index_IconBrightness_2 as IconBrightness_2,
    index_IconBrightness_3 as IconBrightness_3,
    index_IconBrightness_4 as IconBrightness_4,
    index_IconBrightness_5 as IconBrightness_5,
    index_IconBrightness_6 as IconBrightness_6,
    index_IconBrightness_7 as IconBrightness_7,
    index_IconBrightnessAuto as IconBrightnessAuto,
    index_IconBrightnessHigh as IconBrightnessHigh,
    index_IconBrightnessLow as IconBrightnessLow,
    index_IconBrightnessMedium as IconBrightnessMedium,
    index_IconBrokenImage as IconBrokenImage,
    index_IconBrowserNotSupported as IconBrowserNotSupported,
    index_IconBrush as IconBrush,
    index_IconBubbleChart as IconBubbleChart,
    index_IconBugReport as IconBugReport,
    index_IconBuildCircle as IconBuildCircle,
    index_IconBuild as IconBuild,
    index_IconBurstMode as IconBurstMode,
    index_IconBusinessCenter as IconBusinessCenter,
    index_IconBusiness as IconBusiness,
    index_IconCached as IconCached,
    index_IconCake as IconCake,
    index_IconCalculate as IconCalculate,
    index_IconCalendarToday as IconCalendarToday,
    index_IconCalendarViewDay as IconCalendarViewDay,
    index_IconCallEnd as IconCallEnd,
    index_IconCallMade as IconCallMade,
    index_IconCallMerge as IconCallMerge,
    index_IconCallMissedOutgoing as IconCallMissedOutgoing,
    index_IconCallMissed as IconCallMissed,
    index_IconCallReceived as IconCallReceived,
    index_IconCallSplit as IconCallSplit,
    index_IconCallToAction as IconCallToAction,
    index_IconCall as IconCall,
    index_IconCameraAlt as IconCameraAlt,
    index_IconCameraEnhance as IconCameraEnhance,
    index_IconCameraFront as IconCameraFront,
    index_IconCameraRear as IconCameraRear,
    index_IconCameraRoll as IconCameraRoll,
    index_IconCamera as IconCamera,
    index_IconCampaign as IconCampaign,
    index_IconCancelPresentation as IconCancelPresentation,
    index_IconCancelScheduleSend as IconCancelScheduleSend,
    index_IconCancel as IconCancel,
    index_IconCardGiftcard as IconCardGiftcard,
    index_IconCardMembership as IconCardMembership,
    index_IconCardTravel as IconCardTravel,
    index_IconCarpenter as IconCarpenter,
    index_IconCasino as IconCasino,
    index_IconCastConnected as IconCastConnected,
    index_IconCastForEducation as IconCastForEducation,
    index_IconCast as IconCast,
    index_IconCategory as IconCategory,
    index_IconCenterFocusStrong as IconCenterFocusStrong,
    index_IconCenterFocusWeak as IconCenterFocusWeak,
    index_IconChangeHistory as IconChangeHistory,
    index_IconChargingStation as IconChargingStation,
    index_IconChatBubbleOutline as IconChatBubbleOutline,
    index_IconChatBubble as IconChatBubble,
    index_IconChat as IconChat,
    index_IconCheckBoxOutlineBlank as IconCheckBoxOutlineBlank,
    index_IconCheckBox as IconCheckBox,
    index_IconCheckCircleOutline as IconCheckCircleOutline,
    index_IconCheckCircle as IconCheckCircle,
    index_IconCheck as IconCheck,
    index_IconCheckroom as IconCheckroom,
    index_IconChevronLeft as IconChevronLeft,
    index_IconChevronRight as IconChevronRight,
    index_IconChildCare as IconChildCare,
    index_IconChildFriendly as IconChildFriendly,
    index_IconChromeReaderMode as IconChromeReaderMode,
    index_IconClass as IconClass,
    index_IconCleanHands as IconCleanHands,
    index_IconCleaningServices as IconCleaningServices,
    index_IconClearAll as IconClearAll,
    index_IconClear as IconClear,
    index_IconCloseFullscreen as IconCloseFullscreen,
    index_IconClose as IconClose,
    index_IconClosedCaptionDisabled as IconClosedCaptionDisabled,
    index_IconClosedCaption as IconClosedCaption,
    index_IconCloudCircle as IconCloudCircle,
    index_IconCloudDone as IconCloudDone,
    index_IconCloudDownload as IconCloudDownload,
    index_IconCloudOff as IconCloudOff,
    index_IconCloudQueue as IconCloudQueue,
    index_IconCloudUpload as IconCloudUpload,
    index_IconCloud as IconCloud,
    index_IconCode as IconCode,
    index_IconCollectionsBookmark as IconCollectionsBookmark,
    index_IconCollections as IconCollections,
    index_IconColorLens as IconColorLens,
    index_IconColorize as IconColorize,
    index_IconCommentBank as IconCommentBank,
    index_IconComment as IconComment,
    index_IconCommute as IconCommute,
    index_IconCompareArrows as IconCompareArrows,
    index_IconCompare as IconCompare,
    index_IconCompassCalibration as IconCompassCalibration,
    index_IconComputer as IconComputer,
    index_IconConfirmationNumber as IconConfirmationNumber,
    index_IconConnectWithoutContact as IconConnectWithoutContact,
    index_IconConstruction as IconConstruction,
    index_IconContactMail as IconContactMail,
    index_IconContactPage as IconContactPage,
    index_IconContactPhone as IconContactPhone,
    index_IconContactSupport as IconContactSupport,
    index_IconContactless as IconContactless,
    index_IconContacts as IconContacts,
    index_IconContentCopy as IconContentCopy,
    index_IconContentCut as IconContentCut,
    index_IconContentPaste as IconContentPaste,
    index_IconControlCamera as IconControlCamera,
    index_IconControlPointDuplicate as IconControlPointDuplicate,
    index_IconControlPoint as IconControlPoint,
    index_IconCopyright as IconCopyright,
    index_IconCoronavirus as IconCoronavirus,
    index_IconCorporateFare as IconCorporateFare,
    index_IconCountertops as IconCountertops,
    index_IconCreateNewFolder as IconCreateNewFolder,
    index_IconCreate as IconCreate,
    index_IconCreditCard as IconCreditCard,
    index_IconCrop_16_9 as IconCrop_16_9,
    index_IconCrop_3_2 as IconCrop_3_2,
    index_IconCrop_5_4 as IconCrop_5_4,
    index_IconCrop_7_5 as IconCrop_7_5,
    index_IconCropDin as IconCropDin,
    index_IconCropFree as IconCropFree,
    index_IconCropLandscape as IconCropLandscape,
    index_IconCropOriginal as IconCropOriginal,
    index_IconCropPortrait as IconCropPortrait,
    index_IconCropRotate as IconCropRotate,
    index_IconCropSquare as IconCropSquare,
    index_IconCrop as IconCrop,
    index_IconDashboard as IconDashboard,
    index_IconDataUsage as IconDataUsage,
    index_IconDateRange as IconDateRange,
    index_IconDeck as IconDeck,
    index_IconDehaze as IconDehaze,
    index_IconDeleteForever as IconDeleteForever,
    index_IconDeleteOutline as IconDeleteOutline,
    index_IconDeleteSweep as IconDeleteSweep,
    index_IconDelete as IconDelete,
    index_IconDepartureBoard as IconDepartureBoard,
    index_IconDescription as IconDescription,
    index_IconDesignServices as IconDesignServices,
    index_IconDesktopAccessDisabled as IconDesktopAccessDisabled,
    index_IconDesktopMac as IconDesktopMac,
    index_IconDesktopWindows as IconDesktopWindows,
    index_IconDetails as IconDetails,
    index_IconDeveloperBoard as IconDeveloperBoard,
    index_IconDeveloperMode as IconDeveloperMode,
    index_IconDeviceHub as IconDeviceHub,
    index_IconDeviceUnknown as IconDeviceUnknown,
    index_IconDevicesOther as IconDevicesOther,
    index_IconDevices as IconDevices,
    index_IconDialerSip as IconDialerSip,
    index_IconDialpad as IconDialpad,
    index_IconDirectionsBike as IconDirectionsBike,
    index_IconDirectionsBoat as IconDirectionsBoat,
    index_IconDirectionsBus as IconDirectionsBus,
    index_IconDirectionsCar as IconDirectionsCar,
    index_IconDirectionsOff as IconDirectionsOff,
    index_IconDirectionsRailway as IconDirectionsRailway,
    index_IconDirectionsRun as IconDirectionsRun,
    index_IconDirectionsSubway as IconDirectionsSubway,
    index_IconDirectionsTransit as IconDirectionsTransit,
    index_IconDirectionsWalk as IconDirectionsWalk,
    index_IconDirections as IconDirections,
    index_IconDisabledByDefault as IconDisabledByDefault,
    index_IconDiscFull as IconDiscFull,
    index_IconDns as IconDns,
    index_IconDoDisturbAlt as IconDoDisturbAlt,
    index_IconDoDisturbOff as IconDoDisturbOff,
    index_IconDoDisturbOn as IconDoDisturbOn,
    index_IconDoDisturb as IconDoDisturb,
    index_IconDoNotStep as IconDoNotStep,
    index_IconDoNotTouch as IconDoNotTouch,
    index_IconDock as IconDock,
    index_IconDomainDisabled as IconDomainDisabled,
    index_IconDomainVerification as IconDomainVerification,
    index_IconDomain as IconDomain,
    index_IconDoneAll as IconDoneAll,
    index_IconDoneOutline as IconDoneOutline,
    index_IconDone as IconDone,
    index_IconDonutLarge as IconDonutLarge,
    index_IconDonutSmall as IconDonutSmall,
    index_IconDoubleArrow as IconDoubleArrow,
    index_IconDownloadDone as IconDownloadDone,
    index_IconDownload as IconDownload,
    index_IconDrafts as IconDrafts,
    index_IconDragHandle as IconDragHandle,
    index_IconDragIndicator as IconDragIndicator,
    index_IconDriveEta as IconDriveEta,
    index_IconDry as IconDry,
    index_IconDuo as IconDuo,
    index_IconDvr as IconDvr,
    index_IconDynamicFeed as IconDynamicFeed,
    index_IconDynamicForm as IconDynamicForm,
    index_IconEast as IconEast,
    index_IconEco as IconEco,
    index_IconEditAttributes as IconEditAttributes,
    index_IconEditLocation as IconEditLocation,
    index_IconEditRoad as IconEditRoad,
    index_IconEdit as IconEdit,
    index_IconEject as IconEject,
    index_IconElderly as IconElderly,
    index_IconElectricBike as IconElectricBike,
    index_IconElectricCar as IconElectricCar,
    index_IconElectricMoped as IconElectricMoped,
    index_IconElectricScooter as IconElectricScooter,
    index_IconElectricalServices as IconElectricalServices,
    index_IconElevator as IconElevator,
    index_IconEmail as IconEmail,
    index_IconEmojiEmotions as IconEmojiEmotions,
    index_IconEmojiEvents as IconEmojiEvents,
    index_IconEmojiFlags as IconEmojiFlags,
    index_IconEmojiFoodBeverage as IconEmojiFoodBeverage,
    index_IconEmojiNature as IconEmojiNature,
    index_IconEmojiObjects as IconEmojiObjects,
    index_IconEmojiPeople as IconEmojiPeople,
    index_IconEmojiSymbols as IconEmojiSymbols,
    index_IconEmojiTransportation as IconEmojiTransportation,
    index_IconEngineering as IconEngineering,
    index_IconEnhancedEncryption as IconEnhancedEncryption,
    index_IconEqualizer as IconEqualizer,
    index_IconErrorOutline as IconErrorOutline,
    index_IconError as IconError,
    index_IconEscalatorWarning as IconEscalatorWarning,
    index_IconEscalator as IconEscalator,
    index_IconEuroSymbol as IconEuroSymbol,
    index_IconEuro as IconEuro,
    index_IconEvStation as IconEvStation,
    index_IconEventAvailable as IconEventAvailable,
    index_IconEventBusy as IconEventBusy,
    index_IconEventNote as IconEventNote,
    index_IconEventSeat as IconEventSeat,
    index_IconEvent as IconEvent,
    index_IconExitToApp as IconExitToApp,
    index_IconExpandLess as IconExpandLess,
    index_IconExpandMore as IconExpandMore,
    index_IconExplicit as IconExplicit,
    index_IconExploreOff as IconExploreOff,
    index_IconExplore as IconExplore,
    index_IconExposureNeg_1 as IconExposureNeg_1,
    index_IconExposureNeg_2 as IconExposureNeg_2,
    index_IconExposurePlus_1 as IconExposurePlus_1,
    index_IconExposurePlus_2 as IconExposurePlus_2,
    index_IconExposureZero as IconExposureZero,
    index_IconExposure as IconExposure,
    index_IconExtension as IconExtension,
    index_IconFaceUnlock as IconFaceUnlock,
    index_IconFace as IconFace,
    index_IconFacebook as IconFacebook,
    index_IconFactCheck as IconFactCheck,
    index_IconFamilyRestroom as IconFamilyRestroom,
    index_IconFastForward as IconFastForward,
    index_IconFastRewind as IconFastRewind,
    index_IconFastfood as IconFastfood,
    index_IconFavoriteBorder as IconFavoriteBorder,
    index_IconFavorite as IconFavorite,
    index_IconFeaturedPlayList as IconFeaturedPlayList,
    index_IconFeaturedVideo as IconFeaturedVideo,
    index_IconFeedback as IconFeedback,
    index_IconFence as IconFence,
    index_IconFiberDvr as IconFiberDvr,
    index_IconFiberManualRecord as IconFiberManualRecord,
    index_IconFiberNew as IconFiberNew,
    index_IconFiberPin as IconFiberPin,
    index_IconFiberSmartRecord as IconFiberSmartRecord,
    index_IconFileCopy as IconFileCopy,
    index_IconFilter_1 as IconFilter_1,
    index_IconFilter_2 as IconFilter_2,
    index_IconFilter_3 as IconFilter_3,
    index_IconFilter_4 as IconFilter_4,
    index_IconFilter_5 as IconFilter_5,
    index_IconFilter_6 as IconFilter_6,
    index_IconFilter_7 as IconFilter_7,
    index_IconFilter_8 as IconFilter_8,
    index_IconFilter_9Plus as IconFilter_9Plus,
    index_IconFilter_9 as IconFilter_9,
    index_IconFilterAlt as IconFilterAlt,
    index_IconFilterBAndW as IconFilterBAndW,
    index_IconFilterCenterFocus as IconFilterCenterFocus,
    index_IconFilterDrama as IconFilterDrama,
    index_IconFilterFrames as IconFilterFrames,
    index_IconFilterHdr as IconFilterHdr,
    index_IconFilterList as IconFilterList,
    index_IconFilterNone as IconFilterNone,
    index_IconFilterTiltShift as IconFilterTiltShift,
    index_IconFilterVintage as IconFilterVintage,
    index_IconFilter as IconFilter,
    index_IconFindInPage as IconFindInPage,
    index_IconFindReplace as IconFindReplace,
    index_IconFingerprint as IconFingerprint,
    index_IconFireExtinguisher as IconFireExtinguisher,
    index_IconFireplace as IconFireplace,
    index_IconFirstPage as IconFirstPage,
    index_IconFitnessCenter as IconFitnessCenter,
    index_IconFlag as IconFlag,
    index_IconFlaky as IconFlaky,
    index_IconFlare as IconFlare,
    index_IconFlashAuto as IconFlashAuto,
    index_IconFlashOff as IconFlashOff,
    index_IconFlashOn as IconFlashOn,
    index_IconFlightLand as IconFlightLand,
    index_IconFlightTakeoff as IconFlightTakeoff,
    index_IconFlight as IconFlight,
    index_IconFlipCameraAndroid as IconFlipCameraAndroid,
    index_IconFlipCameraIos as IconFlipCameraIos,
    index_IconFlipToBack as IconFlipToBack,
    index_IconFlipToFront as IconFlipToFront,
    index_IconFlip as IconFlip,
    index_IconFolderOpen as IconFolderOpen,
    index_IconFolderShared as IconFolderShared,
    index_IconFolderSpecial as IconFolderSpecial,
    index_IconFolder as IconFolder,
    index_IconFollowTheSigns as IconFollowTheSigns,
    index_IconFontDownload as IconFontDownload,
    index_IconFoodBank as IconFoodBank,
    index_IconFormatAlignCenter as IconFormatAlignCenter,
    index_IconFormatAlignJustify as IconFormatAlignJustify,
    index_IconFormatAlignLeft as IconFormatAlignLeft,
    index_IconFormatAlignRight as IconFormatAlignRight,
    index_IconFormatBold as IconFormatBold,
    index_IconFormatClear as IconFormatClear,
    index_IconFormatColorReset as IconFormatColorReset,
    index_IconFormatIndentDecrease as IconFormatIndentDecrease,
    index_IconFormatIndentIncrease as IconFormatIndentIncrease,
    index_IconFormatItalic as IconFormatItalic,
    index_IconFormatLineSpacing as IconFormatLineSpacing,
    index_IconFormatListBulleted as IconFormatListBulleted,
    index_IconFormatListNumberedRtl as IconFormatListNumberedRtl,
    index_IconFormatListNumbered as IconFormatListNumbered,
    index_IconFormatPaint as IconFormatPaint,
    index_IconFormatQuote as IconFormatQuote,
    index_IconFormatShapes as IconFormatShapes,
    index_IconFormatSize as IconFormatSize,
    index_IconFormatStrikethrough as IconFormatStrikethrough,
    index_IconFormatTextdirectionLToR as IconFormatTextdirectionLToR,
    index_IconFormatTextdirectionRToL as IconFormatTextdirectionRToL,
    index_IconFormatUnderlined as IconFormatUnderlined,
    index_IconForum as IconForum,
    index_IconForward_10 as IconForward_10,
    index_IconForward_30 as IconForward_30,
    index_IconForward_5 as IconForward_5,
    index_IconForwardToInbox as IconForwardToInbox,
    index_IconForward as IconForward,
    index_IconFoundation as IconFoundation,
    index_IconFreeBreakfast as IconFreeBreakfast,
    index_IconFullscreenExit as IconFullscreenExit,
    index_IconFullscreen as IconFullscreen,
    index_IconFunctions as IconFunctions,
    index_IconGTranslate as IconGTranslate,
    index_IconGamepad as IconGamepad,
    index_IconGames as IconGames,
    index_IconGavel as IconGavel,
    index_IconGesture as IconGesture,
    index_IconGetApp as IconGetApp,
    index_IconGif as IconGif,
    index_IconGolfCourse as IconGolfCourse,
    index_IconGpsFixed as IconGpsFixed,
    index_IconGpsNotFixed as IconGpsNotFixed,
    index_IconGpsOff as IconGpsOff,
    index_IconGrade as IconGrade,
    index_IconGradient as IconGradient,
    index_IconGrading as IconGrading,
    index_IconGrain as IconGrain,
    index_IconGraphicEq as IconGraphicEq,
    index_IconGrass as IconGrass,
    index_IconGridOff as IconGridOff,
    index_IconGridOn as IconGridOn,
    index_IconGroupAdd as IconGroupAdd,
    index_IconGroupWork as IconGroupWork,
    index_IconGroup as IconGroup,
    index_IconGroups as IconGroups,
    index_IconHandyman as IconHandyman,
    index_IconHd as IconHd,
    index_IconHdrOff as IconHdrOff,
    index_IconHdrOn as IconHdrOn,
    index_IconHdrStrong as IconHdrStrong,
    index_IconHdrWeak as IconHdrWeak,
    index_IconHeadsetMic as IconHeadsetMic,
    index_IconHeadset as IconHeadset,
    index_IconHealing as IconHealing,
    index_IconHearingDisabled as IconHearingDisabled,
    index_IconHearing as IconHearing,
    index_IconHeight as IconHeight,
    index_IconHelpCenter as IconHelpCenter,
    index_IconHelpOutline as IconHelpOutline,
    index_IconHelp as IconHelp,
    index_IconHighQuality as IconHighQuality,
    index_IconHighlightAlt as IconHighlightAlt,
    index_IconHighlightOff as IconHighlightOff,
    index_IconHighlight as IconHighlight,
    index_IconHistoryEdu as IconHistoryEdu,
    index_IconHistoryToggleOff as IconHistoryToggleOff,
    index_IconHistory as IconHistory,
    index_IconHomeRepairService as IconHomeRepairService,
    index_IconHomeWork as IconHomeWork,
    index_IconHome as IconHome,
    index_IconHorizontalRule as IconHorizontalRule,
    index_IconHorizontalSplit as IconHorizontalSplit,
    index_IconHotTub as IconHotTub,
    index_IconHotel as IconHotel,
    index_IconHourglassBottom as IconHourglassBottom,
    index_IconHourglassDisabled as IconHourglassDisabled,
    index_IconHourglassEmpty as IconHourglassEmpty,
    index_IconHourglassFull as IconHourglassFull,
    index_IconHourglassTop as IconHourglassTop,
    index_IconHouseSiding as IconHouseSiding,
    index_IconHouse as IconHouse,
    index_IconHowToReg as IconHowToReg,
    index_IconHowToVote as IconHowToVote,
    index_IconHttp as IconHttp,
    index_IconHttps as IconHttps,
    index_IconHvac as IconHvac,
    index_IconImageAspectRatio as IconImageAspectRatio,
    index_IconImageNotSupported as IconImageNotSupported,
    index_IconImageSearch as IconImageSearch,
    index_IconImage as IconImage,
    index_IconImportContacts as IconImportContacts,
    index_IconImportExport as IconImportExport,
    index_IconImportantDevices as IconImportantDevices,
    index_IconInbox as IconInbox,
    index_IconIndeterminateCheckBox as IconIndeterminateCheckBox,
    index_IconInfo as IconInfo,
    index_IconInput as IconInput,
    index_IconInsertChartOutlined as IconInsertChartOutlined,
    index_IconInsertChart as IconInsertChart,
    index_IconInsertComment as IconInsertComment,
    index_IconInsertDriveFile as IconInsertDriveFile,
    index_IconInsertEmoticon as IconInsertEmoticon,
    index_IconInsertInvitation as IconInsertInvitation,
    index_IconInsertLink as IconInsertLink,
    index_IconInsertPhoto as IconInsertPhoto,
    index_IconInsights as IconInsights,
    index_IconIntegrationInstructions as IconIntegrationInstructions,
    index_IconInvertColorsOff as IconInvertColorsOff,
    index_IconInvertColors as IconInvertColors,
    index_IconIso as IconIso,
    index_IconKeyboardArrowDown as IconKeyboardArrowDown,
    index_IconKeyboardArrowLeft as IconKeyboardArrowLeft,
    index_IconKeyboardArrowRight as IconKeyboardArrowRight,
    index_IconKeyboardArrowUp as IconKeyboardArrowUp,
    index_IconKeyboardBackspace as IconKeyboardBackspace,
    index_IconKeyboardCapslock as IconKeyboardCapslock,
    index_IconKeyboardHide as IconKeyboardHide,
    index_IconKeyboardReturn as IconKeyboardReturn,
    index_IconKeyboardTab as IconKeyboardTab,
    index_IconKeyboardVoice as IconKeyboardVoice,
    index_IconKeyboard as IconKeyboard,
    index_IconKingBed as IconKingBed,
    index_IconKitchen as IconKitchen,
    index_IconLabelImportant as IconLabelImportant,
    index_IconLabelOff as IconLabelOff,
    index_IconLabel as IconLabel,
    index_IconLandscape as IconLandscape,
    index_IconLanguage as IconLanguage,
    index_IconLaptopChromebook as IconLaptopChromebook,
    index_IconLaptopMac as IconLaptopMac,
    index_IconLaptopWindows as IconLaptopWindows,
    index_IconLaptop as IconLaptop,
    index_IconLastPage as IconLastPage,
    index_IconLaunch as IconLaunch,
    index_IconLayersClear as IconLayersClear,
    index_IconLayers as IconLayers,
    index_IconLeaderboard as IconLeaderboard,
    index_IconLeakAdd as IconLeakAdd,
    index_IconLeakRemove as IconLeakRemove,
    index_IconLegendToggle as IconLegendToggle,
    index_IconLens as IconLens,
    index_IconLibraryAddCheck as IconLibraryAddCheck,
    index_IconLibraryAdd as IconLibraryAdd,
    index_IconLibraryBooks as IconLibraryBooks,
    index_IconLibraryMusic as IconLibraryMusic,
    index_IconLightbulb as IconLightbulb,
    index_IconLineStyle as IconLineStyle,
    index_IconLineWeight as IconLineWeight,
    index_IconLinearScale as IconLinearScale,
    index_IconLinkOff as IconLinkOff,
    index_IconLink as IconLink,
    index_IconLinkedCamera as IconLinkedCamera,
    index_IconListAlt as IconListAlt,
    index_IconList as IconList,
    index_IconLiveHelp as IconLiveHelp,
    index_IconLiveTv as IconLiveTv,
    index_IconLocalActivity as IconLocalActivity,
    index_IconLocalAirport as IconLocalAirport,
    index_IconLocalAtm as IconLocalAtm,
    index_IconLocalBar as IconLocalBar,
    index_IconLocalCafe as IconLocalCafe,
    index_IconLocalCarWash as IconLocalCarWash,
    index_IconLocalConvenienceStore as IconLocalConvenienceStore,
    index_IconLocalDining as IconLocalDining,
    index_IconLocalDrink as IconLocalDrink,
    index_IconLocalFireDepartment as IconLocalFireDepartment,
    index_IconLocalFlorist as IconLocalFlorist,
    index_IconLocalGasStation as IconLocalGasStation,
    index_IconLocalGroceryStore as IconLocalGroceryStore,
    index_IconLocalHospital as IconLocalHospital,
    index_IconLocalHotel as IconLocalHotel,
    index_IconLocalLaundryService as IconLocalLaundryService,
    index_IconLocalLibrary as IconLocalLibrary,
    index_IconLocalMall as IconLocalMall,
    index_IconLocalMovies as IconLocalMovies,
    index_IconLocalOffer as IconLocalOffer,
    index_IconLocalParking as IconLocalParking,
    index_IconLocalPharmacy as IconLocalPharmacy,
    index_IconLocalPhone as IconLocalPhone,
    index_IconLocalPizza as IconLocalPizza,
    index_IconLocalPlay as IconLocalPlay,
    index_IconLocalPolice as IconLocalPolice,
    index_IconLocalPostOffice as IconLocalPostOffice,
    index_IconLocalPrintshop as IconLocalPrintshop,
    index_IconLocalSee as IconLocalSee,
    index_IconLocalShipping as IconLocalShipping,
    index_IconLocalTaxi as IconLocalTaxi,
    index_IconLocationCity as IconLocationCity,
    index_IconLocationDisabled as IconLocationDisabled,
    index_IconLocationOff as IconLocationOff,
    index_IconLocationOn as IconLocationOn,
    index_IconLocationSearching as IconLocationSearching,
    index_IconLockOpen as IconLockOpen,
    index_IconLock as IconLock,
    index_IconLogin as IconLogin,
    index_IconLooks_3 as IconLooks_3,
    index_IconLooks_4 as IconLooks_4,
    index_IconLooks_5 as IconLooks_5,
    index_IconLooks_6 as IconLooks_6,
    index_IconLooksOne as IconLooksOne,
    index_IconLooksTwo as IconLooksTwo,
    index_IconLooks as IconLooks,
    index_IconLoop as IconLoop,
    index_IconLoupe as IconLoupe,
    index_IconLowPriority as IconLowPriority,
    index_IconLoyalty as IconLoyalty,
    index_IconLuggage as IconLuggage,
    index_IconMailOutline as IconMailOutline,
    index_IconMail as IconMail,
    index_IconMap as IconMap,
    index_IconMapsUgc as IconMapsUgc,
    index_IconMarkChatRead as IconMarkChatRead,
    index_IconMarkChatUnread as IconMarkChatUnread,
    index_IconMarkEmailRead as IconMarkEmailRead,
    index_IconMarkEmailUnread as IconMarkEmailUnread,
    index_IconMarkunreadMailbox as IconMarkunreadMailbox,
    index_IconMarkunread as IconMarkunread,
    index_IconMasks as IconMasks,
    index_IconMaximize as IconMaximize,
    index_IconMediation as IconMediation,
    index_IconMedicalServices as IconMedicalServices,
    index_IconMeetingRoom as IconMeetingRoom,
    index_IconMemory as IconMemory,
    index_IconMenuBook as IconMenuBook,
    index_IconMenuOpen as IconMenuOpen,
    index_IconMenu as IconMenu,
    index_IconMergeType as IconMergeType,
    index_IconMessage as IconMessage,
    index_IconMicNone as IconMicNone,
    index_IconMicOff as IconMicOff,
    index_IconMic as IconMic,
    index_IconMicrowave as IconMicrowave,
    index_IconMilitaryTech as IconMilitaryTech,
    index_IconMinimize as IconMinimize,
    index_IconMiscellaneousServices as IconMiscellaneousServices,
    index_IconMissedVideoCall as IconMissedVideoCall,
    index_IconMms as IconMms,
    index_IconMobileFriendly as IconMobileFriendly,
    index_IconMobileOff as IconMobileOff,
    index_IconMobileScreenShare as IconMobileScreenShare,
    index_IconModeComment as IconModeComment,
    index_IconMode as IconMode,
    index_IconModelTraining as IconModelTraining,
    index_IconMonetizationOn as IconMonetizationOn,
    index_IconMoneyOffCsred as IconMoneyOffCsred,
    index_IconMoneyOff as IconMoneyOff,
    index_IconMoney as IconMoney,
    index_IconMonochromePhotos as IconMonochromePhotos,
    index_IconMoodBad as IconMoodBad,
    index_IconMood as IconMood,
    index_IconMoped as IconMoped,
    index_IconMoreHoriz as IconMoreHoriz,
    index_IconMoreTime as IconMoreTime,
    index_IconMoreVert as IconMoreVert,
    index_IconMore as IconMore,
    index_IconMotionPhotosOn as IconMotionPhotosOn,
    index_IconMotionPhotosPause as IconMotionPhotosPause,
    index_IconMotionPhotosPaused as IconMotionPhotosPaused,
    index_IconMouse as IconMouse,
    index_IconMoveToInbox as IconMoveToInbox,
    index_IconMovieCreation as IconMovieCreation,
    index_IconMovieFilter as IconMovieFilter,
    index_IconMovie as IconMovie,
    index_IconMultilineChart as IconMultilineChart,
    index_IconMultipleStop as IconMultipleStop,
    index_IconMuseum as IconMuseum,
    index_IconMusicNote as IconMusicNote,
    index_IconMusicOff as IconMusicOff,
    index_IconMusicVideo as IconMusicVideo,
    index_IconMyLocation as IconMyLocation,
    index_IconNat as IconNat,
    index_IconNaturePeople as IconNaturePeople,
    index_IconNature as IconNature,
    index_IconNavigateBefore as IconNavigateBefore,
    index_IconNavigateNext as IconNavigateNext,
    index_IconNavigation as IconNavigation,
    index_IconNearMeDisabled as IconNearMeDisabled,
    index_IconNearMe as IconNearMe,
    index_IconNetworkCheck as IconNetworkCheck,
    index_IconNetworkLocked as IconNetworkLocked,
    index_IconNewReleases as IconNewReleases,
    index_IconNextPlan as IconNextPlan,
    index_IconNextWeek as IconNextWeek,
    index_IconNfc as IconNfc,
    index_IconNightShelter as IconNightShelter,
    index_IconNightsStay as IconNightsStay,
    index_IconNoBackpack as IconNoBackpack,
    index_IconNoCell as IconNoCell,
    index_IconNoDrinks as IconNoDrinks,
    index_IconNoEncryptionGmailerrorred as IconNoEncryptionGmailerrorred,
    index_IconNoEncryption as IconNoEncryption,
    index_IconNoFlash as IconNoFlash,
    index_IconNoFood as IconNoFood,
    index_IconNoLuggage as IconNoLuggage,
    index_IconNoMeals as IconNoMeals,
    index_IconNoMeetingRoom as IconNoMeetingRoom,
    index_IconNoPhotography as IconNoPhotography,
    index_IconNoSim as IconNoSim,
    index_IconNoStroller as IconNoStroller,
    index_IconNoTransfer as IconNoTransfer,
    index_IconNorthEast as IconNorthEast,
    index_IconNorthWest as IconNorthWest,
    index_IconNorth as IconNorth,
    index_IconNotAccessible as IconNotAccessible,
    index_IconNotInterested as IconNotInterested,
    index_IconNotListedLocation as IconNotListedLocation,
    index_IconNotStarted as IconNotStarted,
    index_IconNoteAdd as IconNoteAdd,
    index_IconNote as IconNote,
    index_IconNotes as IconNotes,
    index_IconNotificationImportant as IconNotificationImportant,
    index_IconNotificationsActive as IconNotificationsActive,
    index_IconNotificationsNone as IconNotificationsNone,
    index_IconNotificationsOff as IconNotificationsOff,
    index_IconNotificationsPaused as IconNotificationsPaused,
    index_IconNotifications as IconNotifications,
    index_IconOfflineBolt as IconOfflineBolt,
    index_IconOfflinePin as IconOfflinePin,
    index_IconOndemandVideo as IconOndemandVideo,
    index_IconOnlinePrediction as IconOnlinePrediction,
    index_IconOpacity as IconOpacity,
    index_IconOpenInBrowser as IconOpenInBrowser,
    index_IconOpenInFull as IconOpenInFull,
    index_IconOpenInNew as IconOpenInNew,
    index_IconOpenWith as IconOpenWith,
    index_IconOutbond as IconOutbond,
    index_IconOutdoorGrill as IconOutdoorGrill,
    index_IconOutlet as IconOutlet,
    index_IconOutlinedFlag as IconOutlinedFlag,
    index_IconPages as IconPages,
    index_IconPageview as IconPageview,
    index_IconPalette as IconPalette,
    index_IconPanTool as IconPanTool,
    index_IconPanoramaFishEye as IconPanoramaFishEye,
    index_IconPanoramaHorizontal as IconPanoramaHorizontal,
    index_IconPanoramaVertical as IconPanoramaVertical,
    index_IconPanoramaWideAngle as IconPanoramaWideAngle,
    index_IconPanorama as IconPanorama,
    index_IconPartyMode as IconPartyMode,
    index_IconPauseCircleFilled as IconPauseCircleFilled,
    index_IconPauseCircleOutline as IconPauseCircleOutline,
    index_IconPausePresentation as IconPausePresentation,
    index_IconPause as IconPause,
    index_IconPayment as IconPayment,
    index_IconPayments as IconPayments,
    index_IconPedalBike as IconPedalBike,
    index_IconPendingActions as IconPendingActions,
    index_IconPending as IconPending,
    index_IconPeopleAlt as IconPeopleAlt,
    index_IconPeopleOutline as IconPeopleOutline,
    index_IconPeople as IconPeople,
    index_IconPermCameraMic as IconPermCameraMic,
    index_IconPermContactCalendar as IconPermContactCalendar,
    index_IconPermDataSetting as IconPermDataSetting,
    index_IconPermDeviceInformation as IconPermDeviceInformation,
    index_IconPermIdentity as IconPermIdentity,
    index_IconPermMedia as IconPermMedia,
    index_IconPermPhoneMsg as IconPermPhoneMsg,
    index_IconPermScanWifi as IconPermScanWifi,
    index_IconPersonAddAlt_1 as IconPersonAddAlt_1,
    index_IconPersonAddDisabled as IconPersonAddDisabled,
    index_IconPersonAdd as IconPersonAdd,
    index_IconPersonOutline as IconPersonOutline,
    index_IconPersonPinCircle as IconPersonPinCircle,
    index_IconPersonPin as IconPersonPin,
    index_IconPersonRemoveAlt_1 as IconPersonRemoveAlt_1,
    index_IconPersonRemove as IconPersonRemove,
    index_IconPersonSearch as IconPersonSearch,
    index_IconPerson as IconPerson,
    index_IconPersonalVideo as IconPersonalVideo,
    index_IconPestControlRodent as IconPestControlRodent,
    index_IconPestControl as IconPestControl,
    index_IconPets as IconPets,
    index_IconPhoneAndroid as IconPhoneAndroid,
    index_IconPhoneBluetoothSpeaker as IconPhoneBluetoothSpeaker,
    index_IconPhoneCallback as IconPhoneCallback,
    index_IconPhoneDisabled as IconPhoneDisabled,
    index_IconPhoneEnabled as IconPhoneEnabled,
    index_IconPhoneForwarded as IconPhoneForwarded,
    index_IconPhoneInTalk as IconPhoneInTalk,
    index_IconPhoneIphone as IconPhoneIphone,
    index_IconPhoneLocked as IconPhoneLocked,
    index_IconPhoneMissed as IconPhoneMissed,
    index_IconPhonePaused as IconPhonePaused,
    index_IconPhone as IconPhone,
    index_IconPhonelinkErase as IconPhonelinkErase,
    index_IconPhonelinkLock as IconPhonelinkLock,
    index_IconPhonelinkOff as IconPhonelinkOff,
    index_IconPhonelinkRing as IconPhonelinkRing,
    index_IconPhonelinkSetup as IconPhonelinkSetup,
    index_IconPhonelink as IconPhonelink,
    index_IconPhotoAlbum as IconPhotoAlbum,
    index_IconPhotoCamera as IconPhotoCamera,
    index_IconPhotoFilter as IconPhotoFilter,
    index_IconPhotoLibrary as IconPhotoLibrary,
    index_IconPhotoSizeSelectActual as IconPhotoSizeSelectActual,
    index_IconPhotoSizeSelectLarge as IconPhotoSizeSelectLarge,
    index_IconPhotoSizeSelectSmall as IconPhotoSizeSelectSmall,
    index_IconPhoto as IconPhoto,
    index_IconPictureAsPdf as IconPictureAsPdf,
    index_IconPictureInPictureAlt as IconPictureInPictureAlt,
    index_IconPictureInPicture as IconPictureInPicture,
    index_IconPieChartOutline as IconPieChartOutline,
    index_IconPieChart as IconPieChart,
    index_IconPinDrop as IconPinDrop,
    index_IconPlace as IconPlace,
    index_IconPlagiarism as IconPlagiarism,
    index_IconPlayArrow as IconPlayArrow,
    index_IconPlayCircleFilled as IconPlayCircleFilled,
    index_IconPlayCircleOutline as IconPlayCircleOutline,
    index_IconPlayForWork as IconPlayForWork,
    index_IconPlaylistAddCheck as IconPlaylistAddCheck,
    index_IconPlaylistAdd as IconPlaylistAdd,
    index_IconPlaylistPlay as IconPlaylistPlay,
    index_IconPlumbing as IconPlumbing,
    index_IconPlusOne as IconPlusOne,
    index_IconPointOfSale as IconPointOfSale,
    index_IconPolicy as IconPolicy,
    index_IconPoll as IconPoll,
    index_IconPolymer as IconPolymer,
    index_IconPool as IconPool,
    index_IconPortableWifiOff as IconPortableWifiOff,
    index_IconPortrait as IconPortrait,
    index_IconPostAdd as IconPostAdd,
    index_IconPowerInput as IconPowerInput,
    index_IconPowerOff as IconPowerOff,
    index_IconPowerSettingsNew as IconPowerSettingsNew,
    index_IconPower as IconPower,
    index_IconPrecisionManufacturing as IconPrecisionManufacturing,
    index_IconPregnantWoman as IconPregnantWoman,
    index_IconPresentToAll as IconPresentToAll,
    index_IconPreview as IconPreview,
    index_IconPrintDisabled as IconPrintDisabled,
    index_IconPrint as IconPrint,
    index_IconPriorityHigh as IconPriorityHigh,
    index_IconPrivacyTip as IconPrivacyTip,
    index_IconPsychology as IconPsychology,
    index_IconPublicOff as IconPublicOff,
    index_IconPublic as IconPublic,
    index_IconPublish as IconPublish,
    index_IconPublishedWithChanges as IconPublishedWithChanges,
    index_IconPushPin as IconPushPin,
    index_IconQrCodeScanner as IconQrCodeScanner,
    index_IconQrCode as IconQrCode,
    index_IconQueryBuilder as IconQueryBuilder,
    index_IconQuestionAnswer as IconQuestionAnswer,
    index_IconQueueMusic as IconQueueMusic,
    index_IconQueuePlayNext as IconQueuePlayNext,
    index_IconQueue as IconQueue,
    index_IconQuickreply as IconQuickreply,
    index_IconRadioButtonChecked as IconRadioButtonChecked,
    index_IconRadioButtonUnchecked as IconRadioButtonUnchecked,
    index_IconRadio as IconRadio,
    index_IconRateReview as IconRateReview,
    index_IconReadMore as IconReadMore,
    index_IconReceiptLong as IconReceiptLong,
    index_IconReceipt as IconReceipt,
    index_IconRecentActors as IconRecentActors,
    index_IconRecordVoiceOver as IconRecordVoiceOver,
    index_IconRedeem as IconRedeem,
    index_IconRedo as IconRedo,
    index_IconReduceCapacity as IconReduceCapacity,
    index_IconRefresh as IconRefresh,
    index_IconRemoveCircleOutline as IconRemoveCircleOutline,
    index_IconRemoveCircle as IconRemoveCircle,
    index_IconRemoveFromQueue as IconRemoveFromQueue,
    index_IconRemoveRedEye as IconRemoveRedEye,
    index_IconRemoveShoppingCart as IconRemoveShoppingCart,
    index_IconRemove as IconRemove,
    index_IconReorder as IconReorder,
    index_IconRepeatOne as IconRepeatOne,
    index_IconRepeat as IconRepeat,
    index_IconReplay_10 as IconReplay_10,
    index_IconReplay_30 as IconReplay_30,
    index_IconReplay_5 as IconReplay_5,
    index_IconReplay as IconReplay,
    index_IconReplyAll as IconReplyAll,
    index_IconReply as IconReply,
    index_IconReportGmailerrorred as IconReportGmailerrorred,
    index_IconReportOff as IconReportOff,
    index_IconReportProblem as IconReportProblem,
    index_IconReport as IconReport,
    index_IconRequestPage as IconRequestPage,
    index_IconRequestQuote as IconRequestQuote,
    index_IconRestaurantMenu as IconRestaurantMenu,
    index_IconRestaurant as IconRestaurant,
    index_IconRestoreFromTrash as IconRestoreFromTrash,
    index_IconRestorePage as IconRestorePage,
    index_IconRestore as IconRestore,
    index_IconRingVolume as IconRingVolume,
    index_IconRoofing as IconRoofing,
    index_IconRoomPreferences as IconRoomPreferences,
    index_IconRoomService as IconRoomService,
    index_IconRoom as IconRoom,
    index_IconRotate_90DegreesCcw as IconRotate_90DegreesCcw,
    index_IconRotateLeft as IconRotateLeft,
    index_IconRotateRight as IconRotateRight,
    index_IconRoundedCorner as IconRoundedCorner,
    index_IconRouter as IconRouter,
    index_IconRowing as IconRowing,
    index_IconRssFeed as IconRssFeed,
    index_IconRuleFolder as IconRuleFolder,
    index_IconRule as IconRule,
    index_IconRunCircle as IconRunCircle,
    index_IconRvHookup as IconRvHookup,
    index_IconSanitizer as IconSanitizer,
    index_IconSatellite as IconSatellite,
    index_IconSaveAlt as IconSaveAlt,
    index_IconSave as IconSave,
    index_IconScanner as IconScanner,
    index_IconScatterPlot as IconScatterPlot,
    index_IconSchedule as IconSchedule,
    index_IconSchool as IconSchool,
    index_IconScience as IconScience,
    index_IconScore as IconScore,
    index_IconScreenLockLandscape as IconScreenLockLandscape,
    index_IconScreenLockPortrait as IconScreenLockPortrait,
    index_IconScreenLockRotation as IconScreenLockRotation,
    index_IconScreenRotation as IconScreenRotation,
    index_IconScreenShare as IconScreenShare,
    index_IconSdCardAlert as IconSdCardAlert,
    index_IconSdCard as IconSdCard,
    index_IconSdStorage as IconSdStorage,
    index_IconSearchOff as IconSearchOff,
    index_IconSearch as IconSearch,
    index_IconSecurity as IconSecurity,
    index_IconSelectAll as IconSelectAll,
    index_IconSelfImprovement as IconSelfImprovement,
    index_IconSend as IconSend,
    index_IconSensorDoor as IconSensorDoor,
    index_IconSensorWindow as IconSensorWindow,
    index_IconSentimentDissatisfied as IconSentimentDissatisfied,
    index_IconSentimentNeutral as IconSentimentNeutral,
    index_IconSentimentSatisfiedAlt as IconSentimentSatisfiedAlt,
    index_IconSentimentSatisfied as IconSentimentSatisfied,
    index_IconSentimentVeryDissatisfied as IconSentimentVeryDissatisfied,
    index_IconSentimentVerySatisfied as IconSentimentVerySatisfied,
    index_IconSetMeal as IconSetMeal,
    index_IconSettingsApplications as IconSettingsApplications,
    index_IconSettingsBackupRestore as IconSettingsBackupRestore,
    index_IconSettingsBluetooth as IconSettingsBluetooth,
    index_IconSettingsBrightness as IconSettingsBrightness,
    index_IconSettingsCell as IconSettingsCell,
    index_IconSettingsEthernet as IconSettingsEthernet,
    index_IconSettingsInputAntenna as IconSettingsInputAntenna,
    index_IconSettingsInputComponent as IconSettingsInputComponent,
    index_IconSettingsInputComposite as IconSettingsInputComposite,
    index_IconSettingsInputHdmi as IconSettingsInputHdmi,
    index_IconSettingsInputSvideo as IconSettingsInputSvideo,
    index_IconSettingsOverscan as IconSettingsOverscan,
    index_IconSettingsPhone as IconSettingsPhone,
    index_IconSettingsPower as IconSettingsPower,
    index_IconSettingsRemote as IconSettingsRemote,
    index_IconSettingsSystemDaydream as IconSettingsSystemDaydream,
    index_IconSettingsVoice as IconSettingsVoice,
    index_IconSettings as IconSettings,
    index_IconShare as IconShare,
    index_IconShopTwo as IconShopTwo,
    index_IconShop as IconShop,
    index_IconShoppingBag as IconShoppingBag,
    index_IconShoppingBasket as IconShoppingBasket,
    index_IconShoppingCart as IconShoppingCart,
    index_IconShortText as IconShortText,
    index_IconShowChart as IconShowChart,
    index_IconShuffle as IconShuffle,
    index_IconShutterSpeed as IconShutterSpeed,
    index_IconSick as IconSick,
    index_IconSignalCellular_4Bar as IconSignalCellular_4Bar,
    index_IconSignalCellularAlt as IconSignalCellularAlt,
    index_IconSignalCellularConnectedNoInternet_4Bar as IconSignalCellularConnectedNoInternet_4Bar,
    index_IconSignalCellularNoSim as IconSignalCellularNoSim,
    index_IconSignalCellularNull as IconSignalCellularNull,
    index_IconSignalCellularOff as IconSignalCellularOff,
    index_IconSignalWifi_4BarLock as IconSignalWifi_4BarLock,
    index_IconSignalWifi_4Bar as IconSignalWifi_4Bar,
    index_IconSignalWifiOff as IconSignalWifiOff,
    index_IconSimCard as IconSimCard,
    index_IconSingleBed as IconSingleBed,
    index_IconSkipNext as IconSkipNext,
    index_IconSkipPrevious as IconSkipPrevious,
    index_IconSlideshow as IconSlideshow,
    index_IconSlowMotionVideo as IconSlowMotionVideo,
    index_IconSmartButton as IconSmartButton,
    index_IconSmartphone as IconSmartphone,
    index_IconSmokeFree as IconSmokeFree,
    index_IconSmokingRooms as IconSmokingRooms,
    index_IconSmsFailed as IconSmsFailed,
    index_IconSms as IconSms,
    index_IconSnippetFolder as IconSnippetFolder,
    index_IconSnooze as IconSnooze,
    index_IconSoap as IconSoap,
    index_IconSortByAlpha as IconSortByAlpha,
    index_IconSort as IconSort,
    index_IconSource as IconSource,
    index_IconSouthEast as IconSouthEast,
    index_IconSouthWest as IconSouthWest,
    index_IconSouth as IconSouth,
    index_IconSpa as IconSpa,
    index_IconSpaceBar as IconSpaceBar,
    index_IconSpeakerGroup as IconSpeakerGroup,
    index_IconSpeakerNotesOff as IconSpeakerNotesOff,
    index_IconSpeakerNotes as IconSpeakerNotes,
    index_IconSpeakerPhone as IconSpeakerPhone,
    index_IconSpeaker as IconSpeaker,
    index_IconSpeed as IconSpeed,
    index_IconSpellcheck as IconSpellcheck,
    index_IconSportsBar as IconSportsBar,
    index_IconSportsBaseball as IconSportsBaseball,
    index_IconSportsBasketball as IconSportsBasketball,
    index_IconSportsCricket as IconSportsCricket,
    index_IconSportsEsports as IconSportsEsports,
    index_IconSportsFootball as IconSportsFootball,
    index_IconSportsGolf as IconSportsGolf,
    index_IconSportsHandball as IconSportsHandball,
    index_IconSportsHockey as IconSportsHockey,
    index_IconSportsKabaddi as IconSportsKabaddi,
    index_IconSportsMma as IconSportsMma,
    index_IconSportsMotorsports as IconSportsMotorsports,
    index_IconSportsRugby as IconSportsRugby,
    index_IconSportsSoccer as IconSportsSoccer,
    index_IconSportsTennis as IconSportsTennis,
    index_IconSportsVolleyball as IconSportsVolleyball,
    index_IconSports as IconSports,
    index_IconSquareFoot as IconSquareFoot,
    index_IconStackedLineChart as IconStackedLineChart,
    index_IconStairs as IconStairs,
    index_IconStarBorderPurple500 as IconStarBorderPurple500,
    index_IconStarBorder as IconStarBorder,
    index_IconStarHalf as IconStarHalf,
    index_IconStarOutline as IconStarOutline,
    index_IconStarPurple500 as IconStarPurple500,
    index_IconStarRate as IconStarRate,
    index_IconStar as IconStar,
    index_IconStars as IconStars,
    index_IconStayCurrentLandscape as IconStayCurrentLandscape,
    index_IconStayCurrentPortrait as IconStayCurrentPortrait,
    index_IconStayPrimaryLandscape as IconStayPrimaryLandscape,
    index_IconStayPrimaryPortrait as IconStayPrimaryPortrait,
    index_IconStickyNote_2 as IconStickyNote_2,
    index_IconStopCircle as IconStopCircle,
    index_IconStopScreenShare as IconStopScreenShare,
    index_IconStop as IconStop,
    index_IconStorage as IconStorage,
    index_IconStoreMallDirectory as IconStoreMallDirectory,
    index_IconStore as IconStore,
    index_IconStorefront as IconStorefront,
    index_IconStraighten as IconStraighten,
    index_IconStreetview as IconStreetview,
    index_IconStrikethroughS as IconStrikethroughS,
    index_IconStroller as IconStroller,
    index_IconStyle as IconStyle,
    index_IconSubdirectoryArrowLeft as IconSubdirectoryArrowLeft,
    index_IconSubdirectoryArrowRight as IconSubdirectoryArrowRight,
    index_IconSubject as IconSubject,
    index_IconSubscript as IconSubscript,
    index_IconSubscriptions as IconSubscriptions,
    index_IconSubtitlesOff as IconSubtitlesOff,
    index_IconSubtitles as IconSubtitles,
    index_IconSubway as IconSubway,
    index_IconSuperscript as IconSuperscript,
    index_IconSupervisedUserCircle as IconSupervisedUserCircle,
    index_IconSupervisorAccount as IconSupervisorAccount,
    index_IconSupportAgent as IconSupportAgent,
    index_IconSupport as IconSupport,
    index_IconSurroundSound as IconSurroundSound,
    index_IconSwapCalls as IconSwapCalls,
    index_IconSwapHoriz as IconSwapHoriz,
    index_IconSwapHorizontalCircle as IconSwapHorizontalCircle,
    index_IconSwapVert as IconSwapVert,
    index_IconSwapVerticalCircle as IconSwapVerticalCircle,
    index_IconSwitchCamera as IconSwitchCamera,
    index_IconSwitchLeft as IconSwitchLeft,
    index_IconSwitchRight as IconSwitchRight,
    index_IconSwitchVideo as IconSwitchVideo,
    index_IconSyncAlt as IconSyncAlt,
    index_IconSyncDisabled as IconSyncDisabled,
    index_IconSyncProblem as IconSyncProblem,
    index_IconSync as IconSync,
    index_IconSystemUpdateAlt as IconSystemUpdateAlt,
    index_IconSystemUpdate as IconSystemUpdate,
    index_IconTabUnselected as IconTabUnselected,
    index_IconTab as IconTab,
    index_IconTableChart as IconTableChart,
    index_IconTableRows as IconTableRows,
    index_IconTableView as IconTableView,
    index_IconTabletAndroid as IconTabletAndroid,
    index_IconTabletMac as IconTabletMac,
    index_IconTablet as IconTablet,
    index_IconTagFaces as IconTagFaces,
    index_IconTapAndPlay as IconTapAndPlay,
    index_IconTapas as IconTapas,
    index_IconTerrain as IconTerrain,
    index_IconTextFields as IconTextFields,
    index_IconTextFormat as IconTextFormat,
    index_IconTextRotateUp as IconTextRotateUp,
    index_IconTextRotateVertical as IconTextRotateVertical,
    index_IconTextRotationAngledown as IconTextRotationAngledown,
    index_IconTextRotationAngleup as IconTextRotationAngleup,
    index_IconTextRotationDown as IconTextRotationDown,
    index_IconTextRotationNone as IconTextRotationNone,
    index_IconTextSnippet as IconTextSnippet,
    index_IconTextsms as IconTextsms,
    index_IconTexture as IconTexture,
    index_IconTheaters as IconTheaters,
    index_IconThermostat as IconThermostat,
    index_IconThumbDownAlt as IconThumbDownAlt,
    index_IconThumbDown as IconThumbDown,
    index_IconThumbUpAlt as IconThumbUpAlt,
    index_IconThumbUp as IconThumbUp,
    index_IconThumbsUpDown as IconThumbsUpDown,
    index_IconTimeToLeave as IconTimeToLeave,
    index_IconTimelapse as IconTimelapse,
    index_IconTimeline as IconTimeline,
    index_IconTimer_10 as IconTimer_10,
    index_IconTimer_3 as IconTimer_3,
    index_IconTimerOff as IconTimerOff,
    index_IconTimer as IconTimer,
    index_IconTitle as IconTitle,
    index_IconToc as IconToc,
    index_IconToday as IconToday,
    index_IconToggleOff as IconToggleOff,
    index_IconToggleOn as IconToggleOn,
    index_IconToll as IconToll,
    index_IconTonality as IconTonality,
    index_IconTopic as IconTopic,
    index_IconTouchApp as IconTouchApp,
    index_IconTour as IconTour,
    index_IconToys as IconToys,
    index_IconTrackChanges as IconTrackChanges,
    index_IconTraffic as IconTraffic,
    index_IconTrain as IconTrain,
    index_IconTram as IconTram,
    index_IconTransferWithinAStation as IconTransferWithinAStation,
    index_IconTransform as IconTransform,
    index_IconTransitEnterexit as IconTransitEnterexit,
    index_IconTranslate as IconTranslate,
    index_IconTrendingDown as IconTrendingDown,
    index_IconTrendingFlat as IconTrendingFlat,
    index_IconTrendingUp as IconTrendingUp,
    index_IconTripOrigin as IconTripOrigin,
    index_IconTty as IconTty,
    index_IconTune as IconTune,
    index_IconTurnedInNot as IconTurnedInNot,
    index_IconTurnedIn as IconTurnedIn,
    index_IconTvOff as IconTvOff,
    index_IconTv as IconTv,
    index_IconTwoWheeler as IconTwoWheeler,
    index_IconUmbrella as IconUmbrella,
    index_IconUnarchive as IconUnarchive,
    index_IconUndo as IconUndo,
    index_IconUnfoldLess as IconUnfoldLess,
    index_IconUnfoldMore as IconUnfoldMore,
    index_IconUnpublished as IconUnpublished,
    index_IconUnsubscribe as IconUnsubscribe,
    index_IconUpdate as IconUpdate,
    index_IconUpgrade as IconUpgrade,
    index_IconUpload as IconUpload,
    index_IconUsb as IconUsb,
    index_IconVerifiedUser as IconVerifiedUser,
    index_IconVerified as IconVerified,
    index_IconVerticalAlignBottom as IconVerticalAlignBottom,
    index_IconVerticalAlignCenter as IconVerticalAlignCenter,
    index_IconVerticalAlignTop as IconVerticalAlignTop,
    index_IconVerticalSplit as IconVerticalSplit,
    index_IconVibration as IconVibration,
    index_IconVideoCall as IconVideoCall,
    index_IconVideoLabel as IconVideoLabel,
    index_IconVideoLibrary as IconVideoLibrary,
    index_IconVideoSettings as IconVideoSettings,
    index_IconVideocamOff as IconVideocamOff,
    index_IconVideocam as IconVideocam,
    index_IconVideogameAsset as IconVideogameAsset,
    index_IconViewAgenda as IconViewAgenda,
    index_IconViewArray as IconViewArray,
    index_IconViewCarousel as IconViewCarousel,
    index_IconViewColumn as IconViewColumn,
    index_IconViewComfy as IconViewComfy,
    index_IconViewCompact as IconViewCompact,
    index_IconViewDay as IconViewDay,
    index_IconViewHeadline as IconViewHeadline,
    index_IconViewList as IconViewList,
    index_IconViewModule as IconViewModule,
    index_IconViewQuilt as IconViewQuilt,
    index_IconViewSidebar as IconViewSidebar,
    index_IconViewStream as IconViewStream,
    index_IconViewWeek as IconViewWeek,
    index_IconVignette as IconVignette,
    index_IconVisibilityOff as IconVisibilityOff,
    index_IconVisibility as IconVisibility,
    index_IconVoiceChat as IconVoiceChat,
    index_IconVoiceOverOff as IconVoiceOverOff,
    index_IconVoicemail as IconVoicemail,
    index_IconVolumeDown as IconVolumeDown,
    index_IconVolumeMute as IconVolumeMute,
    index_IconVolumeOff as IconVolumeOff,
    index_IconVolumeUp as IconVolumeUp,
    index_IconVpnKey as IconVpnKey,
    index_IconVpnLock as IconVpnLock,
    index_IconWallpaper as IconWallpaper,
    index_IconWarningAmber as IconWarningAmber,
    index_IconWarning as IconWarning,
    index_IconWash as IconWash,
    index_IconWatchLater as IconWatchLater,
    index_IconWatch as IconWatch,
    index_IconWaterDamage as IconWaterDamage,
    index_IconWaves as IconWaves,
    index_IconWbAuto as IconWbAuto,
    index_IconWbCloudy as IconWbCloudy,
    index_IconWbIncandescent as IconWbIncandescent,
    index_IconWbIridescent as IconWbIridescent,
    index_IconWbSunny as IconWbSunny,
    index_IconWc as IconWc,
    index_IconWebAsset as IconWebAsset,
    index_IconWeb as IconWeb,
    index_IconWeekend as IconWeekend,
    index_IconWest as IconWest,
    index_IconWhatshot as IconWhatshot,
    index_IconWheelchairPickup as IconWheelchairPickup,
    index_IconWhereToVote as IconWhereToVote,
    index_IconWidgets as IconWidgets,
    index_IconWifiCalling as IconWifiCalling,
    index_IconWifiLock as IconWifiLock,
    index_IconWifiOff as IconWifiOff,
    index_IconWifiProtectedSetup as IconWifiProtectedSetup,
    index_IconWifiTethering as IconWifiTethering,
    index_IconWifi as IconWifi,
    index_IconWineBar as IconWineBar,
    index_IconWorkOff as IconWorkOff,
    index_IconWorkOutline as IconWorkOutline,
    index_IconWork as IconWork,
    index_IconWrapText as IconWrapText,
    index_IconWrongLocation as IconWrongLocation,
    index_IconWysiwyg as IconWysiwyg,
    index_IconYoutubeSearchedFor as IconYoutubeSearchedFor,
    index_IconZoomIn as IconZoomIn,
    index_IconZoomOutMap as IconZoomOutMap,
    index_IconZoomOut as IconZoomOut,
    index_Table as Table,
    index_TableBody as TableBody,
    index_TableCell as TableCell,
    index_TableFoot as TableFoot,
    index_TableHead as TableHead,
    index_TableRow as TableRow,
    index_usePagination as usePagination,
    index_ComponentClassNames as ComponentClassNames,
    index_SharedText as SharedText,
    index_AlertVariations as AlertVariations,
    index_AlertProps as AlertProps,
    index_BadgeVariations as BadgeVariations,
    index_BadgeSizes as BadgeSizes,
    index_BadgeProps as BadgeProps,
    index_BaseComponentProps as BaseComponentProps,
    index_AriaProps as AriaProps,
    index_Sizes as Sizes,
    index_ButtonSizes as ButtonSizes,
    index_ButtonTypes as ButtonTypes,
    index_ButtonVariations as ButtonVariations,
    index_ButtonProps as ButtonProps,
    index_ButtonGroupProps as ButtonGroupProps,
    index_CardVariations as CardVariations,
    index_CardProps as CardProps,
    index_CheckboxFieldProps as CheckboxFieldProps,
    index_CollectionType as CollectionType,
    index_CollectionWrapperProps as CollectionWrapperProps,
    index_CollectionBaseProps as CollectionBaseProps,
    index_ListCollectionProps as ListCollectionProps,
    index_GridCollectionProps as GridCollectionProps,
    index_CollectionProps as CollectionProps,
    index_DataStoreItemProps as DataStoreItemProps,
    index_DataStoreCollectionProps as DataStoreCollectionProps,
    index_DataStoreItemResult as DataStoreItemResult,
    index_DataStoreCollectionResult as DataStoreCollectionResult,
    index_DataStoreBindingProps as DataStoreBindingProps,
    index_DataStorePredicateObject as DataStorePredicateObject,
    index_DividerOrientations as DividerOrientations,
    index_DividerSizes as DividerSizes,
    index_DividerOptions as DividerOptions,
    index_DividerProps as DividerProps,
    index_ExpanderProps as ExpanderProps,
    index_ExpanderItemProps as ExpanderItemProps,
    index_FieldProps as FieldProps,
    index_FieldClearButtonProps as FieldClearButtonProps,
    index_FieldDescriptionProps as FieldDescriptionProps,
    index_FieldErrorMessageProps as FieldErrorMessageProps,
    index_FieldVariations as FieldVariations,
    index_FieldGroupOrientation as FieldGroupOrientation,
    index_FieldGroupOptions as FieldGroupOptions,
    index_FieldGroupIconProps as FieldGroupIconProps,
    index_FieldGroupIconButtonProps as FieldGroupIconButtonProps,
    index_FlexContainerStyleProps as FlexContainerStyleProps,
    index_FlexProps as FlexProps,
    index_FlexItemStyleProps as FlexItemStyleProps,
    index_HeadingLevel as HeadingLevel,
    index_HeadingProps as HeadingProps,
    index_ViewBox as ViewBox,
    index_IconSize as IconSize,
    index_IconProps as IconProps,
    index_InputMode as InputMode,
    index_InputSizes as InputSizes,
    index_InputProps as InputProps,
    index_ImageStyleProps as ImageStyleProps,
    index_ImageOptions as ImageOptions,
    index_ImageProps as ImageProps,
    index_LabelProps as LabelProps,
    index_LinkOptions as LinkOptions,
    index_LinkProps as LinkProps,
    index_LoaderSizes as LoaderSizes,
    index_LoaderVariations as LoaderVariations,
    index_LoaderProps as LoaderProps,
    index_MenuProps as MenuProps,
    index_MenuItemProps as MenuItemProps,
    index_PaginationItemType as PaginationItemType,
    index_PaginationCallbackType as PaginationCallbackType,
    index_PaginationProps as PaginationProps,
    index_UsePaginationProps as UsePaginationProps,
    index_UsePaginationResult as UsePaginationResult,
    index_PaginationItemProps as PaginationItemProps,
    index_PasswordFieldProps as PasswordFieldProps,
    index_PasswordFieldType as PasswordFieldType,
    index_ShowPasswordButtonProps as ShowPasswordButtonProps,
    index_PhoneNumberFieldProps as PhoneNumberFieldProps,
    index_CountryCodeSelectProps as CountryCodeSelectProps,
    index_PlaceholderSizes as PlaceholderSizes,
    index_PlaceholderProps as PlaceholderProps,
    index_RadioProps as RadioProps,
    index_RadioGroupFieldProps as RadioGroupFieldProps,
    index_RatingSizes as RatingSizes,
    index_RatingOptions as RatingOptions,
    index_RatingProps as RatingProps,
    index_ScrollViewProps as ScrollViewProps,
    index_SearchFieldProps as SearchFieldProps,
    index_SearchFieldButtonProps as SearchFieldButtonProps,
    index_SelectFieldProps as SelectFieldProps,
    index_SliderFieldProps as SliderFieldProps,
    index_StepperFieldProps as StepperFieldProps,
    index_StyleProp as StyleProp,
    index_ResponsiveObject as ResponsiveObject,
    index_ResponsiveStyle as ResponsiveStyle,
    index_BaseStyleProps as BaseStyleProps,
    index_CSSLayoutStyleProps as CSSLayoutStyleProps,
    index_AllStyleProps as AllStyleProps,
    index_ComponentPropToStyleProp as ComponentPropToStyleProp,
    index_ComponentPropsToStylePropsMap as ComponentPropsToStylePropsMap,
    index_ComponentPropsToStylePropsMapKeys as ComponentPropsToStylePropsMapKeys,
    index_labelPositions as labelPositions,
    index_SwitchFieldProps as SwitchFieldProps,
    index_TableSize as TableSize,
    index_TableVariation as TableVariation,
    index_TableProps as TableProps,
    index_TableBodyProps as TableBodyProps,
    index_TableCellElement as TableCellElement,
    index_TableCellProps as TableCellProps,
    index_TableFootProps as TableFootProps,
    index_TableHeadProps as TableHeadProps,
    index_TableRowProps as TableRowProps,
    index_TabsSpacing as TabsSpacing,
    index_TabsProps as TabsProps,
    index_TabItemProps as TabItemProps,
    index_TextVariation as TextVariation,
    index_TextProps as TextProps,
    index_TextAreaStyleProps as TextAreaStyleProps,
    index_TextAreaProps as TextAreaProps,
    index_TextFieldOptions as TextFieldOptions,
    index_TextInputFieldProps as TextInputFieldProps,
    index_TextAreaFieldProps as TextAreaFieldProps,
    index_TextFieldProps as TextFieldProps,
    index_ToggleButtonProps as ToggleButtonProps,
    index_ToggleButtonGroupProps as ToggleButtonGroupProps,
    index_ElementType as ElementType,
    index_HTMLElementType as HTMLElementType,
    index_ElementProps as ElementProps,
    index_PrimitiveProps as PrimitiveProps,
    index_PrimitivePropsWithRef as PrimitivePropsWithRef,
    index_Primitive as Primitive,
    index_PrimitiveWithForwardRef as PrimitiveWithForwardRef,
    index_ViewProps as ViewProps,
    index_VisuallyHiddenProps as VisuallyHiddenProps,
    index_GridSpanType as GridSpanType,
    index_GridContainerStyleProps as GridContainerStyleProps,
    index_GridItemStyleProps as GridItemStyleProps,
    index_GridProps as GridProps,
  };
}

export { Alert, AlertProps, AlertVariations, AllStyleProps, AmplifyProvider, AriaProps, Authenticator, Badge, BadgeProps, BadgeSizes, BadgeVariations, BaseComponentProps, BaseStyleProps, Button, ButtonGroup, ButtonGroupProps, ButtonProps, ButtonSizes, ButtonTypes, ButtonVariations, CSSLayoutStyleProps, Card, CardProps, CardVariations, CheckboxField, CheckboxFieldProps, Collection, CollectionBaseProps, CollectionProps, CollectionType, CollectionWrapperProps, ColorMode, ComponentClassNames, ComponentPropToStyleProp, ComponentPropsToStylePropsMap, ComponentPropsToStylePropsMapKeys, CountryCodeSelectProps, Divider, DividerOptions, DividerOrientations, DividerProps, DividerSizes, ElementProps, ElementType, Expander, ExpanderItem, ExpanderItemProps, ExpanderProps, FieldClearButtonProps, FieldDescriptionProps, FieldErrorMessageProps, FieldGroupIcon, FieldGroupIconButton, FieldGroupIconButtonProps, FieldGroupIconProps, FieldGroupOptions, FieldGroupOrientation, FieldProps, FieldVariations, Flex, FlexContainerStyleProps, FlexItemStyleProps, FlexProps, Grid, GridCollectionProps, GridContainerStyleProps, GridItemStyleProps, GridProps, GridSpanType, HTMLElementType, Heading, HeadingLevel, HeadingProps, Icon, Icon360, Icon3dRotation, Icon4k, Icon5g, Icon6FtApart, IconAcUnit, IconAccessAlarm, IconAccessAlarms, IconAccessTime, IconAccessibility, IconAccessibilityNew, IconAccessible, IconAccessibleForward, IconAccountBalance, IconAccountBalanceWallet, IconAccountBox, IconAccountCircle, IconAccountTree, IconAdUnits, IconAdb, IconAdd, IconAddAPhoto, IconAddAlarm, IconAddAlert, IconAddBox, IconAddBusiness, IconAddCircle, IconAddCircleOutline, IconAddComment, IconAddIcCall, IconAddLocation, IconAddLocationAlt, IconAddPhotoAlternate, IconAddRoad, IconAddShoppingCart, IconAddTask, IconAddToHomeScreen, IconAddToPhotos, IconAddToQueue, IconAddchart, IconAdjust, IconAdminPanelSettings, IconAgriculture, IconAirlineSeatFlat, IconAirlineSeatFlatAngled, IconAirlineSeatIndividualSuite, IconAirlineSeatLegroomExtra, IconAirlineSeatLegroomNormal, IconAirlineSeatLegroomReduced, IconAirlineSeatReclineExtra, IconAirlineSeatReclineNormal, IconAirplanemodeActive, IconAirplanemodeInactive, IconAirplay, IconAirportShuttle, IconAlarm, IconAlarmAdd, IconAlarmOff, IconAlarmOn, IconAlbum, IconAllInbox, IconAllInclusive, IconAllOut, IconAltRoute, IconAlternateEmail, IconAmpStories, IconAnalytics, IconAnchor, IconAndroid, IconAnnouncement, IconApartment, IconApi, IconAppBlocking, IconAppSettingsAlt, IconApps, IconArchitecture, IconArchive, IconArrowBack, IconArrowBackIos, IconArrowCircleDown, IconArrowCircleUp, IconArrowDownward, IconArrowDropDown, IconArrowDropDownCircle, IconArrowDropUp, IconArrowForward, IconArrowForwardIos, IconArrowLeft, IconArrowRight, IconArrowRightAlt, IconArrowUpward, IconArtTrack, IconArticle, IconAspectRatio, IconAssessment, IconAssignment, IconAssignmentInd, IconAssignmentLate, IconAssignmentReturn, IconAssignmentReturned, IconAssignmentTurnedIn, IconAssistant, IconAssistantPhoto, IconAtm, IconAttachEmail, IconAttachFile, IconAttachMoney, IconAttachment, IconAttribution, IconAudiotrack, IconAutoDelete, IconAutorenew, IconAvTimer, IconBabyChangingStation, IconBackpack, IconBackspace, IconBackup, IconBackupTable, IconBallot, IconBarChart, IconBatchPrediction, IconBathtub, IconBatteryAlert, IconBatteryChargingFull, IconBatteryFull, IconBatteryStd, IconBatteryUnknown, IconBeachAccess, IconBedtime, IconBeenhere, IconBento, IconBikeScooter, IconBiotech, IconBlock, IconBluetooth, IconBluetoothAudio, IconBluetoothConnected, IconBluetoothDisabled, IconBluetoothSearching, IconBlurCircular, IconBlurLinear, IconBlurOff, IconBlurOn, IconBook, IconBookOnline, IconBookmark, IconBookmarkBorder, IconBookmarks, IconBorderAll, IconBorderBottom, IconBorderClear, IconBorderHorizontal, IconBorderInner, IconBorderLeft, IconBorderOuter, IconBorderRight, IconBorderStyle, IconBorderTop, IconBorderVertical, IconBrandingWatermark, IconBrightnessAuto, IconBrightnessHigh, IconBrightnessLow, IconBrightnessMedium, IconBrightness_1, IconBrightness_2, IconBrightness_3, IconBrightness_4, IconBrightness_5, IconBrightness_6, IconBrightness_7, IconBrokenImage, IconBrowserNotSupported, IconBrush, IconBubbleChart, IconBugReport, IconBuild, IconBuildCircle, IconBurstMode, IconBusiness, IconBusinessCenter, IconCached, IconCake, IconCalculate, IconCalendarToday, IconCalendarViewDay, IconCall, IconCallEnd, IconCallMade, IconCallMerge, IconCallMissed, IconCallMissedOutgoing, IconCallReceived, IconCallSplit, IconCallToAction, IconCamera, IconCameraAlt, IconCameraEnhance, IconCameraFront, IconCameraRear, IconCameraRoll, IconCampaign, IconCancel, IconCancelPresentation, IconCancelScheduleSend, IconCardGiftcard, IconCardMembership, IconCardTravel, IconCarpenter, IconCasino, IconCast, IconCastConnected, IconCastForEducation, IconCategory, IconCenterFocusStrong, IconCenterFocusWeak, IconChangeHistory, IconChargingStation, IconChat, IconChatBubble, IconChatBubbleOutline, IconCheck, IconCheckBox, IconCheckBoxOutlineBlank, IconCheckCircle, IconCheckCircleOutline, IconCheckroom, IconChevronLeft, IconChevronRight, IconChildCare, IconChildFriendly, IconChromeReaderMode, IconClass, IconCleanHands, IconCleaningServices, IconClear, IconClearAll, IconClose, IconCloseFullscreen, IconClosedCaption, IconClosedCaptionDisabled, IconCloud, IconCloudCircle, IconCloudDone, IconCloudDownload, IconCloudOff, IconCloudQueue, IconCloudUpload, IconCode, IconCollections, IconCollectionsBookmark, IconColorLens, IconColorize, IconComment, IconCommentBank, IconCommute, IconCompare, IconCompareArrows, IconCompassCalibration, IconComputer, IconConfirmationNumber, IconConnectWithoutContact, IconConstruction, IconContactMail, IconContactPage, IconContactPhone, IconContactSupport, IconContactless, IconContacts, IconContentCopy, IconContentCut, IconContentPaste, IconControlCamera, IconControlPoint, IconControlPointDuplicate, IconCopyright, IconCoronavirus, IconCorporateFare, IconCountertops, IconCreate, IconCreateNewFolder, IconCreditCard, IconCrop, IconCropDin, IconCropFree, IconCropLandscape, IconCropOriginal, IconCropPortrait, IconCropRotate, IconCropSquare, IconCrop_16_9, IconCrop_3_2, IconCrop_5_4, IconCrop_7_5, IconDashboard, IconDataUsage, IconDateRange, IconDeck, IconDehaze, IconDelete, IconDeleteForever, IconDeleteOutline, IconDeleteSweep, IconDepartureBoard, IconDescription, IconDesignServices, IconDesktopAccessDisabled, IconDesktopMac, IconDesktopWindows, IconDetails, IconDeveloperBoard, IconDeveloperMode, IconDeviceHub, IconDeviceUnknown, IconDevices, IconDevicesOther, IconDialerSip, IconDialpad, IconDirections, IconDirectionsBike, IconDirectionsBoat, IconDirectionsBus, IconDirectionsCar, IconDirectionsOff, IconDirectionsRailway, IconDirectionsRun, IconDirectionsSubway, IconDirectionsTransit, IconDirectionsWalk, IconDisabledByDefault, IconDiscFull, IconDns, IconDoDisturb, IconDoDisturbAlt, IconDoDisturbOff, IconDoDisturbOn, IconDoNotStep, IconDoNotTouch, IconDock, IconDomain, IconDomainDisabled, IconDomainVerification, IconDone, IconDoneAll, IconDoneOutline, IconDonutLarge, IconDonutSmall, IconDoubleArrow, IconDownload, IconDownloadDone, IconDrafts, IconDragHandle, IconDragIndicator, IconDriveEta, IconDry, IconDuo, IconDvr, IconDynamicFeed, IconDynamicForm, IconEast, IconEco, IconEdit, IconEditAttributes, IconEditLocation, IconEditRoad, IconEject, IconElderly, IconElectricBike, IconElectricCar, IconElectricMoped, IconElectricScooter, IconElectricalServices, IconElevator, IconEmail, IconEmojiEmotions, IconEmojiEvents, IconEmojiFlags, IconEmojiFoodBeverage, IconEmojiNature, IconEmojiObjects, IconEmojiPeople, IconEmojiSymbols, IconEmojiTransportation, IconEngineering, IconEnhancedEncryption, IconEqualizer, IconError, IconErrorOutline, IconEscalator, IconEscalatorWarning, IconEuro, IconEuroSymbol, IconEvStation, IconEvent, IconEventAvailable, IconEventBusy, IconEventNote, IconEventSeat, IconExitToApp, IconExpandLess, IconExpandMore, IconExplicit, IconExplore, IconExploreOff, IconExposure, IconExposureNeg_1, IconExposureNeg_2, IconExposurePlus_1, IconExposurePlus_2, IconExposureZero, IconExtension, IconFace, IconFaceUnlock, IconFacebook, IconFactCheck, IconFamilyRestroom, IconFastForward, IconFastRewind, IconFastfood, IconFavorite, IconFavoriteBorder, IconFeaturedPlayList, IconFeaturedVideo, IconFeedback, IconFence, IconFiberDvr, IconFiberManualRecord, IconFiberNew, IconFiberPin, IconFiberSmartRecord, IconFileCopy, IconFilter, IconFilterAlt, IconFilterBAndW, IconFilterCenterFocus, IconFilterDrama, IconFilterFrames, IconFilterHdr, IconFilterList, IconFilterNone, IconFilterTiltShift, IconFilterVintage, IconFilter_1, IconFilter_2, IconFilter_3, IconFilter_4, IconFilter_5, IconFilter_6, IconFilter_7, IconFilter_8, IconFilter_9, IconFilter_9Plus, IconFindInPage, IconFindReplace, IconFingerprint, IconFireExtinguisher, IconFireplace, IconFirstPage, IconFitnessCenter, IconFlag, IconFlaky, IconFlare, IconFlashAuto, IconFlashOff, IconFlashOn, IconFlight, IconFlightLand, IconFlightTakeoff, IconFlip, IconFlipCameraAndroid, IconFlipCameraIos, IconFlipToBack, IconFlipToFront, IconFolder, IconFolderOpen, IconFolderShared, IconFolderSpecial, IconFollowTheSigns, IconFontDownload, IconFoodBank, IconFormatAlignCenter, IconFormatAlignJustify, IconFormatAlignLeft, IconFormatAlignRight, IconFormatBold, IconFormatClear, IconFormatColorReset, IconFormatIndentDecrease, IconFormatIndentIncrease, IconFormatItalic, IconFormatLineSpacing, IconFormatListBulleted, IconFormatListNumbered, IconFormatListNumberedRtl, IconFormatPaint, IconFormatQuote, IconFormatShapes, IconFormatSize, IconFormatStrikethrough, IconFormatTextdirectionLToR, IconFormatTextdirectionRToL, IconFormatUnderlined, IconForum, IconForward, IconForwardToInbox, IconForward_10, IconForward_30, IconForward_5, IconFoundation, IconFreeBreakfast, IconFullscreen, IconFullscreenExit, IconFunctions, IconGTranslate, IconGamepad, IconGames, IconGavel, IconGesture, IconGetApp, IconGif, IconGolfCourse, IconGpsFixed, IconGpsNotFixed, IconGpsOff, IconGrade, IconGradient, IconGrading, IconGrain, IconGraphicEq, IconGrass, IconGridOff, IconGridOn, IconGroup, IconGroupAdd, IconGroupWork, IconGroups, IconHandyman, IconHd, IconHdrOff, IconHdrOn, IconHdrStrong, IconHdrWeak, IconHeadset, IconHeadsetMic, IconHealing, IconHearing, IconHearingDisabled, IconHeight, IconHelp, IconHelpCenter, IconHelpOutline, IconHighQuality, IconHighlight, IconHighlightAlt, IconHighlightOff, IconHistory, IconHistoryEdu, IconHistoryToggleOff, IconHome, IconHomeRepairService, IconHomeWork, IconHorizontalRule, IconHorizontalSplit, IconHotTub, IconHotel, IconHourglassBottom, IconHourglassDisabled, IconHourglassEmpty, IconHourglassFull, IconHourglassTop, IconHouse, IconHouseSiding, IconHowToReg, IconHowToVote, IconHttp, IconHttps, IconHvac, IconImage, IconImageAspectRatio, IconImageNotSupported, IconImageSearch, IconImportContacts, IconImportExport, IconImportantDevices, IconInbox, IconIndeterminateCheckBox, IconInfo, IconInput, IconInsertChart, IconInsertChartOutlined, IconInsertComment, IconInsertDriveFile, IconInsertEmoticon, IconInsertInvitation, IconInsertLink, IconInsertPhoto, IconInsights, IconIntegrationInstructions, IconInvertColors, IconInvertColorsOff, IconIso, IconKeyboard, IconKeyboardArrowDown, IconKeyboardArrowLeft, IconKeyboardArrowRight, IconKeyboardArrowUp, IconKeyboardBackspace, IconKeyboardCapslock, IconKeyboardHide, IconKeyboardReturn, IconKeyboardTab, IconKeyboardVoice, IconKingBed, IconKitchen, IconLabel, IconLabelImportant, IconLabelOff, IconLandscape, IconLanguage, IconLaptop, IconLaptopChromebook, IconLaptopMac, IconLaptopWindows, IconLastPage, IconLaunch, IconLayers, IconLayersClear, IconLeaderboard, IconLeakAdd, IconLeakRemove, IconLegendToggle, IconLens, IconLibraryAdd, IconLibraryAddCheck, IconLibraryBooks, IconLibraryMusic, IconLightbulb, IconLineStyle, IconLineWeight, IconLinearScale, IconLink, IconLinkOff, IconLinkedCamera, IconList, IconListAlt, IconLiveHelp, IconLiveTv, IconLocalActivity, IconLocalAirport, IconLocalAtm, IconLocalBar, IconLocalCafe, IconLocalCarWash, IconLocalConvenienceStore, IconLocalDining, IconLocalDrink, IconLocalFireDepartment, IconLocalFlorist, IconLocalGasStation, IconLocalGroceryStore, IconLocalHospital, IconLocalHotel, IconLocalLaundryService, IconLocalLibrary, IconLocalMall, IconLocalMovies, IconLocalOffer, IconLocalParking, IconLocalPharmacy, IconLocalPhone, IconLocalPizza, IconLocalPlay, IconLocalPolice, IconLocalPostOffice, IconLocalPrintshop, IconLocalSee, IconLocalShipping, IconLocalTaxi, IconLocationCity, IconLocationDisabled, IconLocationOff, IconLocationOn, IconLocationSearching, IconLock, IconLockOpen, IconLogin, IconLooks, IconLooksOne, IconLooksTwo, IconLooks_3, IconLooks_4, IconLooks_5, IconLooks_6, IconLoop, IconLoupe, IconLowPriority, IconLoyalty, IconLuggage, IconMail, IconMailOutline, IconMap, IconMapsUgc, IconMarkChatRead, IconMarkChatUnread, IconMarkEmailRead, IconMarkEmailUnread, IconMarkunread, IconMarkunreadMailbox, IconMasks, IconMaximize, IconMediation, IconMedicalServices, IconMeetingRoom, IconMemory, IconMenu, IconMenuBook, IconMenuOpen, IconMergeType, IconMessage, IconMic, IconMicNone, IconMicOff, IconMicrowave, IconMilitaryTech, IconMinimize, IconMiscellaneousServices, IconMissedVideoCall, IconMms, IconMobileFriendly, IconMobileOff, IconMobileScreenShare, IconMode, IconModeComment, IconModelTraining, IconMonetizationOn, IconMoney, IconMoneyOff, IconMoneyOffCsred, IconMonochromePhotos, IconMood, IconMoodBad, IconMoped, IconMore, IconMoreHoriz, IconMoreTime, IconMoreVert, IconMotionPhotosOn, IconMotionPhotosPause, IconMotionPhotosPaused, IconMouse, IconMoveToInbox, IconMovie, IconMovieCreation, IconMovieFilter, IconMultilineChart, IconMultipleStop, IconMuseum, IconMusicNote, IconMusicOff, IconMusicVideo, IconMyLocation, IconNat, IconNature, IconNaturePeople, IconNavigateBefore, IconNavigateNext, IconNavigation, IconNearMe, IconNearMeDisabled, IconNetworkCheck, IconNetworkLocked, IconNewReleases, IconNextPlan, IconNextWeek, IconNfc, IconNightShelter, IconNightsStay, IconNoBackpack, IconNoCell, IconNoDrinks, IconNoEncryption, IconNoEncryptionGmailerrorred, IconNoFlash, IconNoFood, IconNoLuggage, IconNoMeals, IconNoMeetingRoom, IconNoPhotography, IconNoSim, IconNoStroller, IconNoTransfer, IconNorth, IconNorthEast, IconNorthWest, IconNotAccessible, IconNotInterested, IconNotListedLocation, IconNotStarted, IconNote, IconNoteAdd, IconNotes, IconNotificationImportant, IconNotifications, IconNotificationsActive, IconNotificationsNone, IconNotificationsOff, IconNotificationsPaused, IconOfflineBolt, IconOfflinePin, IconOndemandVideo, IconOnlinePrediction, IconOpacity, IconOpenInBrowser, IconOpenInFull, IconOpenInNew, IconOpenWith, IconOutbond, IconOutdoorGrill, IconOutlet, IconOutlinedFlag, IconPages, IconPageview, IconPalette, IconPanTool, IconPanorama, IconPanoramaFishEye, IconPanoramaHorizontal, IconPanoramaVertical, IconPanoramaWideAngle, IconPartyMode, IconPause, IconPauseCircleFilled, IconPauseCircleOutline, IconPausePresentation, IconPayment, IconPayments, IconPedalBike, IconPending, IconPendingActions, IconPeople, IconPeopleAlt, IconPeopleOutline, IconPermCameraMic, IconPermContactCalendar, IconPermDataSetting, IconPermDeviceInformation, IconPermIdentity, IconPermMedia, IconPermPhoneMsg, IconPermScanWifi, IconPerson, IconPersonAdd, IconPersonAddAlt_1, IconPersonAddDisabled, IconPersonOutline, IconPersonPin, IconPersonPinCircle, IconPersonRemove, IconPersonRemoveAlt_1, IconPersonSearch, IconPersonalVideo, IconPestControl, IconPestControlRodent, IconPets, IconPhone, IconPhoneAndroid, IconPhoneBluetoothSpeaker, IconPhoneCallback, IconPhoneDisabled, IconPhoneEnabled, IconPhoneForwarded, IconPhoneInTalk, IconPhoneIphone, IconPhoneLocked, IconPhoneMissed, IconPhonePaused, IconPhonelink, IconPhonelinkErase, IconPhonelinkLock, IconPhonelinkOff, IconPhonelinkRing, IconPhonelinkSetup, IconPhoto, IconPhotoAlbum, IconPhotoCamera, IconPhotoFilter, IconPhotoLibrary, IconPhotoSizeSelectActual, IconPhotoSizeSelectLarge, IconPhotoSizeSelectSmall, IconPictureAsPdf, IconPictureInPicture, IconPictureInPictureAlt, IconPieChart, IconPieChartOutline, IconPinDrop, IconPlace, IconPlagiarism, IconPlayArrow, IconPlayCircleFilled, IconPlayCircleOutline, IconPlayForWork, IconPlaylistAdd, IconPlaylistAddCheck, IconPlaylistPlay, IconPlumbing, IconPlusOne, IconPointOfSale, IconPolicy, IconPoll, IconPolymer, IconPool, IconPortableWifiOff, IconPortrait, IconPostAdd, IconPower, IconPowerInput, IconPowerOff, IconPowerSettingsNew, IconPrecisionManufacturing, IconPregnantWoman, IconPresentToAll, IconPreview, IconPrint, IconPrintDisabled, IconPriorityHigh, IconPrivacyTip, IconProps, IconPsychology, IconPublic, IconPublicOff, IconPublish, IconPublishedWithChanges, IconPushPin, IconQrCode, IconQrCodeScanner, IconQueryBuilder, IconQuestionAnswer, IconQueue, IconQueueMusic, IconQueuePlayNext, IconQuickreply, IconRadio, IconRadioButtonChecked, IconRadioButtonUnchecked, IconRateReview, IconReadMore, IconReceipt, IconReceiptLong, IconRecentActors, IconRecordVoiceOver, IconRedeem, IconRedo, IconReduceCapacity, IconRefresh, IconRemove, IconRemoveCircle, IconRemoveCircleOutline, IconRemoveFromQueue, IconRemoveRedEye, IconRemoveShoppingCart, IconReorder, IconRepeat, IconRepeatOne, IconReplay, IconReplay_10, IconReplay_30, IconReplay_5, IconReply, IconReplyAll, IconReport, IconReportGmailerrorred, IconReportOff, IconReportProblem, IconRequestPage, IconRequestQuote, IconRestaurant, IconRestaurantMenu, IconRestore, IconRestoreFromTrash, IconRestorePage, IconRingVolume, IconRoofing, IconRoom, IconRoomPreferences, IconRoomService, IconRotateLeft, IconRotateRight, IconRotate_90DegreesCcw, IconRoundedCorner, IconRouter, IconRowing, IconRssFeed, IconRule, IconRuleFolder, IconRunCircle, IconRvHookup, IconSanitizer, IconSatellite, IconSave, IconSaveAlt, IconScanner, IconScatterPlot, IconSchedule, IconSchool, IconScience, IconScore, IconScreenLockLandscape, IconScreenLockPortrait, IconScreenLockRotation, IconScreenRotation, IconScreenShare, IconSdCard, IconSdCardAlert, IconSdStorage, IconSearch, IconSearchOff, IconSecurity, IconSelectAll, IconSelfImprovement, IconSend, IconSensorDoor, IconSensorWindow, IconSentimentDissatisfied, IconSentimentNeutral, IconSentimentSatisfied, IconSentimentSatisfiedAlt, IconSentimentVeryDissatisfied, IconSentimentVerySatisfied, IconSetMeal, IconSettings, IconSettingsApplications, IconSettingsBackupRestore, IconSettingsBluetooth, IconSettingsBrightness, IconSettingsCell, IconSettingsEthernet, IconSettingsInputAntenna, IconSettingsInputComponent, IconSettingsInputComposite, IconSettingsInputHdmi, IconSettingsInputSvideo, IconSettingsOverscan, IconSettingsPhone, IconSettingsPower, IconSettingsRemote, IconSettingsSystemDaydream, IconSettingsVoice, IconShare, IconShop, IconShopTwo, IconShoppingBag, IconShoppingBasket, IconShoppingCart, IconShortText, IconShowChart, IconShuffle, IconShutterSpeed, IconSick, IconSignalCellularAlt, IconSignalCellularConnectedNoInternet_4Bar, IconSignalCellularNoSim, IconSignalCellularNull, IconSignalCellularOff, IconSignalCellular_4Bar, IconSignalWifiOff, IconSignalWifi_4Bar, IconSignalWifi_4BarLock, IconSimCard, IconSingleBed, IconSize, IconSkipNext, IconSkipPrevious, IconSlideshow, IconSlowMotionVideo, IconSmartButton, IconSmartphone, IconSmokeFree, IconSmokingRooms, IconSms, IconSmsFailed, IconSnippetFolder, IconSnooze, IconSoap, IconSort, IconSortByAlpha, IconSource, IconSouth, IconSouthEast, IconSouthWest, IconSpa, IconSpaceBar, IconSpeaker, IconSpeakerGroup, IconSpeakerNotes, IconSpeakerNotesOff, IconSpeakerPhone, IconSpeed, IconSpellcheck, IconSports, IconSportsBar, IconSportsBaseball, IconSportsBasketball, IconSportsCricket, IconSportsEsports, IconSportsFootball, IconSportsGolf, IconSportsHandball, IconSportsHockey, IconSportsKabaddi, IconSportsMma, IconSportsMotorsports, IconSportsRugby, IconSportsSoccer, IconSportsTennis, IconSportsVolleyball, IconSquareFoot, IconStackedLineChart, IconStairs, IconStar, IconStarBorder, IconStarBorderPurple500, IconStarHalf, IconStarOutline, IconStarPurple500, IconStarRate, IconStars, IconStayCurrentLandscape, IconStayCurrentPortrait, IconStayPrimaryLandscape, IconStayPrimaryPortrait, IconStickyNote_2, IconStop, IconStopCircle, IconStopScreenShare, IconStorage, IconStore, IconStoreMallDirectory, IconStorefront, IconStraighten, IconStreetview, IconStrikethroughS, IconStroller, IconStyle, IconSubdirectoryArrowLeft, IconSubdirectoryArrowRight, IconSubject, IconSubscript, IconSubscriptions, IconSubtitles, IconSubtitlesOff, IconSubway, IconSuperscript, IconSupervisedUserCircle, IconSupervisorAccount, IconSupport, IconSupportAgent, IconSurroundSound, IconSwapCalls, IconSwapHoriz, IconSwapHorizontalCircle, IconSwapVert, IconSwapVerticalCircle, IconSwitchCamera, IconSwitchLeft, IconSwitchRight, IconSwitchVideo, IconSync, IconSyncAlt, IconSyncDisabled, IconSyncProblem, IconSystemUpdate, IconSystemUpdateAlt, IconTab, IconTabUnselected, IconTableChart, IconTableRows, IconTableView, IconTablet, IconTabletAndroid, IconTabletMac, IconTagFaces, IconTapAndPlay, IconTapas, IconTerrain, IconTextFields, IconTextFormat, IconTextRotateUp, IconTextRotateVertical, IconTextRotationAngledown, IconTextRotationAngleup, IconTextRotationDown, IconTextRotationNone, IconTextSnippet, IconTextsms, IconTexture, IconTheaters, IconThermostat, IconThumbDown, IconThumbDownAlt, IconThumbUp, IconThumbUpAlt, IconThumbsUpDown, IconTimeToLeave, IconTimelapse, IconTimeline, IconTimer, IconTimerOff, IconTimer_10, IconTimer_3, IconTitle, IconToc, IconToday, IconToggleOff, IconToggleOn, IconToll, IconTonality, IconTopic, IconTouchApp, IconTour, IconToys, IconTrackChanges, IconTraffic, IconTrain, IconTram, IconTransferWithinAStation, IconTransform, IconTransitEnterexit, IconTranslate, IconTrendingDown, IconTrendingFlat, IconTrendingUp, IconTripOrigin, IconTty, IconTune, IconTurnedIn, IconTurnedInNot, IconTv, IconTvOff, IconTwoWheeler, IconUmbrella, IconUnarchive, IconUndo, IconUnfoldLess, IconUnfoldMore, IconUnpublished, IconUnsubscribe, IconUpdate, IconUpgrade, IconUpload, IconUsb, IconVerified, IconVerifiedUser, IconVerticalAlignBottom, IconVerticalAlignCenter, IconVerticalAlignTop, IconVerticalSplit, IconVibration, IconVideoCall, IconVideoLabel, IconVideoLibrary, IconVideoSettings, IconVideocam, IconVideocamOff, IconVideogameAsset, IconViewAgenda, IconViewArray, IconViewCarousel, IconViewColumn, IconViewComfy, IconViewCompact, IconViewDay, IconViewHeadline, IconViewList, IconViewModule, IconViewQuilt, IconViewSidebar, IconViewStream, IconViewWeek, IconVignette, IconVisibility, IconVisibilityOff, IconVoiceChat, IconVoiceOverOff, IconVoicemail, IconVolumeDown, IconVolumeMute, IconVolumeOff, IconVolumeUp, IconVpnKey, IconVpnLock, IconWallpaper, IconWarning, IconWarningAmber, IconWash, IconWatch, IconWatchLater, IconWaterDamage, IconWaves, IconWbAuto, IconWbCloudy, IconWbIncandescent, IconWbIridescent, IconWbSunny, IconWc, IconWeb, IconWebAsset, IconWeekend, IconWest, IconWhatshot, IconWheelchairPickup, IconWhereToVote, IconWidgets, IconWifi, IconWifiCalling, IconWifiLock, IconWifiOff, IconWifiProtectedSetup, IconWifiTethering, IconWineBar, IconWork, IconWorkOff, IconWorkOutline, IconWrapText, IconWrongLocation, IconWysiwyg, IconYoutubeSearchedFor, IconZoomIn, IconZoomOut, IconZoomOutMap, Image, ImageOptions, ImageProps, ImageStyleProps, InputMode, InputProps, InputSizes, LabelProps, Link, LinkOptions, LinkProps, ListCollectionProps, Loader, LoaderProps, LoaderSizes, LoaderVariations, Menu, MenuButton, MenuItem, MenuItemProps, MenuProps, Pagination, PaginationCallbackType, PaginationItemProps, PaginationItemType, PaginationProps, PasswordField, PasswordFieldProps, PasswordFieldType, PhoneNumberField, PhoneNumberFieldProps, Placeholder, PlaceholderProps, PlaceholderSizes, Primitive, PrimitiveProps, PrimitivePropsWithRef, PrimitiveWithForwardRef, Radio, RadioGroupField, RadioGroupFieldProps, RadioProps, Rating, RatingOptions, RatingProps, RatingSizes, ResponsiveObject, ResponsiveStyle, ScrollView, ScrollViewProps, SearchField, SearchFieldButtonProps, SearchFieldProps, SelectField, SelectFieldProps, SharedText, ShowPasswordButtonProps, Sizes, SliderField, SliderFieldProps, StepperField, StepperFieldProps, StyleProp, SwitchField, SwitchFieldProps, TabItem, TabItemProps, Table, TableBody, TableBodyProps, TableCell, TableCellElement, TableCellProps, TableFoot, TableFootProps, TableHead, TableHeadProps, TableProps, TableRow, TableRowProps, TableSize, TableVariation, Tabs, TabsProps, TabsSpacing, Text, TextAreaFieldProps, TextAreaProps, TextAreaStyleProps, TextField, TextFieldOptions, TextFieldProps, TextInputFieldProps, TextProps, TextVariation, Theme, ToggleButton, ToggleButtonGroup, ToggleButtonGroupProps, ToggleButtonProps, UsePaginationProps, UsePaginationResult, View, ViewBox, ViewProps, VisuallyHidden, VisuallyHiddenProps, index$1 as components, labelPositions, index as primitives, useAmplify, useAuthenticator, usePagination, useTheme, withAuthenticator };
