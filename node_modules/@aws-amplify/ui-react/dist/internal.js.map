{
  "version": 3,
  "sources": ["../src/internal.tsx", "../src/globals.js", "../src/hooks/useAuth.ts", "../src/hooks/useDataStore.tsx", "../src/hooks/useStorageURL.ts", "../src/primitives/shared/utils.ts", "../src/primitives/shared/datastore.ts"],
  "sourcesContent": ["export * from './hooks/useAuth';\nexport * from './hooks/useDataStore';\nexport * from './hooks/useStorageURL';\nexport * from './primitives/shared/datastore';\nexport {\n  EscapeHatchProps,\n  Variant,\n  findChildOverrides,\n  getOverridesFromVariants,\n  getOverrideProps,\n} from './primitives/shared/utils';\n", "/**\n * This shim exists for `esbuild` to `inject` into every .tsx file.\n * Otherwise, `import * as React from 'react'` would need to be added manually\n *\n * See: https://esbuild.github.io/content-types/#auto-import-for-jsx\n * See: https://github.com/egoist/tsup/issues/390\n */\n\nimport * as React from 'react';\nexport { React };\n", "import Auth, { CognitoUser } from '@aws-amplify/auth';\nimport { Hub } from '@aws-amplify/core';\nimport { useEffect, useState } from 'react';\n\n// Exposes relevant CognitoUser properties\ninterface AuthUser extends CognitoUser {\n  username: string;\n  attributes: Record<string, string>;\n}\n\nexport interface UseAuthResult {\n  user?: AuthUser;\n  isLoading: boolean;\n  error?: Error;\n  fetch?: () => void;\n}\n\n/**\n * Amplify Auth React hook\n * @internal\n */\nexport const useAuth = (): UseAuthResult => {\n  const [result, setResult] = useState<UseAuthResult>({\n    error: undefined,\n    isLoading: true,\n    user: undefined,\n  });\n\n  const handleAuth = ({ payload }) => {\n    switch (payload.event) {\n      case 'signIn':\n        return setResult({ user: payload.data, isLoading: false });\n      case 'signOut':\n        return setResult({ isLoading: false });\n      default:\n        break;\n    }\n  };\n\n  const fetch = () => {\n    setResult({ isLoading: true });\n\n    Auth.currentAuthenticatedUser()\n      .then((user) => setResult({ user, isLoading: false }))\n      .catch((error) => setResult({ error, isLoading: false }));\n\n    // Handle Hub Auth events\n    Hub.listen('auth', handleAuth);\n\n    // Stop listening events on unmount\n    return () => Hub.remove('auth', handleAuth);\n  };\n\n  useEffect(fetch, []);\n\n  return { ...result, fetch };\n};\n", "import { DataStore, PersistentModel } from '@aws-amplify/datastore';\nimport { useEffect, useState } from 'react';\nimport {\n  DataStoreBindingProps,\n  DataStoreCollectionProps,\n  DataStoreCollectionResult,\n  DataStoreItemProps,\n  DataStoreItemResult,\n} from '../primitives/types/datastore';\n\n/**\n * Perform a collection query against a DataStore model\n * @internal\n */\nexport const useDataStoreCollection = <M extends PersistentModel>({\n  model,\n  criteria,\n  pagination,\n}: DataStoreCollectionProps<M>): DataStoreCollectionResult<M> => {\n  const [result, setResult] = useState<DataStoreCollectionResult<M>>({\n    items: [],\n    isLoading: false,\n    error: undefined,\n  });\n\n  const fetch = () => {\n    setResult({ isLoading: true, items: [] });\n\n    const subscription = DataStore.observeQuery(\n      model,\n      criteria,\n      pagination\n    ).subscribe(\n      (snapshot) => setResult({ items: snapshot.items, isLoading: false }),\n      (error) => setResult({ items: [], error, isLoading: false })\n    );\n\n    // Unsubscribe from query updates on unmount\n    if (subscription) {\n      return () => subscription.unsubscribe();\n    }\n  };\n\n  // Fetch on next render cycle\n  useEffect(fetch, []);\n\n  return result;\n};\n\n/**\n * Perform a single record query against a DataStore model\n * @internal\n */\nexport const useDataStoreItem = <M extends PersistentModel>({\n  model,\n  id,\n}: DataStoreItemProps<M>): DataStoreItemResult<M> => {\n  const [item, setItem] = useState<M>();\n  const [isLoading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<Error>();\n\n  const fetch = () => {\n    setLoading(true);\n\n    DataStore.query(model, id)\n      .then(setItem)\n      .catch(setError)\n      .finally(() => setLoading(false));\n  };\n\n  // Fetch on next render cycle\n  useEffect(fetch, []);\n\n  return {\n    error,\n    item,\n    isLoading,\n  };\n};\n\n/**\n * Perform a query against a DataStore model\n * @internal\n */\nexport function useDataStoreBinding<Model extends PersistentModel>(\n  props: DataStoreBindingProps<Model, 'record'>\n): DataStoreItemResult<Model>;\nexport function useDataStoreBinding<Model extends PersistentModel>(\n  props: DataStoreBindingProps<Model, 'collection'>\n): DataStoreCollectionResult<Model>;\nexport function useDataStoreBinding<Model extends PersistentModel>(\n  props:\n    | DataStoreBindingProps<Model, 'record'>\n    | DataStoreBindingProps<Model, 'collection'>\n): DataStoreItemResult<Model> | DataStoreCollectionResult<Model> {\n  return props.type === 'record'\n    ? useDataStoreItem(props)\n    : useDataStoreCollection(props);\n}\n", "import { S3ProviderGetConfig, Storage } from '@aws-amplify/storage';\nimport { useEffect, useState } from 'react';\n\nexport interface UseStorageURLResult {\n  url?: string;\n  error?: Error;\n  isLoading: boolean;\n}\n\n/**\n * Computes a public URL for an Amplify Storage file\n * @internal\n */\nexport const useStorageURL = (key: string, options?: S3ProviderGetConfig) => {\n  const [result, setResult] = useState<UseStorageURLResult>({\n    isLoading: true,\n  });\n\n  // Used to prevent an infinite loop on useEffect, because `options`\n  // will have a different reference on every render\n  const serializedOptions = JSON.stringify(options);\n\n  const fetch = () => {\n    setResult({ isLoading: true });\n\n    const promise = Storage.get(key, options);\n\n    // Attempt to fetch storage object url\n    promise\n      .then((url) => setResult({ url, isLoading: false }))\n      .catch((error) => setResult({ error, isLoading: false }));\n\n    // Cancel current promise on unmount\n    return () => Storage.cancel(promise);\n  };\n\n  useEffect(fetch, [key, serializedOptions]);\n\n  return { ...result, fetch };\n};\n", "import { useId } from '@radix-ui/react-id';\n\nexport const strHasLength = (str: unknown): str is string =>\n  typeof str === 'string' && str.length > 0;\n\nexport const isFunction = (fn: unknown): fn is Function =>\n  typeof fn === 'function';\n\nexport const isNullOrEmptyString = (value: unknown) =>\n  value == null || (typeof value === 'string' && value.length === 0);\n\n/**\n * Create a consecutive integer array from start value to end value.\n * @param start start value\n * @param end end value\n * @returns an integer array with elements from start to end consecutively\n */\nexport const getConsecutiveIntArray = (start: number, end: number) => {\n  const length = end - start + 1;\n  return Array.from({ length }, (_, idx) => idx + start);\n};\n\n/**\n * Create a uuid to use with amplify fields unless\n * an id is provided\n * @param id user specified id\n * @returns string\n */\nexport const useStableId = (id?: string) => useId(id);\n\n// Prefixed autogenerated id created by useStableId\nexport const AUTO_GENERATED_ID_PREFIX = 'radix-id-';\n\n/**\n * This method is used to parse through all of the overrides and\n * only pass the relevant child overrides for a given component.\n * @internal\n * @param overrides escape hatch props\n * @param elementHierarchy\n * @returns overrides only for specified element\n */\nexport const findChildOverrides = (\n  overrides: EscapeHatchProps | null | undefined,\n  elementHierarchy: string\n) => {\n  if (!overrides) {\n    return null;\n  }\n\n  const filteredOverrides = Object.entries(overrides).filter((m) =>\n    m[0].startsWith(elementHierarchy)\n  );\n\n  return Object.assign(\n    {},\n    ...Array.from(filteredOverrides, ([k, v]) => ({\n      [k.replace(elementHierarchy, '')]: v,\n    }))\n  );\n};\n\n/**\n * This helper method is used to get the overrides\n * that will be applied to a component\n * @internal\n * @param overrides escape hatch props\n * @param elementHierarchy\n * @returns component overrides\n */\nexport const getOverrideProps = (\n  overrides: EscapeHatchProps | null | undefined,\n  elementHierarchy: string\n) => {\n  if (!overrides) {\n    return null;\n  }\n\n  const componentOverrides = Object.entries(overrides)\n    .filter(([key]) => key === elementHierarchy)\n    .flatMap(([, value]) => Object.entries(value))\n    .filter((m) => m?.[0]);\n\n  return Object.fromEntries(componentOverrides);\n};\n\nexport type EscapeHatchProps = {\n  [elementHierarchy: string]: Record<string, string>;\n};\n\ntype VariantValues = { [key: string]: string };\nexport type Variant = {\n  variantValues: VariantValues;\n  overrides: EscapeHatchProps;\n};\n\n/**\n * Given a list of style variants, select a given one based on input props\n * @internal\n * @param variants list of style variants to select from\n * @param props variant values to select from the list, may include additional props, to tidy up usage upstream\n */\nexport function getOverridesFromVariants(\n  variants: Variant[],\n  props: { [key: string]: any }\n) {\n  // Get unique keys from the provided variants\n  const variantValueKeys = [\n    ...new Set(\n      variants.flatMap((variant) => Object.keys(variant.variantValues))\n    ),\n  ];\n\n  // Get variant value object from provided props, dropping keys that aren't in variantValueKeys, or whose vals are falsey\n  const variantValuesFromProps: VariantValues = Object.keys(props)\n    .filter((i) => variantValueKeys.includes(i) && props[i])\n    .reduce((acc, key) => {\n      acc[key] = props[key];\n      return acc;\n    }, {});\n\n  const matchedVariants = variants.filter(({ variantValues }) => {\n    return (\n      Object.keys(variantValues).length ===\n        Object.keys(variantValuesFromProps).length &&\n      Object.entries(variantValues).every(\n        ([key, value]) => variantValuesFromProps[key] === value\n      )\n    );\n  });\n\n  return matchedVariants.reduce((overrides, variant) => {\n    return { ...overrides, ...variant.overrides };\n  }, {});\n}\n", "import {\n  ModelPredicate,\n  PersistentModel,\n  ProducerModelPredicate,\n} from '@aws-amplify/datastore';\nimport { DataStorePredicateObject } from '../types/datastore';\nimport { isFunction } from './utils';\n\n/**\n * Given an array of predicates, compose them in sequential order\n */\nconst mergePredicates = <Model extends PersistentModel>(\n  predicates: ProducerModelPredicate<Model>[]\n): ProducerModelPredicate<Model> =>\n  predicates.reduce(\n    (previous, current) => (predicate) => current(previous(predicate)),\n    (predicate) => predicate\n  );\n\n/**\n * Creates a DataStore compatible predicate function from an object representation\n * @internal\n */\nexport const createDataStorePredicate = <Model extends PersistentModel>(\n  predicateObject: DataStorePredicateObject\n): ProducerModelPredicate<Model> => {\n  const {\n    and: groupAnd,\n    or: groupOr,\n    field,\n    operator,\n    operand,\n  } = predicateObject;\n\n  if (Array.isArray(groupAnd)) {\n    const predicates = groupAnd.map((condition) =>\n      createDataStorePredicate<Model>(condition)\n    );\n\n    return (p: ModelPredicate<Model>) => p.and(mergePredicates(predicates));\n  } else if (Array.isArray(groupOr)) {\n    const predicates = groupOr.map((condition) =>\n      createDataStorePredicate<Model>(condition)\n    );\n\n    return (p: ModelPredicate<Model>) => p.or(mergePredicates(predicates));\n  }\n\n  return (predicate: ModelPredicate<Model>) => {\n    if (isFunction(predicate[field])) {\n      return predicate[field].call(predicate, operator, operand);\n    }\n\n    return predicate;\n  };\n};\n"],
  "mappings": "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",
  "names": []
}
